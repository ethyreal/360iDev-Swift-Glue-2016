sil_stage canonical

import Builtin
import Swift
import SwiftShims

// LibCoordErrorDomain
sil_global [let] @LibCoordErrorDomain : $NSString

// static CommandLine._argc
sil_global [fragile] @_TZvOs11CommandLine5_argcVs5Int32 : $Int32

// globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4
sil_global private_external [fragile] @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 : $Builtin.Word

// static CommandLine._unsafeArgv
sil_global [fragile] @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>

sil_scope 1 {  parent @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 }

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
// %0                                             // user: %3
// %1                                             // user: %9
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = global_addr @_TZvOs11CommandLine5_argcVs5Int32 : $*Int32, scope 1 // user: %3
  store %0 to %2 : $*Int32, scope 1               // id: %3
  %4 = global_addr @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 : $*Builtin.Word, scope 1 // user: %5
  %5 = address_to_pointer %4 : $*Builtin.Word to $Builtin.RawPointer, scope 1 // user: %7
  // function_ref globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4
  %6 = function_ref @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 : $@convention(thin) () -> (), scope 1 // user: %7
  %7 = builtin "once"(%5 : $Builtin.RawPointer, %6 : $@convention(thin) () -> ()) : $(), scope 1
  %8 = global_addr @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1 // user: %9
  store %1 to %8 : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 1 // id: %9
  %10 = tuple (), scope 1
  %11 = integer_literal $Builtin.Int32, 0, scope 1 // user: %12
  %12 = struct $Int32 (%11 : $Builtin.Int32), scope 1 // user: %13
  return %12 : $Int32, scope 1                    // id: %13
}

sil_scope 2 {  parent @_TFs20_stdlib_didEnterMainFT4argcVs5Int324argvGSpGSqGSpVs4Int8____T_ : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> () }

// _stdlib_didEnterMain(argc : Int32, argv : UnsafeMutablePointer<UnsafeMutablePointer<Int8>?>) -> ()
sil public_external [transparent] [fragile] @_TFs20_stdlib_didEnterMainFT4argcVs5Int324argvGSpGSqGSpVs4Int8____T_ : $@convention(thin) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> () {
// %0                                             // users: %5, %2
// %1                                             // users: %11, %3
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  debug_value %0 : $Int32, scope 2                // id: %2
  debug_value %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 2 // id: %3
  %4 = global_addr @_TZvOs11CommandLine5_argcVs5Int32 : $*Int32, scope 2 // user: %5
  store %0 to %4 : $*Int32, scope 2               // id: %5
  %6 = global_addr @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 : $*Builtin.Word, scope 2 // user: %7
  %7 = address_to_pointer %6 : $*Builtin.Word to $Builtin.RawPointer, scope 2 // user: %9
  // function_ref globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4
  %8 = function_ref @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 : $@convention(thin) () -> (), scope 2 // user: %9
  %9 = builtin "once"(%7 : $Builtin.RawPointer, %8 : $@convention(thin) () -> ()) : $(), scope 2
  %10 = global_addr @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 2 // user: %11
  store %1 to %10 : $*UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>, scope 2 // id: %11
  %12 = tuple (), scope 2                         // user: %13
  return %12 : $(), scope 2                       // id: %13
}

sil_scope 3 {  parent @_TZFE9LibCoordsOSC15CoordinateErrorg14_nsErrorDomainSS : $@convention(method) (@thin CoordinateError.Type) -> @owned String }
sil_scope 4 {  parent 3 }

// static CoordinateError._nsErrorDomain.getter
sil @_TZFE9LibCoordsOSC15CoordinateErrorg14_nsErrorDomainSS : $@convention(method) (@thin CoordinateError.Type) -> @owned String {
// %0                                             // user: %1
bb0(%0 : $@thin CoordinateError.Type):
  debug_value %0 : $@thin CoordinateError.Type, let, name "self", argno 1, scope 3 // id: %1
  %2 = string_literal utf8 "LibCoords.CoordinateError", scope 4 // user: %7
  %3 = integer_literal $Builtin.Word, 25, scope 4 // user: %7
  %4 = integer_literal $Builtin.Int1, -1, scope 4 // user: %7
  %5 = metatype $@thin String.Type, scope 4       // user: %7
  // function_ref String.init(_builtinStringLiteral : Builtin.RawPointer, utf8CodeUnitCount : Builtin.Word, isASCII : Builtin.Int1) -> String
  %6 = function_ref @_TFSSCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__SS : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 4 // user: %7
  %7 = apply %6(%2, %3, %4, %5) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String, scope 4 // user: %8
  return %7 : $String, scope 4                    // id: %8
}


// String.init(_builtinStringLiteral : Builtin.RawPointer, utf8CodeUnitCount : Builtin.Word, isASCII : Builtin.Int1) -> String
sil [fragile] [readonly] [_semantics "string.makeUTF8"] @_TFSSCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__SS : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

sil_scope 5 {  parent @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g7_domainSS : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @owned String }

// protocol witness for Error._domain.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g7_domainSS : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @owned String {
// %0                                             // user: %2
bb0(%0 : $*CoordinateError):
  %1 = alloc_stack $CoordinateError, scope 5      // users: %5, %4, %2
  copy_addr %0 to [initialization] %1 : $*CoordinateError, scope 5 // id: %2
  // function_ref __BridgedNSError<A where ...>._domain.getter
  %3 = function_ref @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_g7_domainSS : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> @owned String, scope 5 // user: %4
  %4 = apply %3<CoordinateError, Int, Int, Int, Int, Int>(%1) : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> @owned String, scope 5 // user: %6
  dealloc_stack %1 : $*CoordinateError, scope 5   // id: %5
  return %4 : $String, scope 5                    // id: %6
}


// __BridgedNSError<A where ...>._domain.getter
sil @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_g7_domainSS : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> @owned String

sil_scope 6 {  parent @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g5_codeSi : $@convention(witness_method) (@in_guaranteed CoordinateError) -> Int }

// protocol witness for Error._code.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g5_codeSi : $@convention(witness_method) (@in_guaranteed CoordinateError) -> Int {
// %0                                             // user: %2
bb0(%0 : $*CoordinateError):
  %1 = alloc_stack $CoordinateError, scope 6      // users: %5, %4, %2
  copy_addr %0 to [initialization] %1 : $*CoordinateError, scope 6 // id: %2
  // function_ref __BridgedNSError<A where ...>._code.getter
  %3 = function_ref @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_g5_codeSi : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> Int, scope 6 // user: %4
  %4 = apply %3<CoordinateError, Int, Int, Int, Int, Int>(%1) : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> Int, scope 6 // user: %6
  dealloc_stack %1 : $*CoordinateError, scope 6   // id: %5
  return %4 : $Int, scope 6                       // id: %6
}


// __BridgedNSError<A where ...>._code.getter
sil @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_g5_codeSi : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> Int

sil_scope 7 {  parent @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g9_userInfoGSqP__ : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @out Optional<Any> }

// protocol witness for Error._userInfo.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g9_userInfoGSqP__ : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @out Optional<Any> {
// %0                                             // user: %5
// %1                                             // user: %3
bb0(%0 : $*Optional<Any>, %1 : $*CoordinateError):
  %2 = alloc_stack $CoordinateError, scope 7      // users: %7, %5, %3
  copy_addr %1 to [initialization] %2 : $*CoordinateError, scope 7 // id: %3
  // function_ref Error._userInfo.getter
  %4 = function_ref @_TFEsPs5Errorg9_userInfoGSqP__ : $@convention(method) <τ_0_0 where τ_0_0 : Error> (@in_guaranteed τ_0_0) -> @out Optional<Any>, scope 7 // user: %5
  %5 = apply %4<CoordinateError>(%0, %2) : $@convention(method) <τ_0_0 where τ_0_0 : Error> (@in_guaranteed τ_0_0) -> @out Optional<Any>, scope 7
  %6 = tuple (), scope 7                          // user: %8
  dealloc_stack %2 : $*CoordinateError, scope 7   // id: %7
  return %6 : $(), scope 7                        // id: %8
}


// Error._userInfo.getter
sil @_TFEsPs5Errorg9_userInfoGSqP__ : $@convention(method) <τ_0_0 where τ_0_0 : Error> (@in_guaranteed τ_0_0) -> @out Optional<Any>

sil_scope 8 {  parent @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_19_getEmbeddedNSErrorfT_GSqPs9AnyObject__ : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @owned Optional<AnyObject> }

// protocol witness for Error._getEmbeddedNSError() -> AnyObject? in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_19_getEmbeddedNSErrorfT_GSqPs9AnyObject__ : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @owned Optional<AnyObject> {
// %0                                             // user: %2
bb0(%0 : $*CoordinateError):
  %1 = alloc_stack $CoordinateError, scope 8      // users: %5, %4, %2
  copy_addr %0 to [initialization] %1 : $*CoordinateError, scope 8 // id: %2
  // function_ref Error._getEmbeddedNSError() -> AnyObject?
  %3 = function_ref @_TFEsPs5Error19_getEmbeddedNSErrorfT_GSqPs9AnyObject__ : $@convention(method) <τ_0_0 where τ_0_0 : Error> (@in_guaranteed τ_0_0) -> @owned Optional<AnyObject>, scope 8 // user: %4
  %4 = apply %3<CoordinateError>(%1) : $@convention(method) <τ_0_0 where τ_0_0 : Error> (@in_guaranteed τ_0_0) -> @owned Optional<AnyObject>, scope 8 // user: %6
  dealloc_stack %1 : $*CoordinateError, scope 8   // id: %5
  return %4 : $Optional<AnyObject>, scope 8       // id: %6
}


// Error._getEmbeddedNSError() -> AnyObject?
sil @_TFEsPs5Error19_getEmbeddedNSErrorfT_GSqPs9AnyObject__ : $@convention(method) <τ_0_0 where τ_0_0 : Error> (@in_guaranteed τ_0_0) -> @owned Optional<AnyObject>

sil_scope 9 {  parent @_TTWOSC15CoordinateError10Foundation15_BridgedNSError9LibCoordsZFS1_g14_nsErrorDomainSS : $@convention(witness_method) (@thick CoordinateError.Type) -> @owned String }

// protocol witness for static _BridgedNSError._nsErrorDomain.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateError10Foundation15_BridgedNSError9LibCoordsZFS1_g14_nsErrorDomainSS : $@convention(witness_method) (@thick CoordinateError.Type) -> @owned String {
bb0(%0 : $@thick CoordinateError.Type):
  %1 = metatype $@thin CoordinateError.Type, scope 9 // user: %3
  // function_ref static CoordinateError._nsErrorDomain.getter
  %2 = function_ref @_TZFE9LibCoordsOSC15CoordinateErrorg14_nsErrorDomainSS : $@convention(method) (@thin CoordinateError.Type) -> @owned String, scope 9 // user: %3
  %3 = apply %2(%1) : $@convention(method) (@thin CoordinateError.Type) -> @owned String, scope 9 // user: %4
  return %3 : $String, scope 9                    // id: %4
}

sil_scope 10 {  parent @_TTWOSC15CoordinateError10Foundation16__BridgedNSError9LibCoordsZFS1_g14_nsErrorDomainSS : $@convention(witness_method) (@thick CoordinateError.Type) -> @owned String }

// protocol witness for static __BridgedNSError._nsErrorDomain.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateError10Foundation16__BridgedNSError9LibCoordsZFS1_g14_nsErrorDomainSS : $@convention(witness_method) (@thick CoordinateError.Type) -> @owned String {
bb0(%0 : $@thick CoordinateError.Type):
  %1 = metatype $@thin CoordinateError.Type, scope 10 // user: %3
  // function_ref static CoordinateError._nsErrorDomain.getter
  %2 = function_ref @_TZFE9LibCoordsOSC15CoordinateErrorg14_nsErrorDomainSS : $@convention(method) (@thin CoordinateError.Type) -> @owned String, scope 10 // user: %3
  %3 = apply %2(%1) : $@convention(method) (@thin CoordinateError.Type) -> @owned String, scope 10 // user: %4
  return %3 : $String, scope 10                   // id: %4
}

sil_scope 11 {  parent @_TTWOSC15CoordinateErrors16RawRepresentable9LibCoordsFS0_CfT8rawValuewx8RawValue_GSqx_ : $@convention(witness_method) (@in Int, @thick CoordinateError.Type) -> @out Optional<CoordinateError> }

// protocol witness for RawRepresentable.init(rawValue : A.RawValue) -> A? in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors16RawRepresentable9LibCoordsFS0_CfT8rawValuewx8RawValue_GSqx_ : $@convention(witness_method) (@in Int, @thick CoordinateError.Type) -> @out Optional<CoordinateError> {
// %0                                             // user: %7
// %1                                             // user: %3
bb0(%0 : $*Optional<CoordinateError>, %1 : $*Int, %2 : $@thick CoordinateError.Type):
  %3 = load %1 : $*Int, scope 11                  // user: %6
  %4 = metatype $@thin CoordinateError.Type, scope 11 // user: %6
  // function_ref CoordinateError.init(rawValue : Int) -> CoordinateError?
  %5 = function_ref @_TFOSC15CoordinateErrorCfT8rawValueSi_GSqS__ : $@convention(method) (Int, @thin CoordinateError.Type) -> Optional<CoordinateError>, scope 11 // user: %6
  %6 = apply %5(%3, %4) : $@convention(method) (Int, @thin CoordinateError.Type) -> Optional<CoordinateError>, scope 11 // user: %7
  store %6 to %0 : $*Optional<CoordinateError>, scope 11 // id: %7
  %8 = tuple (), scope 11                         // user: %9
  return %8 : $(), scope 11                       // id: %9
}

sil_scope 12 {  parent @_TFOSC15CoordinateErrorCfT8rawValueSi_GSqS__ : $@convention(method) (Int, @thin CoordinateError.Type) -> Optional<CoordinateError> }
sil_scope 13 {  parent 12 }

// CoordinateError.init(rawValue : Int) -> CoordinateError?
sil shared @_TFOSC15CoordinateErrorCfT8rawValueSi_GSqS__ : $@convention(method) (Int, @thin CoordinateError.Type) -> Optional<CoordinateError> {
// %0                                             // users: %4, %3
bb0(%0 : $Int, %1 : $@thin CoordinateError.Type):
  %2 = alloc_stack $CoordinateError, var, name "self", argno 2, scope 12 // users: %5, %8
  debug_value %0 : $Int, let, name "rawValue", argno 1, scope 12 // id: %3
  %4 = unchecked_trivial_bit_cast %0 : $Int to $CoordinateError, scope 13 // users: %6, %5
  store %4 to %2 : $*CoordinateError, scope 13    // id: %5
  %6 = enum $Optional<CoordinateError>, #Optional.some!enumelt.1, %4 : $CoordinateError, scope 13 // user: %9
  br bb1, scope 13                                // id: %7

bb1:                                              // Preds: bb0
  dealloc_stack %2 : $*CoordinateError, scope 12  // id: %8
  return %6 : $Optional<CoordinateError>, scope 12 // id: %9
}

sil_scope 14 {  parent @_TTWOSC15CoordinateErrors16RawRepresentable9LibCoordsFS0_g8rawValuewx8RawValue : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @out Int }

// protocol witness for RawRepresentable.rawValue.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors16RawRepresentable9LibCoordsFS0_g8rawValuewx8RawValue : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @out Int {
// %0                                             // user: %5
// %1                                             // user: %2
bb0(%0 : $*Int, %1 : $*CoordinateError):
  %2 = load %1 : $*CoordinateError, scope 14      // user: %4
  // function_ref CoordinateError.rawValue.getter
  %3 = function_ref @_TFOSC15CoordinateErrorg8rawValueSi : $@convention(method) (CoordinateError) -> Int, scope 14 // user: %4
  %4 = apply %3(%2) : $@convention(method) (CoordinateError) -> Int, scope 14 // user: %5
  store %4 to %0 : $*Int, scope 14                // id: %5
  %6 = tuple (), scope 14                         // user: %7
  return %6 : $(), scope 14                       // id: %7
}

sil_scope 15 {  parent @_TFOSC15CoordinateErrorg8rawValueSi : $@convention(method) (CoordinateError) -> Int }
sil_scope 16 {  parent 15 }

// CoordinateError.rawValue.getter
sil shared @_TFOSC15CoordinateErrorg8rawValueSi : $@convention(method) (CoordinateError) -> Int {
// %0                                             // users: %2, %1
bb0(%0 : $CoordinateError):
  debug_value %0 : $CoordinateError, let, name "self", argno 1, scope 15 // id: %1
  %2 = unchecked_trivial_bit_cast %0 : $CoordinateError to $Int, scope 16 // user: %3
  return %2 : $Int, scope 16                      // id: %3
}

sil_scope 17 {  parent @_TTWOSC15CoordinateError10Foundation26_ObjectiveCBridgeableError9LibCoordsFS1_CfT15_bridgedNSErrorCSo7NSError_GSqx_ : $@convention(witness_method) (@owned NSError, @thick CoordinateError.Type) -> @out Optional<CoordinateError> }

// protocol witness for _ObjectiveCBridgeableError.init(_bridgedNSError : NSError) -> A? in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateError10Foundation26_ObjectiveCBridgeableError9LibCoordsFS1_CfT15_bridgedNSErrorCSo7NSError_GSqx_ : $@convention(witness_method) (@owned NSError, @thick CoordinateError.Type) -> @out Optional<CoordinateError> {
// %0                                             // user: %4
// %1                                             // user: %4
// %2                                             // user: %4
bb0(%0 : $*Optional<CoordinateError>, %1 : $NSError, %2 : $@thick CoordinateError.Type):
  // function_ref __BridgedNSError<A where ...>.init(_bridgedNSError : NSError) -> A?
  %3 = function_ref @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_CfT15_bridgedNSErrorCSo7NSError_GSqx_ : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@owned NSError, @thick τ_0_0.Type) -> @out Optional<τ_0_0>, scope 17 // user: %4
  %4 = apply %3<CoordinateError, Int, Int, Int, Int, Int>(%0, %1, %2) : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@owned NSError, @thick τ_0_0.Type) -> @out Optional<τ_0_0>, scope 17
  %5 = tuple (), scope 17                         // user: %6
  return %5 : $(), scope 17                       // id: %6
}


// __BridgedNSError<A where ...>.init(_bridgedNSError : NSError) -> A?
sil @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_CfT15_bridgedNSErrorCSo7NSError_GSqx_ : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@owned NSError, @thick τ_0_0.Type) -> @out Optional<τ_0_0>

sil_scope 18 {  parent @_TTWOSC15CoordinateErrors9_Hashable15LibCoordsBridgeFS0_14_toAnyHashablefT_Vs11AnyHashable : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @out AnyHashable }

// protocol witness for _Hashable._toAnyHashable() -> AnyHashable in conformance CoordinateError
sil shared [transparent] [thunk] @_TTWOSC15CoordinateErrors9_Hashable15LibCoordsBridgeFS0_14_toAnyHashablefT_Vs11AnyHashable : $@convention(witness_method) (@in_guaranteed CoordinateError) -> @out AnyHashable {
// %0                                             // user: %5
// %1                                             // user: %3
bb0(%0 : $*AnyHashable, %1 : $*CoordinateError):
  %2 = alloc_stack $CoordinateError, scope 18     // users: %7, %5, %3
  copy_addr %1 to [initialization] %2 : $*CoordinateError, scope 18 // id: %3
  // function_ref Hashable._toAnyHashable() -> AnyHashable
  %4 = function_ref @_TFEsPs8Hashable14_toAnyHashablefT_Vs11AnyHashable : $@convention(method) <τ_0_0 where τ_0_0 : Hashable> (@in_guaranteed τ_0_0) -> @out AnyHashable, scope 18 // user: %5
  %5 = apply %4<CoordinateError>(%0, %2) : $@convention(method) <τ_0_0 where τ_0_0 : Hashable> (@in_guaranteed τ_0_0) -> @out AnyHashable, scope 18
  %6 = tuple (), scope 18                         // user: %8
  dealloc_stack %2 : $*CoordinateError, scope 18  // id: %7
  return %6 : $(), scope 18                       // id: %8
}


// Hashable._toAnyHashable() -> AnyHashable
sil @_TFEsPs8Hashable14_toAnyHashablefT_Vs11AnyHashable : $@convention(method) <τ_0_0 where τ_0_0 : Hashable> (@in_guaranteed τ_0_0) -> @out AnyHashable

sil_scope 19 {  parent @_TTWOSC15CoordinateErrors9Equatable15LibCoordsBridgeZFS0_oi2eefTxx_Sb : $@convention(witness_method) (@in CoordinateError, @in CoordinateError, @thick CoordinateError.Type) -> Bool }

// protocol witness for static Equatable.== infix(A, A) -> Bool in conformance CoordinateError
sil shared [transparent] [thunk] @_TTWOSC15CoordinateErrors9Equatable15LibCoordsBridgeZFS0_oi2eefTxx_Sb : $@convention(witness_method) (@in CoordinateError, @in CoordinateError, @thick CoordinateError.Type) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
// %2                                             // user: %4
bb0(%0 : $*CoordinateError, %1 : $*CoordinateError, %2 : $@thick CoordinateError.Type):
  // function_ref static __BridgedNSError<A where ...>.== infix(A, A) -> Bool
  %3 = function_ref @_TZFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_oi2eefTxx_Sb : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in τ_0_0, @in τ_0_0, @thick τ_0_0.Type) -> Bool, scope 19 // user: %4
  %4 = apply %3<CoordinateError, Int, Int, Int, Int, Int>(%0, %1, %2) : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in τ_0_0, @in τ_0_0, @thick τ_0_0.Type) -> Bool, scope 19 // user: %5
  return %4 : $Bool, scope 19                     // id: %5
}


// static __BridgedNSError<A where ...>.== infix(A, A) -> Bool
sil @_TZFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_oi2eefTxx_Sb : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in τ_0_0, @in τ_0_0, @thick τ_0_0.Type) -> Bool

sil_scope 20 {  parent @_TTWOSC15CoordinateErrors8Hashable9LibCoordsFS0_g9hashValueSi : $@convention(witness_method) (@in_guaranteed CoordinateError) -> Int }

// protocol witness for Hashable.hashValue.getter in conformance CoordinateError
sil [transparent] [thunk] @_TTWOSC15CoordinateErrors8Hashable9LibCoordsFS0_g9hashValueSi : $@convention(witness_method) (@in_guaranteed CoordinateError) -> Int {
// %0                                             // user: %2
bb0(%0 : $*CoordinateError):
  %1 = alloc_stack $CoordinateError, scope 20     // users: %5, %4, %2
  copy_addr %0 to [initialization] %1 : $*CoordinateError, scope 20 // id: %2
  // function_ref __BridgedNSError<A where ...>.hashValue.getter
  %3 = function_ref @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_g9hashValueSi : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> Int, scope 20 // user: %4
  %4 = apply %3<CoordinateError, Int, Int, Int, Int, Int>(%1) : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> Int, scope 20 // user: %6
  dealloc_stack %1 : $*CoordinateError, scope 20  // id: %5
  return %4 : $Int, scope 20                      // id: %6
}


// __BridgedNSError<A where ...>.hashValue.getter
sil @_TFe10FoundationRxS_16__BridgedNSErrorxs16RawRepresentablewxPS1_8RawValues13SignedIntegerrS0_g9hashValueSi : $@convention(method) <τ_0_0 where τ_0_0 : __BridgedNSError, τ_0_0 : RawRepresentable, τ_0_0.RawValue : SignedInteger, τ_0_0.RawValue.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral, τ_0_0.RawValue.Stride : SignedNumber, τ_0_0.RawValue.Stride.IntegerLiteralType : _ExpressibleByBuiltinIntegerLiteral> (@in_guaranteed τ_0_0) -> Int

sil_scope 21 { loc "Location.swift":29:5 parent @_TFV9LibCoords8LocationCfT10coordinateTOS_8PositionSd_4nameSS_S0_ : $@convention(method) (Position, Double, @owned String, @thin Location.Type) -> @owned Location }
sil_scope 22 { loc "Location.swift":32:5 parent 21 }

// Location.init(coordinate : (Position, Double), name : String) -> Location
sil @_TFV9LibCoords8LocationCfT10coordinateTOS_8PositionSd_4nameSS_S0_ : $@convention(method) (Position, Double, @owned String, @thin Location.Type) -> @owned Location {
// %0                                             // user: %5
// %1                                             // user: %5
// %2                                             // users: %23, %19, %17, %21, %15, %7
bb0(%0 : $Position, %1 : $Double, %2 : $String, %3 : $@thin Location.Type):
  %4 = alloc_stack $Location, var, name "self", argno 3, loc "Location.swift":29:5, scope 21 // users: %10, %16, %25
  %5 = tuple (%0 : $Position, %1 : $Double), loc "Location.swift":29:10, scope 21 // users: %9, %8, %6
  debug_value %5 : $(Position, Double), let, name "coordinate", argno 1, loc "Location.swift":29:10, scope 21 // id: %6
  debug_value %2 : $String, let, name "name", argno 2, loc "Location.swift":29:34, scope 21 // id: %7
  %8 = tuple_extract %5 : $(Position, Double), 0, loc "Location.swift":30:27, scope 22 // users: %22, %18, %12
  %9 = tuple_extract %5 : $(Position, Double), 1, loc "Location.swift":30:27, scope 22 // users: %22, %18, %14
  %10 = struct_element_addr %4 : $*Location, #Location.coordinate, loc "Location.swift":30:25, scope 22 // users: %13, %11
  %11 = tuple_element_addr %10 : $*(Position, Double), 0, loc "Location.swift":30:25, scope 22 // user: %12
  store %8 to %11 : $*Position, loc "Location.swift":30:25, scope 22 // id: %12
  %13 = tuple_element_addr %10 : $*(Position, Double), 1, loc "Location.swift":30:25, scope 22 // user: %14
  store %9 to %13 : $*Double, loc "Location.swift":30:25, scope 22 // id: %14
  retain_value %2 : $String, loc "Location.swift":31:21, scope 22 // id: %15
  %16 = struct_element_addr %4 : $*Location, #Location.name, loc "Location.swift":31:19, scope 22 // user: %17
  store %2 to %16 : $*String, loc "Location.swift":31:19, scope 22 // id: %17
  %18 = tuple (%8 : $Position, %9 : $Double), loc "Location.swift":32:5, scope 22 // user: %19
  %19 = struct $Location (%18 : $(Position, Double), %2 : $String), loc "Location.swift":32:5, scope 22 // users: %20, %26
  retain_value %19 : $Location, loc "Location.swift":32:5, scope 22 // id: %20
  release_value %2 : $String, loc "Location.swift":32:5, scope 22 // id: %21
  %22 = tuple (%8 : $Position, %9 : $Double), loc "Location.swift":29:5, scope 22 // user: %23
  %23 = struct $Location (%22 : $(Position, Double), %2 : $String), loc "Location.swift":29:5, scope 22 // user: %24
  release_value %23 : $Location, loc "Location.swift":29:5, scope 22 // id: %24
  dealloc_stack %4 : $*Location, loc "Location.swift":29:5, scope 22 // id: %25
  return %19 : $Location, loc "Location.swift":32:5, scope 22 // id: %26
}

sil_scope 23 { loc "Location.swift":34:17 parent @_TFV9LibCoords8Location6lengthfT_Sd : $@convention(method) (@guaranteed Location) -> Double }
sil_scope 24 { loc "Location.swift":47:5 parent 23 }
sil_scope 25 { loc "Location.swift":46:9 parent 24 }
sil_scope 26 { loc "Location.swift":46:9 parent 25 }
sil_scope 27 { loc "Location.swift":38:42 parent 26 }
sil_scope 28 { loc "Location.swift":46:9 parent 25 }
sil_scope 29 { loc "Location.swift":40:34 parent 28 }
sil_scope 30 { loc "Location.swift":46:9 parent 25 }
sil_scope 31 { loc "Location.swift":45:20 parent 30 }
sil_scope 32 { loc "Location.swift":44:13 parent 31 }
sil_scope 33 { loc "Location.swift":44:13 parent 32 }

// Location.length() -> Double
sil @_TFV9LibCoords8Location6lengthfT_Sd : $@convention(method) (@guaranteed Location) -> Double {
// %0                                             // users: %6, %2, %1
bb0(%0 : $Location):
  debug_value %0 : $Location, let, name "self", argno 1, loc "Location.swift":34:17, scope 23 // id: %1
  %2 = struct_extract %0 : $Location, #Location.coordinate, loc "Location.swift":35:22, scope 24 // users: %4, %3
  %3 = tuple_extract %2 : $(Position, Double), 0, loc "Location.swift":35:22, scope 24
  %4 = tuple_extract %2 : $(Position, Double), 1, loc "Location.swift":35:22, scope 24 // users: %42, %41, %25, %24, %55, %5
  debug_value %4 : $Double, let, name "y", loc "Location.swift":35:13, scope 24 // id: %5
  %6 = struct_extract %0 : $Location, #Location.coordinate, loc "Location.swift":36:22, scope 24 // users: %8, %7
  %7 = tuple_extract %6 : $(Position, Double), 0, loc "Location.swift":36:22, scope 24 // user: %9
  %8 = tuple_extract %6 : $(Position, Double), 1, loc "Location.swift":36:22, scope 24
  switch_enum %7 : $Position, case #Position.A!enumelt.1: bb1, case #Position.B!enumelt.1: bb2, case #Position.C!enumelt.1: bb3, loc "Location.swift":37:14, scope 25 // id: %9

// %10                                            // users: %14, %13, %11
bb1(%10 : $Int):                                  // Preds: bb0
  debug_value %10 : $Int, let, name "x", loc "Location.swift":37:21, scope 26 // id: %11
  // function_ref sqrt
  %12 = function_ref @sqrt : $@convention(c) (Double) -> Double, loc "Location.swift":38:20, scope 27 // user: %32
  %13 = struct_extract %10 : $Int, #Int._value, loc "Location.swift":38:33, scope 27 // user: %16
  %14 = struct_extract %10 : $Int, #Int._value, loc "Location.swift":38:33, scope 27 // user: %16
  %15 = integer_literal $Builtin.Int1, -1, loc "Location.swift":38:33, scope 27 // user: %16
  %16 = builtin "smul_with_overflow_Int64"(%13 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), loc "Location.swift":38:33, scope 27 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, loc "Location.swift":38:33, scope 27 // user: %20
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, loc "Location.swift":38:33, scope 27 // user: %19
  cond_fail %18 : $Builtin.Int1, loc "Location.swift":38:33, scope 27 // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64), loc "Location.swift":38:33, scope 27 // user: %21
  %21 = struct_extract %20 : $Int, #Int._value, loc "Location.swift":38:35, scope 27 // user: %22
  %22 = builtin "sitofp_Int64_FPIEEE64"(%21 : $Builtin.Int64) : $Builtin.FPIEEE64, loc "Location.swift":38:35, scope 27 // user: %23
  %23 = struct $Double (%22 : $Builtin.FPIEEE64), loc "Location.swift":38:35, scope 27 // user: %28
  %24 = struct_extract %4 : $Double, #Double._value, loc "Location.swift":38:40, scope 27 // user: %26
  %25 = struct_extract %4 : $Double, #Double._value, loc "Location.swift":38:40, scope 27 // user: %26
  %26 = builtin "fmul_FPIEEE64"(%24 : $Builtin.FPIEEE64, %25 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":38:40, scope 27 // user: %27
  %27 = struct $Double (%26 : $Builtin.FPIEEE64), loc "Location.swift":38:40, scope 27 // user: %29
  %28 = struct_extract %23 : $Double, #Double._value, loc "Location.swift":38:37, scope 27 // user: %30
  %29 = struct_extract %27 : $Double, #Double._value, loc "Location.swift":38:37, scope 27 // user: %30
  %30 = builtin "fadd_FPIEEE64"(%28 : $Builtin.FPIEEE64, %29 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":38:37, scope 27 // user: %31
  %31 = struct $Double (%30 : $Builtin.FPIEEE64), loc "Location.swift":38:37, scope 27 // user: %32
  %32 = apply %12(%31) : $@convention(c) (Double) -> Double, loc "Location.swift":38:42, scope 27 // user: %33
  br bb6(%32 : $Double), loc "Location.swift":38:13, scope 27 // id: %33

// %34                                            // users: %38, %37, %35
bb2(%34 : $Double):                               // Preds: bb0
  debug_value %34 : $Double, let, name "x", loc "Location.swift":39:21, scope 28 // id: %35
  // function_ref sqrt
  %36 = function_ref @sqrt : $@convention(c) (Double) -> Double, loc "Location.swift":40:20, scope 29 // user: %49
  %37 = struct_extract %34 : $Double, #Double._value, loc "Location.swift":40:26, scope 29 // user: %39
  %38 = struct_extract %34 : $Double, #Double._value, loc "Location.swift":40:26, scope 29 // user: %39
  %39 = builtin "fmul_FPIEEE64"(%37 : $Builtin.FPIEEE64, %38 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":40:26, scope 29 // user: %40
  %40 = struct $Double (%39 : $Builtin.FPIEEE64), loc "Location.swift":40:26, scope 29 // user: %45
  %41 = struct_extract %4 : $Double, #Double._value, loc "Location.swift":40:32, scope 29 // user: %43
  %42 = struct_extract %4 : $Double, #Double._value, loc "Location.swift":40:32, scope 29 // user: %43
  %43 = builtin "fmul_FPIEEE64"(%41 : $Builtin.FPIEEE64, %42 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":40:32, scope 29 // user: %44
  %44 = struct $Double (%43 : $Builtin.FPIEEE64), loc "Location.swift":40:32, scope 29 // user: %46
  %45 = struct_extract %40 : $Double, #Double._value, loc "Location.swift":40:29, scope 29 // user: %47
  %46 = struct_extract %44 : $Double, #Double._value, loc "Location.swift":40:29, scope 29 // user: %47
  %47 = builtin "fadd_FPIEEE64"(%45 : $Builtin.FPIEEE64, %46 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":40:29, scope 29 // user: %48
  %48 = struct $Double (%47 : $Builtin.FPIEEE64), loc "Location.swift":40:29, scope 29 // user: %49
  %49 = apply %36(%48) : $@convention(c) (Double) -> Double, loc "Location.swift":40:34, scope 29 // user: %50
  br bb6(%49 : $Double), loc "Location.swift":40:13, scope 29 // id: %50

// %51                                            // users: %53, %52
bb3(%51 : $Bool):                                 // Preds: bb0
  debug_value %51 : $Bool, let, name "x", loc "Location.swift":41:21, scope 30 // id: %52
  %53 = struct_extract %51 : $Bool, #Bool._value, loc "Location.swift":42:16, scope 32 // user: %54
  cond_br %53, bb4, bb5, loc "Location.swift":42:16, scope 32 // id: %54

bb4:                                              // Preds: bb3
  br bb6(%4 : $Double), loc "Location.swift":43:17, scope 33 // id: %55

bb5:                                              // Preds: bb3
  %56 = float_literal $Builtin.FPIEEE64, 0x0 // 0, loc "Location.swift":45:20, scope 31 // user: %57
  %57 = struct $Double (%56 : $Builtin.FPIEEE64), loc "Location.swift":45:20, scope 31 // user: %58
  br bb6(%57 : $Double), loc "Location.swift":45:13, scope 31 // id: %58

// %59                                            // user: %60
bb6(%59 : $Double):                               // Preds: bb5 bb4 bb2 bb1
  return %59 : $Double, loc "Location.swift":47:5, scope 24 // id: %60
}


// sqrt
sil [readnone] [clang sqrt] @sqrt : $@convention(c) (Double) -> Double

sil_scope 34 {  parent @_TFsoi1pFTSdSd_Sd : $@convention(thin) (Double, Double) -> Double }

// + infix(Double, Double) -> Double
sil public_external [transparent] [fragile] @_TFsoi1pFTSdSd_Sd : $@convention(thin) (Double, Double) -> Double {
// %0                                             // users: %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $Double, %1 : $Double):
  debug_value %0 : $Double, scope 34              // id: %2
  debug_value %1 : $Double, scope 34              // id: %3
  %4 = struct_extract %0 : $Double, #Double._value, scope 34 // user: %6
  %5 = struct_extract %1 : $Double, #Double._value, scope 34 // user: %6
  %6 = builtin "fadd_FPIEEE64"(%4 : $Builtin.FPIEEE64, %5 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, scope 34 // user: %7
  %7 = struct $Double (%6 : $Builtin.FPIEEE64), scope 34 // user: %8
  return %7 : $Double, scope 34                   // id: %8
}

sil_scope 35 {  parent @_TFSdCfSiSd : $@convention(method) (Int, @thin Double.Type) -> Double }

// Double.init(Int) -> Double
sil public_external [transparent] [fragile] @_TFSdCfSiSd : $@convention(method) (Int, @thin Double.Type) -> Double {
// %0                                             // users: %3, %2
bb0(%0 : $Int, %1 : $@thin Double.Type):
  debug_value %0 : $Int, scope 35                 // id: %2
  %3 = struct_extract %0 : $Int, #Int._value, scope 35 // user: %4
  %4 = builtin "sitofp_Int64_FPIEEE64"(%3 : $Builtin.Int64) : $Builtin.FPIEEE64, scope 35 // user: %5
  %5 = struct $Double (%4 : $Builtin.FPIEEE64), scope 35 // user: %6
  return %5 : $Double, scope 35                   // id: %6
}

sil_scope 36 {  parent @_TFsoi1mFTSiSi_Si : $@convention(thin) (Int, Int) -> Int }

// * infix(Int, Int) -> Int
sil public_external [transparent] [fragile] @_TFsoi1mFTSiSi_Si : $@convention(thin) (Int, Int) -> Int {
// %0                                             // users: %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $Int, %1 : $Int):
  debug_value %0 : $Int, scope 36                 // id: %2
  debug_value %1 : $Int, scope 36                 // id: %3
  %4 = struct_extract %0 : $Int, #Int._value, scope 36 // user: %7
  %5 = struct_extract %1 : $Int, #Int._value, scope 36 // user: %7
  %6 = integer_literal $Builtin.Int1, -1, scope 36 // user: %7
  %7 = builtin "smul_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 36 // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0, scope 36 // users: %13, %10
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1, scope 36 // users: %12, %11
  debug_value %8 : $Builtin.Int64, scope 36       // id: %10
  debug_value %9 : $Builtin.Int1, scope 36        // id: %11
  cond_fail %9 : $Builtin.Int1, scope 36          // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64), scope 36 // user: %14
  return %13 : $Int, scope 36                     // id: %14
}

sil_scope 37 {  parent @_TFsoi1mFTSdSd_Sd : $@convention(thin) (Double, Double) -> Double }

// * infix(Double, Double) -> Double
sil public_external [transparent] [fragile] @_TFsoi1mFTSdSd_Sd : $@convention(thin) (Double, Double) -> Double {
// %0                                             // users: %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $Double, %1 : $Double):
  debug_value %0 : $Double, scope 37              // id: %2
  debug_value %1 : $Double, scope 37              // id: %3
  %4 = struct_extract %0 : $Double, #Double._value, scope 37 // user: %6
  %5 = struct_extract %1 : $Double, #Double._value, scope 37 // user: %6
  %6 = builtin "fmul_FPIEEE64"(%4 : $Builtin.FPIEEE64, %5 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, scope 37 // user: %7
  %7 = struct $Double (%6 : $Builtin.FPIEEE64), scope 37 // user: %8
  return %7 : $Double, scope 37                   // id: %8
}

sil_scope 38 {  parent @_TFSb21_getBuiltinLogicValuefT_Bi1_ : $@convention(method) (Bool) -> Builtin.Int1 }

// Bool._getBuiltinLogicValue() -> Builtin.Int1
sil public_external [transparent] [fragile] @_TFSb21_getBuiltinLogicValuefT_Bi1_ : $@convention(method) (Bool) -> Builtin.Int1 {
// %0                                             // users: %2, %1
bb0(%0 : $Bool):
  debug_value %0 : $Bool, scope 38                // id: %1
  %2 = struct_extract %0 : $Bool, #Bool._value, scope 38 // user: %3
  return %2 : $Builtin.Int1, scope 38             // id: %3
}

sil_scope 39 {  parent @_TFSdCfT22_builtinIntegerLiteralBi2048__Sd : $@convention(method) (Builtin.Int2048, @thin Double.Type) -> Double }

// Double.init(_builtinIntegerLiteral : Builtin.Int2048) -> Double
sil public_external [transparent] [fragile] @_TFSdCfT22_builtinIntegerLiteralBi2048__Sd : $@convention(method) (Builtin.Int2048, @thin Double.Type) -> Double {
// %0                                             // users: %3, %2
bb0(%0 : $Builtin.Int2048, %1 : $@thin Double.Type):
  debug_value %0 : $Builtin.Int2048, scope 39     // id: %2
  %3 = builtin "itofp_with_overflow_Int2048_FPIEEE64"(%0 : $Builtin.Int2048) : $Builtin.FPIEEE64, scope 39 // user: %4
  %4 = struct $Double (%3 : $Builtin.FPIEEE64), scope 39 // user: %5
  return %4 : $Double, scope 39                   // id: %5
}

sil_scope 40 { loc "Location.swift":25:9 parent @_TFV9LibCoords8Locationg10coordinateTOS_8PositionSd_ : $@convention(method) (@guaranteed Location) -> (Position, Double) }
sil_scope 41 { loc "Location.swift":25:9 parent 40 }

// Location.coordinate.getter
sil hidden [transparent] @_TFV9LibCoords8Locationg10coordinateTOS_8PositionSd_ : $@convention(method) (@guaranteed Location) -> (Position, Double) {
// %0                                             // users: %2, %1
bb0(%0 : $Location):
  debug_value %0 : $Location, let, name "self", argno 1, loc "Location.swift":25:9, scope 40 // id: %1
  %2 = struct_extract %0 : $Location, #Location.coordinate, scope 41 // users: %4, %3
  %3 = tuple_extract %2 : $(Position, Double), 0, scope 41 // user: %5
  %4 = tuple_extract %2 : $(Position, Double), 1, scope 41 // user: %5
  %5 = tuple (%3 : $Position, %4 : $Double), loc "Location.swift":25:9, scope 41 // user: %6
  return %5 : $(Position, Double), loc "Location.swift":25:9, scope 41 // id: %6
}

sil_scope 42 { loc "Location.swift":26:9 parent @_TFV9LibCoords8Locationg4nameSS : $@convention(method) (@guaranteed Location) -> @owned String }
sil_scope 43 { loc "Location.swift":26:9 parent 42 }

// Location.name.getter
sil hidden [transparent] @_TFV9LibCoords8Locationg4nameSS : $@convention(method) (@guaranteed Location) -> @owned String {
// %0                                             // users: %2, %1
bb0(%0 : $Location):
  debug_value %0 : $Location, let, name "self", argno 1, loc "Location.swift":26:9, scope 42 // id: %1
  %2 = struct_extract %0 : $Location, #Location.name, scope 43 // users: %4, %3
  retain_value %2 : $String, scope 43             // id: %3
  return %2 : $String, loc "Location.swift":26:9, scope 43 // id: %4
}

sil_scope 44 { loc "Location.swift":50:13 parent @_TF9LibCoords8midpointFzT1xTOS_8PositionSd_1yTS0_Sd__TS0_Sd_ : $@convention(thin) (Position, Double, Position, Double) -> (Position, Double, @error Error) }
sil_scope 45 { loc "Location.swift":65:1 parent 44 }
sil_scope 46 { loc "Location.swift":64:5 parent 45 }
sil_scope 47 { loc "Location.swift":64:5 parent 46 }
sil_scope 48 { loc "Location.swift":64:5 parent 47 }
sil_scope 49 { loc "Location.swift":64:5 parent 48 }
sil_scope 50 { loc "Location.swift":54:36 parent 49 }
sil_scope 51 { loc "Location.swift":64:5 parent 47 }
sil_scope 52 { loc "Location.swift":64:5 parent 51 }
sil_scope 53 { loc "Location.swift":56:46 parent 52 }
sil_scope 54 { loc "Location.swift":64:5 parent 47 }
sil_scope 55 { loc "Location.swift":64:5 parent 54 }
sil_scope 56 { loc "Location.swift":61:32 parent 55 }
sil_scope 57 { loc "Location.swift":60:9 parent 56 }
sil_scope 58 { loc "Location.swift":60:9 parent 57 }
sil_scope 59 { loc "Location.swift":63:31 parent 45 }

// midpoint(x : (Position, Double), y : (Position, Double)) throws -> (Position, Double)
sil @_TF9LibCoords8midpointFzT1xTOS_8PositionSd_1yTS0_Sd__TS0_Sd_ : $@convention(thin) (Position, Double, Position, Double) -> (Position, Double, @error Error) {
// %0                                             // user: %4
// %1                                             // user: %4
// %2                                             // user: %6
// %3                                             // user: %6
bb0(%0 : $Position, %1 : $Double, %2 : $Position, %3 : $Double):
  %4 = tuple (%0 : $Position, %1 : $Double), loc "Location.swift":50:22, scope 44 // users: %32, %31, %12, %11, %10, %9, %5
  debug_value %4 : $(Position, Double), let, name "x", argno 1, loc "Location.swift":50:22, scope 44 // id: %5
  %6 = tuple (%2 : $Position, %3 : $Double), loc "Location.swift":50:37, scope 44 // users: %34, %33, %20, %19, %18, %17, %7
  debug_value %6 : $(Position, Double), let, name "y", argno 2, loc "Location.swift":50:37, scope 44 // id: %7
  // function_ref sqrt
  %8 = function_ref @sqrt : $@convention(c) (Double) -> Double, loc "Location.swift":51:20, scope 45 // user: %29
  %9 = tuple_extract %4 : $(Position, Double), 0, loc "Location.swift":51:25, scope 45
  %10 = tuple_extract %4 : $(Position, Double), 1, loc "Location.swift":51:25, scope 45 // user: %13
  %11 = tuple_extract %4 : $(Position, Double), 0, loc "Location.swift":51:31, scope 45
  %12 = tuple_extract %4 : $(Position, Double), 1, loc "Location.swift":51:31, scope 45 // user: %14
  %13 = struct_extract %10 : $Double, #Double._value, loc "Location.swift":51:29, scope 45 // user: %15
  %14 = struct_extract %12 : $Double, #Double._value, loc "Location.swift":51:29, scope 45 // user: %15
  %15 = builtin "fmul_FPIEEE64"(%13 : $Builtin.FPIEEE64, %14 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":51:29, scope 45 // user: %16
  %16 = struct $Double (%15 : $Builtin.FPIEEE64), loc "Location.swift":51:29, scope 45 // user: %25
  %17 = tuple_extract %6 : $(Position, Double), 0, loc "Location.swift":51:37, scope 45
  %18 = tuple_extract %6 : $(Position, Double), 1, loc "Location.swift":51:37, scope 45 // user: %21
  %19 = tuple_extract %6 : $(Position, Double), 0, loc "Location.swift":51:43, scope 45
  %20 = tuple_extract %6 : $(Position, Double), 1, loc "Location.swift":51:43, scope 45 // user: %22
  %21 = struct_extract %18 : $Double, #Double._value, loc "Location.swift":51:41, scope 45 // user: %23
  %22 = struct_extract %20 : $Double, #Double._value, loc "Location.swift":51:41, scope 45 // user: %23
  %23 = builtin "fmul_FPIEEE64"(%21 : $Builtin.FPIEEE64, %22 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":51:41, scope 45 // user: %24
  %24 = struct $Double (%23 : $Builtin.FPIEEE64), loc "Location.swift":51:41, scope 45 // user: %26
  %25 = struct_extract %16 : $Double, #Double._value, loc "Location.swift":51:35, scope 45 // user: %27
  %26 = struct_extract %24 : $Double, #Double._value, loc "Location.swift":51:35, scope 45 // user: %27
  %27 = builtin "fadd_FPIEEE64"(%25 : $Builtin.FPIEEE64, %26 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":51:35, scope 45 // user: %28
  %28 = struct $Double (%27 : $Builtin.FPIEEE64), loc "Location.swift":51:35, scope 45 // user: %29
  %29 = apply %8(%28) : $@convention(c) (Double) -> Double, loc "Location.swift":51:46, scope 45 // users: %103, %77, %54, %30
  debug_value %29 : $Double, let, name "midpoint", loc "Location.swift":51:9, scope 45 // id: %30
  %31 = tuple_extract %4 : $(Position, Double), 0, loc "Location.swift":52:13, scope 45 // user: %35
  %32 = tuple_extract %4 : $(Position, Double), 1, loc "Location.swift":52:13, scope 45
  %33 = tuple_extract %6 : $(Position, Double), 0, loc "Location.swift":52:18, scope 45 // user: %35
  %34 = tuple_extract %6 : $(Position, Double), 1, loc "Location.swift":52:18, scope 45
  %35 = tuple (%31 : $Position, %33 : $Position), loc "Location.swift":52:12, scope 45 // users: %37, %36
  %36 = tuple_extract %35 : $(Position, Position), 0, loc "Location.swift":53:10, scope 46 // users: %80, %57, %40
  %37 = tuple_extract %35 : $(Position, Position), 1, loc "Location.swift":53:10, scope 46 // user: %38
  switch_enum %37 : $Position, case #Position.A!enumelt.1: bb1, case #Position.B!enumelt.1: bb4, case #Position.C!enumelt.1: bb7, loc "Location.swift":53:22, scope 47 // id: %38

// %39                                            // users: %46, %43
bb1(%39 : $Int):                                  // Preds: bb0
  switch_enum %36 : $Position, case #Position.A!enumelt.1: bb2, default bb3, loc "Location.swift":53:11, scope 48 // id: %40

// %41                                            // users: %45, %42
bb2(%41 : $Int):                                  // Preds: bb1
  debug_value %41 : $Int, let, name "a", loc "Location.swift":53:18, scope 49 // id: %42
  debug_value %39 : $Int, let, name "b", loc "Location.swift":53:29, scope 49 // id: %43
  %44 = metatype $@thin Position.Type, loc "Location.swift":54:17, scope 50
  %45 = struct_extract %41 : $Int, #Int._value, loc "Location.swift":54:22, scope 50 // user: %48
  %46 = struct_extract %39 : $Int, #Int._value, loc "Location.swift":54:22, scope 50 // user: %48
  %47 = integer_literal $Builtin.Int1, -1, loc "Location.swift":54:22, scope 50 // user: %48
  %48 = builtin "ssub_with_overflow_Int64"(%45 : $Builtin.Int64, %46 : $Builtin.Int64, %47 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), loc "Location.swift":54:22, scope 50 // users: %50, %49
  %49 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 0, loc "Location.swift":54:22, scope 50 // user: %52
  %50 = tuple_extract %48 : $(Builtin.Int64, Builtin.Int1), 1, loc "Location.swift":54:22, scope 50 // user: %51
  cond_fail %50 : $Builtin.Int1, loc "Location.swift":54:22, scope 50 // id: %51
  %52 = struct $Int (%49 : $Builtin.Int64), loc "Location.swift":54:22, scope 50 // user: %53
  %53 = enum $Position, #Position.A!enumelt.1, %52 : $Int, loc "Location.swift":54:18, scope 50 // user: %54
  br bb13(%53 : $Position, %29 : $Double), loc "Location.swift":54:9, scope 50 // id: %54

bb3:                                              // Preds: bb1
  br bb12, loc "Location.swift":53:11, scope 48   // id: %55

// %56                                            // users: %68, %67, %60
bb4(%56 : $Double):                               // Preds: bb0
  switch_enum %36 : $Position, case #Position.B!enumelt.1: bb5, default bb6, loc "Location.swift":55:11, scope 51 // id: %57

// %58                                            // users: %64, %63, %59
bb5(%58 : $Double):                               // Preds: bb4
  debug_value %58 : $Double, let, name "a", loc "Location.swift":55:18, scope 52 // id: %59
  debug_value %56 : $Double, let, name "b", loc "Location.swift":55:29, scope 52 // id: %60
  %61 = metatype $@thin Position.Type, loc "Location.swift":56:17, scope 53
  // function_ref sqrt
  %62 = function_ref @sqrt : $@convention(c) (Double) -> Double, loc "Location.swift":56:20, scope 53 // user: %75
  %63 = struct_extract %58 : $Double, #Double._value, loc "Location.swift":56:26, scope 53 // user: %65
  %64 = struct_extract %58 : $Double, #Double._value, loc "Location.swift":56:26, scope 53 // user: %65
  %65 = builtin "fmul_FPIEEE64"(%63 : $Builtin.FPIEEE64, %64 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":56:26, scope 53 // user: %66
  %66 = struct $Double (%65 : $Builtin.FPIEEE64), loc "Location.swift":56:26, scope 53 // user: %71
  %67 = struct_extract %56 : $Double, #Double._value, loc "Location.swift":56:32, scope 53 // user: %69
  %68 = struct_extract %56 : $Double, #Double._value, loc "Location.swift":56:32, scope 53 // user: %69
  %69 = builtin "fmul_FPIEEE64"(%67 : $Builtin.FPIEEE64, %68 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":56:32, scope 53 // user: %70
  %70 = struct $Double (%69 : $Builtin.FPIEEE64), loc "Location.swift":56:32, scope 53 // user: %72
  %71 = struct_extract %66 : $Double, #Double._value, loc "Location.swift":56:29, scope 53 // user: %73
  %72 = struct_extract %70 : $Double, #Double._value, loc "Location.swift":56:29, scope 53 // user: %73
  %73 = builtin "fadd_FPIEEE64"(%71 : $Builtin.FPIEEE64, %72 : $Builtin.FPIEEE64) : $Builtin.FPIEEE64, loc "Location.swift":56:29, scope 53 // user: %74
  %74 = struct $Double (%73 : $Builtin.FPIEEE64), loc "Location.swift":56:29, scope 53 // user: %75
  %75 = apply %62(%74) : $@convention(c) (Double) -> Double, loc "Location.swift":56:34, scope 53 // user: %76
  %76 = enum $Position, #Position.B!enumelt.1, %75 : $Double, loc "Location.swift":56:18, scope 53 // user: %77
  br bb13(%76 : $Position, %29 : $Double), loc "Location.swift":56:9, scope 53 // id: %77

bb6:                                              // Preds: bb4
  br bb12, loc "Location.swift":55:11, scope 51   // id: %78

// %79                                            // users: %88, %83
bb7(%79 : $Bool):                                 // Preds: bb0
  switch_enum %36 : $Position, case #Position.C!enumelt.1: bb8, default bb11, loc "Location.swift":57:11, scope 54 // id: %80

// %81                                            // users: %102, %86, %82
bb8(%81 : $Bool):                                 // Preds: bb7
  debug_value %81 : $Bool, let, name "a", loc "Location.swift":57:18, scope 55 // id: %82
  debug_value %79 : $Bool, let, name "b", loc "Location.swift":57:29, scope 55 // id: %83
  // function_ref != infix<A where ...> (A, A) -> Bool
  %84 = function_ref @_TFsoi2neuRxs9EquatablerFTxx_Sb : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in τ_0_0, @in τ_0_0) -> Bool, loc "Location.swift":58:14, scope 57 // user: %89
  %85 = alloc_stack $Bool, loc "Location.swift":58:12, scope 57 // users: %92, %89, %86
  store %81 to %85 : $*Bool, loc "Location.swift":58:12, scope 57 // id: %86
  %87 = alloc_stack $Bool, loc "Location.swift":58:17, scope 57 // users: %91, %89, %88
  store %79 to %87 : $*Bool, loc "Location.swift":58:17, scope 57 // id: %88
  %89 = apply %84<Bool>(%85, %87) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in τ_0_0, @in τ_0_0) -> Bool, loc "Location.swift":58:14, scope 57 // user: %90
  %90 = struct_extract %89 : $Bool, #Bool._value, loc "Location.swift":58:17, scope 57 // user: %93
  dealloc_stack %87 : $*Bool, loc "Location.swift":58:17, scope 57 // id: %91
  dealloc_stack %85 : $*Bool, loc "Location.swift":58:17, scope 57 // id: %92
  cond_br %90, bb9, bb10, loc "Location.swift":58:17, scope 57 // id: %93

bb9:                                              // Preds: bb8
  %94 = alloc_existential_box $Error, $CoordinateError, loc "Location.swift":59:35, scope 58 // users: %100, %99, %95
  %95 = project_existential_box $CoordinateError in %94 : $Error, loc "Location.swift":59:35, scope 58 // user: %98
  %96 = metatype $@thin CoordinateError.Type, loc "Location.swift":59:19, scope 58
  %97 = enum $CoordinateError, #CoordinateError.cantExist!enumelt, loc "Location.swift":59:35, scope 58 // user: %98
  store %97 to %95 : $*CoordinateError, loc "Location.swift":59:35, scope 58 // id: %98
  %99 = builtin "willThrow"(%94 : $Error) : $(), loc "Location.swift":59:13, scope 58
  br bb14(%94 : $Error), loc "Location.swift":59:13, scope 58 // id: %100

bb10:                                             // Preds: bb8
  %101 = metatype $@thin Position.Type, loc "Location.swift":61:17, scope 56
  %102 = enum $Position, #Position.C!enumelt.1, %81 : $Bool, loc "Location.swift":61:18, scope 56 // user: %103
  br bb13(%102 : $Position, %29 : $Double), loc "Location.swift":61:9, scope 56 // id: %103

bb11:                                             // Preds: bb7
  br bb12, loc "Location.swift":57:11, scope 54   // id: %104

bb12:                                             // Preds: bb11 bb6 bb3
  %105 = alloc_existential_box $Error, $CoordinateError, loc "Location.swift":63:31, scope 59 // users: %111, %110, %106
  %106 = project_existential_box $CoordinateError in %105 : $Error, loc "Location.swift":63:31, scope 59 // user: %109
  %107 = metatype $@thin CoordinateError.Type, loc "Location.swift":63:15, scope 59
  %108 = enum $CoordinateError, #CoordinateError.wrongDimensions!enumelt, loc "Location.swift":63:31, scope 59 // user: %109
  store %108 to %106 : $*CoordinateError, loc "Location.swift":63:31, scope 59 // id: %109
  %110 = builtin "willThrow"(%105 : $Error) : $(), loc "Location.swift":63:9, scope 59
  br bb14(%105 : $Error), loc "Location.swift":63:9, scope 59 // id: %111

// %112                                           // user: %114
// %113                                           // user: %114
bb13(%112 : $Position, %113 : $Double):           // Preds: bb10 bb5 bb2
  %114 = tuple (%112 : $Position, %113 : $Double), loc "Location.swift":50:13, scope 45 // user: %115
  return %114 : $(Position, Double), loc "Location.swift":65:1, scope 45 // id: %115

// %116                                           // user: %117
bb14(%116 : $Error):                              // Preds: bb12 bb9
  throw %116 : $Error, loc "Location.swift":50:13, scope 45 // id: %117
}

sil_scope 60 {  parent @_TFsoi1sFTSiSi_Si : $@convention(thin) (Int, Int) -> Int }

// - infix(Int, Int) -> Int
sil public_external [transparent] [fragile] @_TFsoi1sFTSiSi_Si : $@convention(thin) (Int, Int) -> Int {
// %0                                             // users: %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $Int, %1 : $Int):
  debug_value %0 : $Int, scope 60                 // id: %2
  debug_value %1 : $Int, scope 60                 // id: %3
  %4 = struct_extract %0 : $Int, #Int._value, scope 60 // user: %7
  %5 = struct_extract %1 : $Int, #Int._value, scope 60 // user: %7
  %6 = integer_literal $Builtin.Int1, -1, scope 60 // user: %7
  %7 = builtin "ssub_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 60 // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0, scope 60 // users: %13, %10
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1, scope 60 // users: %12, %11
  debug_value %8 : $Builtin.Int64, scope 60       // id: %10
  debug_value %9 : $Builtin.Int1, scope 60        // id: %11
  cond_fail %9 : $Builtin.Int1, scope 60          // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64), scope 60 // user: %14
  return %13 : $Int, scope 60                     // id: %14
}


// != infix<A where ...> (A, A) -> Bool
sil [fragile] @_TFsoi2neuRxs9EquatablerFTxx_Sb : $@convention(thin) <T where T : Equatable> (@in T, @in T) -> Bool

sil_scope 61 { loc "Location.swift":104:13 parent @_SW_LibCoords_example : $@convention(thin) (Double) -> (Int, Double) }
sil_scope 62 { loc "Location.swift":108:1 parent 61 }

// _SW_LibCoords_example
sil @_SW_LibCoords_example : $@convention(thin) (Double) -> (Int, Double) {
// %0                                             // users: %3, %3, %1
bb0(%0 : $Double):
  debug_value %0 : $Double, let, name "x", argno 1, loc "Location.swift":104:23, scope 61 // id: %1
  // function_ref pow
  %2 = function_ref @pow : $@convention(c) (Double, Double) -> Double, loc "Location.swift":106:17, scope 62 // user: %3
  %3 = apply %2(%0, %0) : $@convention(c) (Double, Double) -> Double, loc "Location.swift":106:24, scope 62 // users: %71, %6, %4
  debug_value %3 : $Double, let, name "value", loc "Location.swift":106:9, scope 62 // id: %4
  // function_ref round
  %5 = function_ref @round : $@convention(c) (Double) -> Double, loc "Location.swift":107:17, scope 62 // user: %6
  %6 = apply %5(%3) : $@convention(c) (Double) -> Double, loc "Location.swift":107:28, scope 62 // users: %28, %9
  br bb1, loc "Location.swift":107:29, scope 62   // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int8, 2, loc "Location.swift":107:29, scope 62 // users: %65, %61, %52, %48, %39, %35
  %9 = struct_extract %6 : $Double, #Double._value, loc "Location.swift":107:29, scope 62 // users: %24, %20, %10
  %10 = builtin "bitcast_FPIEEE64_Int64"(%9 : $Builtin.FPIEEE64) : $Builtin.Int64, loc "Location.swift":107:29, scope 62 // user: %12
  %11 = integer_literal $Builtin.Int64, 52, loc "Location.swift":107:29, scope 62 // user: %12
  %12 = builtin "lshr_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int64, loc "Location.swift":107:29, scope 62 // user: %14
  %13 = integer_literal $Builtin.Int64, 2047, loc "Location.swift":107:29, scope 62 // users: %15, %14
  %14 = builtin "and_Int64"(%12 : $Builtin.Int64, %13 : $Builtin.Int64) : $Builtin.Int64, loc "Location.swift":107:29, scope 62 // user: %15
  %15 = builtin "cmp_ult_Int64"(%14 : $Builtin.Int64, %13 : $Builtin.Int64) : $Builtin.Int1, loc "Location.swift":107:29, scope 62 // user: %17
  %16 = integer_literal $Builtin.Int1, -1, loc "Location.swift":107:29, scope 62 // users: %25, %21, %17
  %17 = builtin "int_expect_Int1"(%15 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, loc "Location.swift":107:29, scope 62 // user: %18
  cond_br %17, bb2, bb8, loc "Location.swift":107:29, scope 62 // id: %18

bb2:                                              // Preds: bb1
  %19 = float_literal $Builtin.FPIEEE64, 0xC3E0000000000001 // -9.2233720368547778E+18, loc "Location.swift":107:29, scope 62 // user: %20
  %20 = builtin "fcmp_olt_FPIEEE64"(%19 : $Builtin.FPIEEE64, %9 : $Builtin.FPIEEE64) : $Builtin.Int1, loc "Location.swift":107:29, scope 62 // user: %21
  %21 = builtin "int_expect_Int1"(%20 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, loc "Location.swift":107:29, scope 62 // user: %22
  cond_br %21, bb3, bb7, loc "Location.swift":107:29, scope 62 // id: %22

bb3:                                              // Preds: bb2
  %23 = float_literal $Builtin.FPIEEE64, 0x43E0000000000000 // 9.2233720368547758E+18, loc "Location.swift":107:29, scope 62 // user: %24
  %24 = builtin "fcmp_olt_FPIEEE64"(%9 : $Builtin.FPIEEE64, %23 : $Builtin.FPIEEE64) : $Builtin.Int1, loc "Location.swift":107:29, scope 62 // user: %25
  %25 = builtin "int_expect_Int1"(%24 : $Builtin.Int1, %16 : $Builtin.Int1) : $Builtin.Int1, loc "Location.swift":107:29, scope 62 // user: %26
  cond_br %25, bb4, bb6, loc "Location.swift":107:29, scope 62 // id: %26

bb4:                                              // Preds: bb3
  br bb5, loc "Location.swift":107:29, scope 62   // id: %27

bb5:                                              // Preds: bb4
  %28 = struct_extract %6 : $Double, #Double._value, loc "Location.swift":107:29, scope 62 // user: %29
  %29 = builtin "fptosi_FPIEEE64_Int64"(%28 : $Builtin.FPIEEE64) : $Builtin.Int64, loc "Location.swift":107:29, scope 62 // user: %30
  %30 = struct $Int (%29 : $Builtin.Int64), loc "Location.swift":107:29, scope 62 // user: %71
  br bb9, loc "Location.swift":107:29, scope 62   // id: %31

bb6:                                              // Preds: bb3
  %32 = string_literal utf8 "Double value cannot be converted to Int because the result would be greater than Int.max", loc "Location.swift":107:29, scope 62 // user: %34
  %33 = integer_literal $Builtin.Word, 88, loc "Location.swift":107:29, scope 62 // user: %35
  %34 = builtin "ptrtoint_Word"(%32 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":107:29, scope 62 // user: %35
  %35 = struct $StaticString (%34 : $Builtin.Word, %33 : $Builtin.Word, %8 : $Builtin.Int8), loc "Location.swift":107:29, scope 62 // user: %43
  %36 = string_literal utf8 "fatal error", loc "Location.swift":107:29, scope 62 // user: %38
  %37 = integer_literal $Builtin.Word, 11, loc "Location.swift":107:29, scope 62 // user: %39
  %38 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":107:29, scope 62 // user: %39
  %39 = struct $StaticString (%38 : $Builtin.Word, %37 : $Builtin.Word, %8 : $Builtin.Int8), loc "Location.swift":107:29, scope 62 // user: %43
  %40 = integer_literal $Builtin.Int32, 1, loc "Location.swift":107:29, scope 62 // user: %41
  %41 = struct $UInt32 (%40 : $Builtin.Int32), loc "Location.swift":107:29, scope 62 // user: %43
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %42 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":107:29, scope 62 // user: %43
  %43 = apply %42(%39, %35, %41) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":107:29, scope 62
  unreachable, scope 61                           // id: %44

bb7:                                              // Preds: bb2
  %45 = string_literal utf8 "Double value cannot be converted to Int because the result would be less than Int.min", loc "Location.swift":107:29, scope 62 // user: %47
  %46 = integer_literal $Builtin.Word, 85, loc "Location.swift":107:29, scope 62 // user: %48
  %47 = builtin "ptrtoint_Word"(%45 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":107:29, scope 62 // user: %48
  %48 = struct $StaticString (%47 : $Builtin.Word, %46 : $Builtin.Word, %8 : $Builtin.Int8), loc "Location.swift":107:29, scope 62 // user: %56
  %49 = string_literal utf8 "fatal error", loc "Location.swift":107:29, scope 62 // user: %51
  %50 = integer_literal $Builtin.Word, 11, loc "Location.swift":107:29, scope 62 // user: %52
  %51 = builtin "ptrtoint_Word"(%49 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":107:29, scope 62 // user: %52
  %52 = struct $StaticString (%51 : $Builtin.Word, %50 : $Builtin.Word, %8 : $Builtin.Int8), loc "Location.swift":107:29, scope 62 // user: %56
  %53 = integer_literal $Builtin.Int32, 1, loc "Location.swift":107:29, scope 62 // user: %54
  %54 = struct $UInt32 (%53 : $Builtin.Int32), loc "Location.swift":107:29, scope 62 // user: %56
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %55 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":107:29, scope 62 // user: %56
  %56 = apply %55(%52, %48, %54) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":107:29, scope 62
  unreachable, scope 61                           // id: %57

bb8:                                              // Preds: bb1
  %58 = string_literal utf8 "Double value cannot be converted to Int because it is either infinite or NaN", loc "Location.swift":107:29, scope 62 // user: %60
  %59 = integer_literal $Builtin.Word, 76, loc "Location.swift":107:29, scope 62 // user: %61
  %60 = builtin "ptrtoint_Word"(%58 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":107:29, scope 62 // user: %61
  %61 = struct $StaticString (%60 : $Builtin.Word, %59 : $Builtin.Word, %8 : $Builtin.Int8), loc "Location.swift":107:29, scope 62 // user: %69
  %62 = string_literal utf8 "fatal error", loc "Location.swift":107:29, scope 62 // user: %64
  %63 = integer_literal $Builtin.Word, 11, loc "Location.swift":107:29, scope 62 // user: %65
  %64 = builtin "ptrtoint_Word"(%62 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":107:29, scope 62 // user: %65
  %65 = struct $StaticString (%64 : $Builtin.Word, %63 : $Builtin.Word, %8 : $Builtin.Int8), loc "Location.swift":107:29, scope 62 // user: %69
  %66 = integer_literal $Builtin.Int32, 1, loc "Location.swift":107:29, scope 62 // user: %67
  %67 = struct $UInt32 (%66 : $Builtin.Int32), loc "Location.swift":107:29, scope 62 // user: %69
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %68 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":107:29, scope 62 // user: %69
  %69 = apply %68(%65, %61, %67) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":107:29, scope 62
  unreachable, scope 61                           // id: %70

bb9:                                              // Preds: bb5
  %71 = tuple (%30 : $Int, %3 : $Double), loc "Location.swift":104:13, scope 62 // user: %72
  return %71 : $(Int, Double), loc "Location.swift":107:5, scope 62 // id: %72
}


// pow
sil [readnone] [clang pow] @pow : $@convention(c) (Double, Double) -> Double

sil_scope 63 {  parent @_TFSiCfSdSi : $@convention(method) (Double, @thin Int.Type) -> Int }

// Int.init(Double) -> Int
sil public_external [transparent] [fragile] @_TFSiCfSdSi : $@convention(method) (Double, @thin Int.Type) -> Int {
// %0                                             // users: %65, %7, %6, %5, %2
bb0(%0 : $Double, %1 : $@thin Int.Type):
  debug_value %0 : $Double, scope 63              // id: %2
  br bb1, scope 63                                // id: %3

bb1:                                              // Preds: bb0
  %4 = integer_literal $Builtin.Int8, 2, scope 63 // users: %58, %54, %41, %37, %24, %20
  debug_value %0 : $Double, scope 63              // id: %5
  debug_value %0 : $Double, scope 63              // id: %6
  %7 = struct_extract %0 : $Double, #Double._value, scope 63 // users: %48, %31, %8
  %8 = builtin "bitcast_FPIEEE64_Int64"(%7 : $Builtin.FPIEEE64) : $Builtin.Int64, scope 63 // user: %10
  %9 = integer_literal $Builtin.Int64, 52, scope 63 // user: %10
  %10 = builtin "lshr_Int64"(%8 : $Builtin.Int64, %9 : $Builtin.Int64) : $Builtin.Int64, scope 63 // user: %12
  %11 = integer_literal $Builtin.Int64, 2047, scope 63 // users: %13, %12
  %12 = builtin "and_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int64, scope 63 // user: %13
  %13 = builtin "cmp_ult_Int64"(%12 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 63 // user: %15
  %14 = integer_literal $Builtin.Int1, -1, scope 63 // users: %49, %32, %15
  %15 = builtin "int_expect_Int1"(%13 : $Builtin.Int1, %14 : $Builtin.Int1) : $Builtin.Int1, scope 63 // user: %16
  cond_br %15, bb3, bb2, scope 63                 // id: %16

bb2:                                              // Preds: bb1
  %17 = string_literal utf8 "Double value cannot be converted to Int because it is either infinite or NaN", scope 63 // user: %19
  %18 = integer_literal $Builtin.Word, 76, scope 63 // user: %20
  %19 = builtin "ptrtoint_Word"(%17 : $Builtin.RawPointer) : $Builtin.Word, scope 63 // user: %20
  %20 = struct $StaticString (%19 : $Builtin.Word, %18 : $Builtin.Word, %4 : $Builtin.Int8), scope 63 // user: %28
  %21 = string_literal utf8 "fatal error", scope 63 // user: %23
  %22 = integer_literal $Builtin.Word, 11, scope 63 // user: %24
  %23 = builtin "ptrtoint_Word"(%21 : $Builtin.RawPointer) : $Builtin.Word, scope 63 // user: %24
  %24 = struct $StaticString (%23 : $Builtin.Word, %22 : $Builtin.Word, %4 : $Builtin.Int8), scope 63 // user: %28
  %25 = integer_literal $Builtin.Int32, 1, scope 63 // user: %26
  %26 = struct $UInt32 (%25 : $Builtin.Int32), scope 63 // user: %28
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %27 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 63 // user: %28
  %28 = apply %27(%24, %20, %26) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 63
  unreachable, scope 63                           // id: %29

bb3:                                              // Preds: bb1
  %30 = float_literal $Builtin.FPIEEE64, 0xC3E0000000000001 // -9.2233720368547778E+18, scope 63 // user: %31
  %31 = builtin "fcmp_olt_FPIEEE64"(%30 : $Builtin.FPIEEE64, %7 : $Builtin.FPIEEE64) : $Builtin.Int1, scope 63 // user: %32
  %32 = builtin "int_expect_Int1"(%31 : $Builtin.Int1, %14 : $Builtin.Int1) : $Builtin.Int1, scope 63 // user: %33
  cond_br %32, bb5, bb4, scope 63                 // id: %33

bb4:                                              // Preds: bb3
  %34 = string_literal utf8 "Double value cannot be converted to Int because the result would be less than Int.min", scope 63 // user: %36
  %35 = integer_literal $Builtin.Word, 85, scope 63 // user: %37
  %36 = builtin "ptrtoint_Word"(%34 : $Builtin.RawPointer) : $Builtin.Word, scope 63 // user: %37
  %37 = struct $StaticString (%36 : $Builtin.Word, %35 : $Builtin.Word, %4 : $Builtin.Int8), scope 63 // user: %45
  %38 = string_literal utf8 "fatal error", scope 63 // user: %40
  %39 = integer_literal $Builtin.Word, 11, scope 63 // user: %41
  %40 = builtin "ptrtoint_Word"(%38 : $Builtin.RawPointer) : $Builtin.Word, scope 63 // user: %41
  %41 = struct $StaticString (%40 : $Builtin.Word, %39 : $Builtin.Word, %4 : $Builtin.Int8), scope 63 // user: %45
  %42 = integer_literal $Builtin.Int32, 1, scope 63 // user: %43
  %43 = struct $UInt32 (%42 : $Builtin.Int32), scope 63 // user: %45
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %44 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 63 // user: %45
  %45 = apply %44(%41, %37, %43) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 63
  unreachable, scope 63                           // id: %46

bb5:                                              // Preds: bb3
  %47 = float_literal $Builtin.FPIEEE64, 0x43E0000000000000 // 9.2233720368547758E+18, scope 63 // user: %48
  %48 = builtin "fcmp_olt_FPIEEE64"(%7 : $Builtin.FPIEEE64, %47 : $Builtin.FPIEEE64) : $Builtin.Int1, scope 63 // user: %49
  %49 = builtin "int_expect_Int1"(%48 : $Builtin.Int1, %14 : $Builtin.Int1) : $Builtin.Int1, scope 63 // user: %50
  cond_br %49, bb7, bb6, scope 63                 // id: %50

bb6:                                              // Preds: bb5
  %51 = string_literal utf8 "Double value cannot be converted to Int because the result would be greater than Int.max", scope 63 // user: %53
  %52 = integer_literal $Builtin.Word, 88, scope 63 // user: %54
  %53 = builtin "ptrtoint_Word"(%51 : $Builtin.RawPointer) : $Builtin.Word, scope 63 // user: %54
  %54 = struct $StaticString (%53 : $Builtin.Word, %52 : $Builtin.Word, %4 : $Builtin.Int8), scope 63 // user: %62
  %55 = string_literal utf8 "fatal error", scope 63 // user: %57
  %56 = integer_literal $Builtin.Word, 11, scope 63 // user: %58
  %57 = builtin "ptrtoint_Word"(%55 : $Builtin.RawPointer) : $Builtin.Word, scope 63 // user: %58
  %58 = struct $StaticString (%57 : $Builtin.Word, %56 : $Builtin.Word, %4 : $Builtin.Int8), scope 63 // user: %62
  %59 = integer_literal $Builtin.Int32, 1, scope 63 // user: %60
  %60 = struct $UInt32 (%59 : $Builtin.Int32), scope 63 // user: %62
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %61 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 63 // user: %62
  %62 = apply %61(%58, %54, %60) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 63
  unreachable, scope 63                           // id: %63

bb7:                                              // Preds: bb5
  br bb8, scope 63                                // id: %64

bb8:                                              // Preds: bb7
  %65 = struct_extract %0 : $Double, #Double._value, scope 63 // user: %66
  %66 = builtin "fptosi_FPIEEE64_Int64"(%65 : $Builtin.FPIEEE64) : $Builtin.Int64, scope 63 // user: %67
  %67 = struct $Int (%66 : $Builtin.Int64), scope 63 // user: %68
  return %67 : $Int, scope 63                     // id: %68
}


// round
sil [readnone] [clang round] @round : $@convention(c) (Double) -> Double

sil_scope 64 { loc "Location.swift":121:17 parent @_TFV9LibCoords8Location4wrapfT_CS_15LocationWrapper : $@convention(method) (@guaranteed Location) -> @owned LocationWrapper }
sil_scope 65 { loc "Location.swift":123:5 parent 64 }

// Location.wrap() -> LocationWrapper
sil @_TFV9LibCoords8Location4wrapfT_CS_15LocationWrapper : $@convention(method) (@guaranteed Location) -> @owned LocationWrapper {
// %0                                             // users: %5, %4, %1
bb0(%0 : $Location):
  debug_value %0 : $Location, let, name "self", argno 1, loc "Location.swift":121:17, scope 64 // id: %1
  // function_ref LocationWrapper.__allocating_init(location : Location) -> LocationWrapper
  %2 = function_ref @_TFC9LibCoords15LocationWrapperCfT8locationVS_8Location_S0_ : $@convention(method) (@owned Location, @thick LocationWrapper.Type) -> @owned LocationWrapper, loc "Location.swift":122:16, scope 65 // user: %5
  %3 = metatype $@thick LocationWrapper.Type, loc "Location.swift":122:16, scope 65 // user: %5
  retain_value %0 : $Location, loc "Location.swift":122:42, scope 65 // id: %4
  %5 = apply %2(%0, %3) : $@convention(method) (@owned Location, @thick LocationWrapper.Type) -> @owned LocationWrapper, loc "Location.swift":122:46, scope 65 // user: %6
  return %5 : $LocationWrapper, loc "Location.swift":122:9, scope 65 // id: %6
}

sil_scope 66 { loc "Location.swift":194:5 parent @_TFC9LibCoords15LocationWrapperCfT8locationVS_8Location_S0_ : $@convention(method) (@owned Location, @thick LocationWrapper.Type) -> @owned LocationWrapper }

// LocationWrapper.__allocating_init(location : Location) -> LocationWrapper
sil private @_TFC9LibCoords15LocationWrapperCfT8locationVS_8Location_S0_ : $@convention(method) (@owned Location, @thick LocationWrapper.Type) -> @owned LocationWrapper {
// %0                                             // user: %4
bb0(%0 : $Location, %1 : $@thick LocationWrapper.Type):
  %2 = alloc_ref [objc] $LocationWrapper, scope 66 // user: %4
  // function_ref LocationWrapper.init(location : Location) -> LocationWrapper
  %3 = function_ref @_TFC9LibCoords15LocationWrappercfT8locationVS_8Location_S0_ : $@convention(method) (@owned Location, @owned LocationWrapper) -> @owned LocationWrapper, scope 66 // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned Location, @owned LocationWrapper) -> @owned LocationWrapper, scope 66 // user: %5
  return %4 : $LocationWrapper, scope 66          // id: %5
}

sil_scope 67 { loc "Location.swift":128:10 parent @_TFO9LibCoords8Position4wrapfT_VSC15PositionWrapper : $@convention(method) (Position) -> PositionWrapper }
sil_scope 68 { loc "Location.swift":143:5 parent 67 }
sil_scope 69 { loc "Location.swift":140:9 parent 68 }
sil_scope 70 { loc "Location.swift":140:9 parent 69 }
sil_scope 71 { loc "Location.swift":133:39 parent 70 }
sil_scope 72 { loc "Location.swift":140:9 parent 69 }
sil_scope 73 { loc "Location.swift":136:39 parent 72 }
sil_scope 74 { loc "Location.swift":140:9 parent 69 }
sil_scope 75 { loc "Location.swift":139:39 parent 74 }

// Position.wrap() -> PositionWrapper
sil hidden @_TFO9LibCoords8Position4wrapfT_VSC15PositionWrapper : $@convention(method) (Position) -> PositionWrapper {
// %0                                             // users: %5, %2
bb0(%0 : $Position):
  %1 = alloc_stack $PositionWrapper, var, name "wrapper", loc "Location.swift":129:13, scope 68 // users: %49, %4, %8, %16, %21, %29, %37, %45, %48
  debug_value %0 : $Position, let, name "self", argno 1, loc "Location.swift":128:10, scope 67 // id: %2
  %3 = builtin "zeroInitializer"<PositionWrapper>() : $PositionWrapper, loc "Location.swift":129:39, scope 68 // user: %4
  store %3 to %1 : $*PositionWrapper, loc "Location.swift":129:39, scope 68 // id: %4
  switch_enum %0 : $Position, case #Position.A!enumelt.1: bb1, case #Position.B!enumelt.1: bb2, case #Position.C!enumelt.1: bb3, loc "Location.swift":131:14, scope 69 // id: %5

// %6                                             // users: %11, %7
bb1(%6 : $Int):                                   // Preds: bb0
  debug_value %6 : $Int, let, name "value", loc "Location.swift":131:21, scope 70 // id: %7
  %8 = struct_element_addr %1 : $*PositionWrapper, #PositionWrapper.value, loc "Location.swift":132:33, scope 71 // user: %9
  %9 = address_to_pointer %8 : $*PositionWrapper.__Unnamed_union_value to $Builtin.RawPointer, loc "Location.swift":132:33, scope 71 // user: %10
  %10 = pointer_to_address %9 : $Builtin.RawPointer to [strict] $*Int, loc "Location.swift":132:33, scope 71 // user: %11
  store %6 to %10 : $*Int, loc "Location.swift":132:33, scope 71 // id: %11
  %12 = tuple (), loc "Location.swift":132:33, scope 71
  %13 = tuple (), loc "Location.swift":132:33, scope 71
  %14 = metatype $@thin PositionTag.Type, loc "Location.swift":133:27, scope 71
  %15 = enum $PositionTag, #PositionTag.A!enumelt, loc "Location.swift":133:39, scope 71 // user: %17
  %16 = struct_element_addr %1 : $*PositionWrapper, #PositionWrapper.tag, loc "Location.swift":133:25, scope 71 // user: %17
  store %15 to %16 : $*PositionTag, loc "Location.swift":133:25, scope 71 // id: %17
  br bb4, loc "Location.swift":133:39, scope 70   // id: %18

// %19                                            // users: %24, %20
bb2(%19 : $Double):                               // Preds: bb0
  debug_value %19 : $Double, let, name "value", loc "Location.swift":134:21, scope 72 // id: %20
  %21 = struct_element_addr %1 : $*PositionWrapper, #PositionWrapper.value, loc "Location.swift":135:33, scope 73 // user: %22
  %22 = address_to_pointer %21 : $*PositionWrapper.__Unnamed_union_value to $Builtin.RawPointer, loc "Location.swift":135:33, scope 73 // user: %23
  %23 = pointer_to_address %22 : $Builtin.RawPointer to [strict] $*Double, loc "Location.swift":135:33, scope 73 // user: %24
  store %19 to %23 : $*Double, loc "Location.swift":135:33, scope 73 // id: %24
  %25 = tuple (), loc "Location.swift":135:33, scope 73
  %26 = tuple (), loc "Location.swift":135:33, scope 73
  %27 = metatype $@thin PositionTag.Type, loc "Location.swift":136:27, scope 73
  %28 = enum $PositionTag, #PositionTag.B!enumelt, loc "Location.swift":136:39, scope 73 // user: %30
  %29 = struct_element_addr %1 : $*PositionWrapper, #PositionWrapper.tag, loc "Location.swift":136:25, scope 73 // user: %30
  store %28 to %29 : $*PositionTag, loc "Location.swift":136:25, scope 73 // id: %30
  br bb4, loc "Location.swift":136:39, scope 72   // id: %31

// %32                                            // users: %36, %33
bb3(%32 : $Bool):                                 // Preds: bb0
  debug_value %32 : $Bool, let, name "value", loc "Location.swift":137:21, scope 74 // id: %33
  // function_ref ObjCBool.init(Bool) -> ObjCBool
  %34 = function_ref @_TFV10ObjectiveC8ObjCBoolCfSbS0_ : $@convention(method) (Bool, @thin ObjCBool.Type) -> ObjCBool, loc "Location.swift":138:35, scope 75 // user: %36
  %35 = metatype $@thin ObjCBool.Type, loc "Location.swift":138:35, scope 75 // user: %36
  %36 = apply %34(%32, %35) : $@convention(method) (Bool, @thin ObjCBool.Type) -> ObjCBool, loc "Location.swift":138:49, scope 75 // user: %40
  %37 = struct_element_addr %1 : $*PositionWrapper, #PositionWrapper.value, loc "Location.swift":138:33, scope 75 // user: %38
  %38 = address_to_pointer %37 : $*PositionWrapper.__Unnamed_union_value to $Builtin.RawPointer, loc "Location.swift":138:33, scope 75 // user: %39
  %39 = pointer_to_address %38 : $Builtin.RawPointer to [strict] $*ObjCBool, loc "Location.swift":138:33, scope 75 // user: %40
  store %36 to %39 : $*ObjCBool, loc "Location.swift":138:33, scope 75 // id: %40
  %41 = tuple (), loc "Location.swift":138:33, scope 75
  %42 = tuple (), loc "Location.swift":138:33, scope 75
  %43 = metatype $@thin PositionTag.Type, loc "Location.swift":139:27, scope 75
  %44 = enum $PositionTag, #PositionTag.C!enumelt, loc "Location.swift":139:39, scope 75 // user: %46
  %45 = struct_element_addr %1 : $*PositionWrapper, #PositionWrapper.tag, loc "Location.swift":139:25, scope 75 // user: %46
  store %44 to %45 : $*PositionTag, loc "Location.swift":139:25, scope 75 // id: %46
  br bb4, loc "Location.swift":139:39, scope 74   // id: %47

bb4:                                              // Preds: bb3 bb2 bb1
  %48 = load %1 : $*PositionWrapper, loc "Location.swift":142:16, scope 68 // user: %50
  dealloc_stack %1 : $*PositionWrapper, loc "Location.swift":129:13, scope 68 // id: %49
  return %48 : $PositionWrapper, loc "Location.swift":142:9, scope 68 // id: %50
}


// ObjCBool.init(Bool) -> ObjCBool
sil @_TFV10ObjectiveC8ObjCBoolCfSbS0_ : $@convention(method) (Bool, @thin ObjCBool.Type) -> ObjCBool

sil_scope 76 { loc "Location.swift":155:10 parent @_TFE9LibCoordsVSC15PositionWrapper6unwrapfT_OS_8Position : $@convention(method) (PositionWrapper) -> Position }
sil_scope 77 { loc "Location.swift":164:5 parent 76 }
sil_scope 78 { loc "Location.swift":163:9 parent 77 }
sil_scope 79 { loc "Location.swift":158:39 parent 77 }
sil_scope 80 { loc "Location.swift":160:39 parent 77 }
sil_scope 81 { loc "Location.swift":162:49 parent 77 }

// PositionWrapper.unwrap() -> Position
sil hidden @_TFE9LibCoordsVSC15PositionWrapper6unwrapfT_OS_8Position : $@convention(method) (PositionWrapper) -> Position {
// %0                                             // users: %15, %10, %5, %2, %1
bb0(%0 : $PositionWrapper):
  debug_value %0 : $PositionWrapper, let, name "self", argno 1, loc "Location.swift":155:10, scope 76 // id: %1
  %2 = struct_extract %0 : $PositionWrapper, #PositionWrapper.tag, loc "Location.swift":156:22, scope 77 // user: %3
  switch_enum %2 : $PositionTag, case #PositionTag.A!enumelt: bb1, case #PositionTag.B!enumelt: bb2, case #PositionTag.C!enumelt: bb3, loc "Location.swift":157:14, scope 78 // id: %3

bb1:                                              // Preds: bb0
  %4 = metatype $@thin Position.Type, loc "Location.swift":158:20, scope 79
  %5 = struct_extract %0 : $PositionWrapper, #PositionWrapper.value, loc "Location.swift":158:28, scope 79 // user: %6
  %6 = unchecked_trivial_bit_cast %5 : $PositionWrapper.__Unnamed_union_value to $Int, loc "Location.swift":158:34, scope 79 // user: %7
  %7 = enum $Position, #Position.A!enumelt.1, %6 : $Int, loc "Location.swift":158:21, scope 79 // user: %8
  br bb4(%7 : $Position), loc "Location.swift":158:13, scope 79 // id: %8

bb2:                                              // Preds: bb0
  %9 = metatype $@thin Position.Type, loc "Location.swift":160:20, scope 80
  %10 = struct_extract %0 : $PositionWrapper, #PositionWrapper.value, loc "Location.swift":160:28, scope 80 // user: %11
  %11 = unchecked_trivial_bit_cast %10 : $PositionWrapper.__Unnamed_union_value to $Double, loc "Location.swift":160:34, scope 80 // user: %12
  %12 = enum $Position, #Position.B!enumelt.1, %11 : $Double, loc "Location.swift":160:21, scope 80 // user: %13
  br bb4(%12 : $Position), loc "Location.swift":160:13, scope 80 // id: %13

bb3:                                              // Preds: bb0
  %14 = metatype $@thin Position.Type, loc "Location.swift":162:20, scope 81
  %15 = struct_extract %0 : $PositionWrapper, #PositionWrapper.value, loc "Location.swift":162:28, scope 81 // user: %16
  %16 = unchecked_trivial_bit_cast %15 : $PositionWrapper.__Unnamed_union_value to $ObjCBool, loc "Location.swift":162:34, scope 81 // user: %18
  // function_ref ObjCBool.boolValue.getter
  %17 = function_ref @_TFV10ObjectiveC8ObjCBoolg9boolValueSb : $@convention(method) (ObjCBool) -> Bool, loc "Location.swift":162:40, scope 81 // user: %18
  %18 = apply %17(%16) : $@convention(method) (ObjCBool) -> Bool, loc "Location.swift":162:40, scope 81 // user: %19
  %19 = enum $Position, #Position.C!enumelt.1, %18 : $Bool, loc "Location.swift":162:21, scope 81 // user: %20
  br bb4(%19 : $Position), loc "Location.swift":162:13, scope 81 // id: %20

// %21                                            // user: %22
bb4(%21 : $Position):                             // Preds: bb3 bb2 bb1
  return %21 : $Position, loc "Location.swift":164:5, scope 77 // id: %22
}


// ObjCBool.boolValue.getter
sil @_TFV10ObjectiveC8ObjCBoolg9boolValueSb : $@convention(method) (ObjCBool) -> Bool

sil_scope 82 { loc "Location.swift":169:18 parent @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01664wrapFT10coordinateTOS_8PositionSd__VSC17CoordinateWrapper : $@convention(thin) (Position, Double) -> CoordinateWrapper }
sil_scope 83 { loc "Location.swift":175:1 parent 82 }

// wrap(coordinate : (Position, Double)) -> CoordinateWrapper
sil private @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01664wrapFT10coordinateTOS_8PositionSd__VSC17CoordinateWrapper : $@convention(thin) (Position, Double) -> CoordinateWrapper {
// %0                                             // user: %3
// %1                                             // user: %3
bb0(%0 : $Position, %1 : $Double):
  %2 = alloc_stack $CoordinateWrapper, var, name "wrapper", loc "Location.swift":170:9, scope 83 // users: %18, %6, %11, %15
  %3 = tuple (%0 : $Position, %1 : $Double), loc "Location.swift":169:23, scope 82 // users: %14, %13, %9, %8, %4
  debug_value %3 : $(Position, Double), let, name "coordinate", argno 1, loc "Location.swift":169:23, scope 82 // id: %4
  %5 = builtin "zeroInitializer"<CoordinateWrapper>() : $CoordinateWrapper, loc "Location.swift":170:37, scope 83 // user: %6
  store %5 to %2 : $*CoordinateWrapper, loc "Location.swift":170:37, scope 83 // id: %6
  // function_ref Position.wrap() -> PositionWrapper
  %7 = function_ref @_TFO9LibCoords8Position4wrapfT_VSC15PositionWrapper : $@convention(method) (Position) -> PositionWrapper, loc "Location.swift":171:37, scope 83 // user: %10
  %8 = tuple_extract %3 : $(Position, Double), 0, loc "Location.swift":171:24, scope 83 // user: %10
  %9 = tuple_extract %3 : $(Position, Double), 1, loc "Location.swift":171:24, scope 83
  %10 = apply %7(%8) : $@convention(method) (Position) -> PositionWrapper, loc "Location.swift":171:42, scope 83 // users: %17, %12
  %11 = struct_element_addr %2 : $*CoordinateWrapper, #CoordinateWrapper.position, loc "Location.swift":171:22, scope 83 // user: %12
  store %10 to %11 : $*PositionWrapper, loc "Location.swift":171:22, scope 83 // id: %12
  %13 = tuple_extract %3 : $(Position, Double), 0, loc "Location.swift":172:21, scope 83
  %14 = tuple_extract %3 : $(Position, Double), 1, loc "Location.swift":172:21, scope 83 // users: %17, %16
  %15 = struct_element_addr %2 : $*CoordinateWrapper, #CoordinateWrapper.value, loc "Location.swift":172:19, scope 83 // user: %16
  store %14 to %15 : $*Double, loc "Location.swift":172:19, scope 83 // id: %16
  %17 = struct $CoordinateWrapper (%10 : $PositionWrapper, %14 : $Double), loc "Location.swift":174:12, scope 83 // user: %19
  dealloc_stack %2 : $*CoordinateWrapper, loc "Location.swift":170:9, scope 83 // id: %18
  return %17 : $CoordinateWrapper, loc "Location.swift":174:5, scope 83 // id: %19
}

sil_scope 84 { loc "Location.swift":177:18 parent @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01666unwrapFT10coordinateVSC17CoordinateWrapper_TOS_8PositionSd_ : $@convention(thin) (CoordinateWrapper) -> (Position, Double) }
sil_scope 85 { loc "Location.swift":179:1 parent 84 }

// unwrap(coordinate : CoordinateWrapper) -> (Position, Double)
sil private @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01666unwrapFT10coordinateVSC17CoordinateWrapper_TOS_8PositionSd_ : $@convention(thin) (CoordinateWrapper) -> (Position, Double) {
// %0                                             // users: %5, %3, %1
bb0(%0 : $CoordinateWrapper):
  debug_value %0 : $CoordinateWrapper, let, name "coordinate", argno 1, loc "Location.swift":177:25, scope 84 // id: %1
  // function_ref PositionWrapper.unwrap() -> Position
  %2 = function_ref @_TFE9LibCoordsVSC15PositionWrapper6unwrapfT_OS_8Position : $@convention(method) (PositionWrapper) -> Position, loc "Location.swift":178:33, scope 85 // user: %4
  %3 = struct_extract %0 : $CoordinateWrapper, #CoordinateWrapper.position, loc "Location.swift":178:24, scope 85 // user: %4
  %4 = apply %2(%3) : $@convention(method) (PositionWrapper) -> Position, loc "Location.swift":178:40, scope 85 // user: %6
  %5 = struct_extract %0 : $CoordinateWrapper, #CoordinateWrapper.value, loc "Location.swift":178:54, scope 85 // user: %6
  %6 = tuple (%4 : $Position, %5 : $Double), loc "Location.swift":177:18, scope 85 // user: %7
  return %6 : $(Position, Double), loc "Location.swift":178:5, scope 85 // id: %7
}

sil_scope 86 {  parent @_TToFC9LibCoords15LocationWrapperg10coordinateVSC17CoordinateWrapper : $@convention(objc_method) (LocationWrapper) -> CoordinateWrapper }

// @objc LocationWrapper.coordinate.getter
sil [thunk] @_TToFC9LibCoords15LocationWrapperg10coordinateVSC17CoordinateWrapper : $@convention(objc_method) (LocationWrapper) -> CoordinateWrapper {
// %0                                             // users: %4, %3, %1
bb0(%0 : $LocationWrapper):
  strong_retain %0 : $LocationWrapper, scope 86   // id: %1
  // function_ref LocationWrapper.coordinate.getter
  %2 = function_ref @_TFC9LibCoords15LocationWrapperg10coordinateVSC17CoordinateWrapper : $@convention(method) (@guaranteed LocationWrapper) -> CoordinateWrapper, scope 86 // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed LocationWrapper) -> CoordinateWrapper, scope 86 // user: %5
  strong_release %0 : $LocationWrapper, scope 86  // id: %4
  return %3 : $CoordinateWrapper, scope 86        // id: %5
}

sil_scope 87 { loc "Location.swift":184:48 parent @_TFC9LibCoords15LocationWrapperg10coordinateVSC17CoordinateWrapper : $@convention(method) (@guaranteed LocationWrapper) -> CoordinateWrapper }
sil_scope 88 { loc "Location.swift":184:103 parent 87 }

// LocationWrapper.coordinate.getter
sil @_TFC9LibCoords15LocationWrapperg10coordinateVSC17CoordinateWrapper : $@convention(method) (@guaranteed LocationWrapper) -> CoordinateWrapper {
// %0                                             // users: %3, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":184:48, scope 87 // id: %1
  // function_ref wrap(coordinate : (Position, Double)) -> CoordinateWrapper
  %2 = function_ref @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01664wrapFT10coordinateTOS_8PositionSd__VSC17CoordinateWrapper : $@convention(thin) (Position, Double) -> CoordinateWrapper, loc "Location.swift":184:61, scope 88 // user: %8
  %3 = ref_element_addr %0 : $LocationWrapper, #LocationWrapper.location, loc "Location.swift":184:82, scope 88 // user: %4
  %4 = load %3 : $*Location, loc "Location.swift":184:82, scope 88 // user: %5
  %5 = struct_extract %4 : $Location, #Location.coordinate, loc "Location.swift":184:91, scope 88 // users: %7, %6
  %6 = tuple_extract %5 : $(Position, Double), 0, loc "Location.swift":184:91, scope 88 // user: %8
  %7 = tuple_extract %5 : $(Position, Double), 1, loc "Location.swift":184:91, scope 88 // user: %8
  %8 = apply %2(%6, %7) : $@convention(thin) (Position, Double) -> CoordinateWrapper, loc "Location.swift":184:101, scope 88 // user: %9
  return %8 : $CoordinateWrapper, loc "Location.swift":184:54, scope 88 // id: %9
}

sil_scope 89 {  parent @_TToFC9LibCoords15LocationWrapperg4nameSS : $@convention(objc_method) (LocationWrapper) -> @autoreleased NSString }

// @objc LocationWrapper.name.getter
sil [thunk] @_TToFC9LibCoords15LocationWrapperg4nameSS : $@convention(objc_method) (LocationWrapper) -> @autoreleased NSString {
// %0                                             // users: %4, %3, %1
bb0(%0 : $LocationWrapper):
  strong_retain %0 : $LocationWrapper, scope 89   // id: %1
  // function_ref LocationWrapper.name.getter
  %2 = function_ref @_TFC9LibCoords15LocationWrapperg4nameSS : $@convention(method) (@guaranteed LocationWrapper) -> @owned String, scope 89 // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed LocationWrapper) -> @owned String, scope 89 // users: %7, %6
  strong_release %0 : $LocationWrapper, scope 89  // id: %4
  // function_ref String._bridgeToObjectiveC() -> NSString
  %5 = function_ref @_TFE10FoundationSS19_bridgeToObjectiveCfT_CSo8NSString : $@convention(method) (@guaranteed String) -> @owned NSString, scope 89 // user: %6
  %6 = apply %5(%3) : $@convention(method) (@guaranteed String) -> @owned NSString, scope 89 // user: %8
  release_value %3 : $String, scope 89            // id: %7
  return %6 : $NSString, scope 89                 // id: %8
}

sil_scope 90 { loc "Location.swift":185:31 parent @_TFC9LibCoords15LocationWrapperg4nameSS : $@convention(method) (@guaranteed LocationWrapper) -> @owned String }
sil_scope 91 { loc "Location.swift":185:58 parent 90 }

// LocationWrapper.name.getter
sil @_TFC9LibCoords15LocationWrapperg4nameSS : $@convention(method) (@guaranteed LocationWrapper) -> @owned String {
// %0                                             // users: %2, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":185:31, scope 90 // id: %1
  %2 = ref_element_addr %0 : $LocationWrapper, #LocationWrapper.location, loc "Location.swift":185:44, scope 91 // user: %3
  %3 = load %2 : $*Location, loc "Location.swift":185:44, scope 91 // user: %4
  %4 = struct_extract %3 : $Location, #Location.name, loc "Location.swift":185:53, scope 91 // users: %6, %5
  retain_value %4 : $String, loc "Location.swift":185:53, scope 91 // id: %5
  return %4 : $String, loc "Location.swift":185:37, scope 91 // id: %6
}


// String._bridgeToObjectiveC() -> NSString
sil [_semantics "convertToObjectiveC"] @_TFE10FoundationSS19_bridgeToObjectiveCfT_CSo8NSString : $@convention(method) (@guaranteed String) -> @owned NSString

sil_scope 92 { loc "Location.swift":188:5 parent @_TFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(method) (CoordinateWrapper, @owned String, @owned LocationWrapper) -> @owned LocationWrapper }
sil_scope 93 { loc "Location.swift":191:5 parent 92 }

// LocationWrapper.init(coordinate : CoordinateWrapper, name : String) -> LocationWrapper
sil @_TFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(method) (CoordinateWrapper, @owned String, @owned LocationWrapper) -> @owned LocationWrapper {
// %0                                             // users: %10, %4
// %1                                             // users: %23, %14, %13, %5
// %2                                             // users: %17, %18, %15, %6
bb0(%0 : $CoordinateWrapper, %1 : $String, %2 : $LocationWrapper):
  %3 = alloc_stack $LocationWrapper, let, name "self", loc "Location.swift":188:5, scope 92 // users: %6, %21, %25
  debug_value %0 : $CoordinateWrapper, let, name "coordinate", argno 1, loc "Location.swift":188:10, scope 92 // id: %4
  debug_value %1 : $String, let, name "name", argno 2, loc "Location.swift":188:41, scope 92 // id: %5
  store %2 to %3 : $*LocationWrapper, loc "Location.swift":188:5, scope 92 // id: %6
  // function_ref Location.init(coordinate : (Position, Double), name : String) -> Location
  %7 = function_ref @_TFV9LibCoords8LocationCfT10coordinateTOS_8PositionSd_4nameSS_S0_ : $@convention(method) (Position, Double, @owned String, @thin Location.Type) -> @owned Location, loc "Location.swift":190:25, scope 93 // user: %14
  %8 = metatype $@thin Location.Type, loc "Location.swift":190:25, scope 93 // user: %14
  // function_ref unwrap(coordinate : CoordinateWrapper) -> (Position, Double)
  %9 = function_ref @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01666unwrapFT10coordinateVSC17CoordinateWrapper_TOS_8PositionSd_ : $@convention(thin) (CoordinateWrapper) -> (Position, Double), loc "Location.swift":190:56, scope 93 // user: %10
  %10 = apply %9(%0) : $@convention(thin) (CoordinateWrapper) -> (Position, Double), loc "Location.swift":190:85, scope 93 // users: %12, %11
  %11 = tuple_extract %10 : $(Position, Double), 0, loc "Location.swift":190:85, scope 93 // user: %14
  %12 = tuple_extract %10 : $(Position, Double), 1, loc "Location.swift":190:85, scope 93 // user: %14
  retain_value %1 : $String, loc "Location.swift":190:94, scope 93 // id: %13
  %14 = apply %7(%11, %12, %1, %8) : $@convention(method) (Position, Double, @owned String, @thin Location.Type) -> @owned Location, loc "Location.swift":190:98, scope 93 // user: %16
  %15 = ref_element_addr %2 : $LocationWrapper, #LocationWrapper.location, loc "Location.swift":190:23, scope 93 // user: %16
  store %14 to %15 : $*Location, loc "Location.swift":190:23, scope 93 // id: %16
  %17 = upcast %2 : $LocationWrapper to $NSObject, scope 93 // user: %19
  %18 = super_method [volatile] %2 : $LocationWrapper, #NSObject.init!initializer.1.foreign : (NSObject.Type) -> () -> NSObject , $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 93 // user: %19
  %19 = apply %18(%17) : $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 93 // user: %20
  %20 = unchecked_ref_cast %19 : $NSObject to $LocationWrapper, scope 93 // users: %24, %22, %26, %21
  store %20 to %3 : $*LocationWrapper, scope 93   // id: %21
  strong_retain %20 : $LocationWrapper, loc "Location.swift":191:5, scope 93 // id: %22
  release_value %1 : $String, loc "Location.swift":191:5, scope 93 // id: %23
  strong_release %20 : $LocationWrapper, loc "Location.swift":188:5, scope 93 // id: %24
  dealloc_stack %3 : $*LocationWrapper, loc "Location.swift":188:5, scope 93 // id: %25
  return %20 : $LocationWrapper, loc "Location.swift":191:5, scope 93 // id: %26
}

sil_scope 94 { loc "Location.swift":188:5 parent @_TFC9LibCoords15LocationWrapperCfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(method) (CoordinateWrapper, @owned String, @thick LocationWrapper.Type) -> @owned LocationWrapper }

// LocationWrapper.__allocating_init(coordinate : CoordinateWrapper, name : String) -> LocationWrapper
sil @_TFC9LibCoords15LocationWrapperCfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(method) (CoordinateWrapper, @owned String, @thick LocationWrapper.Type) -> @owned LocationWrapper {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $CoordinateWrapper, %1 : $String, %2 : $@thick LocationWrapper.Type):
  %3 = alloc_ref [objc] $LocationWrapper, scope 94 // user: %5
  // function_ref LocationWrapper.init(coordinate : CoordinateWrapper, name : String) -> LocationWrapper
  %4 = function_ref @_TFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(method) (CoordinateWrapper, @owned String, @owned LocationWrapper) -> @owned LocationWrapper, scope 94 // user: %5
  %5 = apply %4(%0, %1, %3) : $@convention(method) (CoordinateWrapper, @owned String, @owned LocationWrapper) -> @owned LocationWrapper, scope 94 // user: %6
  return %5 : $LocationWrapper, scope 94          // id: %6
}

sil_scope 95 { loc "Location.swift":188:5 parent @_TToFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(objc_method) (CoordinateWrapper, NSString, @owned LocationWrapper) -> @owned LocationWrapper }

// @objc LocationWrapper.init(coordinate : CoordinateWrapper, name : String) -> LocationWrapper
sil [thunk] @_TToFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(objc_method) (CoordinateWrapper, NSString, @owned LocationWrapper) -> @owned LocationWrapper {
// %0                                             // user: %9
// %1                                             // users: %5, %3
// %2                                             // user: %9
bb0(%0 : $CoordinateWrapper, %1 : $NSString, %2 : $LocationWrapper):
  strong_retain %1 : $NSString, scope 95          // id: %3
  // function_ref static String._unconditionallyBridgeFromObjectiveC(NSString?) -> String
  %4 = function_ref @_TZFE10FoundationSS36_unconditionallyBridgeFromObjectiveCfGSqCSo8NSString_SS : $@convention(method) (@owned Optional<NSString>, @thin String.Type) -> @owned String, scope 95 // user: %7
  %5 = enum $Optional<NSString>, #Optional.some!enumelt.1, %1 : $NSString, scope 95 // user: %7
  %6 = metatype $@thin String.Type, scope 95      // user: %7
  %7 = apply %4(%5, %6) : $@convention(method) (@owned Optional<NSString>, @thin String.Type) -> @owned String, scope 95 // user: %9
  // function_ref LocationWrapper.init(coordinate : CoordinateWrapper, name : String) -> LocationWrapper
  %8 = function_ref @_TFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_ : $@convention(method) (CoordinateWrapper, @owned String, @owned LocationWrapper) -> @owned LocationWrapper, scope 95 // user: %9
  %9 = apply %8(%0, %7, %2) : $@convention(method) (CoordinateWrapper, @owned String, @owned LocationWrapper) -> @owned LocationWrapper, scope 95 // user: %10
  return %9 : $LocationWrapper, scope 95          // id: %10
}


// static String._unconditionallyBridgeFromObjectiveC(NSString?) -> String
sil @_TZFE10FoundationSS36_unconditionallyBridgeFromObjectiveCfGSqCSo8NSString_SS : $@convention(method) (@owned Optional<NSString>, @thin String.Type) -> @owned String

sil_scope 96 { loc "Location.swift":194:5 parent @_TFC9LibCoords15LocationWrappercfT8locationVS_8Location_S0_ : $@convention(method) (@owned Location, @owned LocationWrapper) -> @owned LocationWrapper }
sil_scope 97 { loc "Location.swift":196:5 parent 96 }

// LocationWrapper.init(location : Location) -> LocationWrapper
sil private @_TFC9LibCoords15LocationWrappercfT8locationVS_8Location_S0_ : $@convention(method) (@owned Location, @owned LocationWrapper) -> @owned LocationWrapper {
// %0                                             // users: %7, %14, %5, %3
// %1                                             // users: %8, %9, %6, %4
bb0(%0 : $Location, %1 : $LocationWrapper):
  %2 = alloc_stack $LocationWrapper, let, name "self", loc "Location.swift":194:5, scope 96 // users: %4, %12, %16
  debug_value %0 : $Location, let, name "location", argno 1, loc "Location.swift":194:10, scope 96 // id: %3
  store %1 to %2 : $*LocationWrapper, loc "Location.swift":194:5, scope 96 // id: %4
  retain_value %0 : $Location, loc "Location.swift":195:25, scope 97 // id: %5
  %6 = ref_element_addr %1 : $LocationWrapper, #LocationWrapper.location, loc "Location.swift":195:23, scope 97 // user: %7
  store %0 to %6 : $*Location, loc "Location.swift":195:23, scope 97 // id: %7
  %8 = upcast %1 : $LocationWrapper to $NSObject, scope 97 // user: %10
  %9 = super_method [volatile] %1 : $LocationWrapper, #NSObject.init!initializer.1.foreign : (NSObject.Type) -> () -> NSObject , $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 97 // user: %10
  %10 = apply %9(%8) : $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 97 // user: %11
  %11 = unchecked_ref_cast %10 : $NSObject to $LocationWrapper, scope 97 // users: %15, %13, %17, %12
  store %11 to %2 : $*LocationWrapper, scope 97   // id: %12
  strong_retain %11 : $LocationWrapper, loc "Location.swift":196:5, scope 97 // id: %13
  release_value %0 : $Location, loc "Location.swift":196:5, scope 97 // id: %14
  strong_release %11 : $LocationWrapper, loc "Location.swift":194:5, scope 97 // id: %15
  dealloc_stack %2 : $*LocationWrapper, loc "Location.swift":194:5, scope 97 // id: %16
  return %11 : $LocationWrapper, loc "Location.swift":196:5, scope 97 // id: %17
}

sil_scope 98 { loc "Location.swift":201:17 parent @_TFC9LibCoords15LocationWrapper6lengthfT_Sd : $@convention(method) (@guaranteed LocationWrapper) -> Double }
sil_scope 99 { loc "Location.swift":201:68 parent 98 }

// LocationWrapper.length() -> Double
sil @_TFC9LibCoords15LocationWrapper6lengthfT_Sd : $@convention(method) (@guaranteed LocationWrapper) -> Double {
// %0                                             // users: %3, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":201:17, scope 98 // id: %1
  // function_ref Location.length() -> Double
  %2 = function_ref @_TFV9LibCoords8Location6lengthfT_Sd : $@convention(method) (@guaranteed Location) -> Double, loc "Location.swift":201:59, scope 99 // user: %5
  %3 = ref_element_addr %0 : $LocationWrapper, #LocationWrapper.location, loc "Location.swift":201:50, scope 99 // user: %4
  %4 = load %3 : $*Location, loc "Location.swift":201:50, scope 99 // user: %5
  %5 = apply %2(%4) : $@convention(method) (@guaranteed Location) -> Double, loc "Location.swift":201:66, scope 99 // user: %6
  return %5 : $Double, loc "Location.swift":201:38, scope 99 // id: %6
}

sil_scope 100 { loc "Location.swift":201:17 parent @_TToFC9LibCoords15LocationWrapper6lengthfT_Sd : $@convention(objc_method) (LocationWrapper) -> Double }

// @objc LocationWrapper.length() -> Double
sil [thunk] @_TToFC9LibCoords15LocationWrapper6lengthfT_Sd : $@convention(objc_method) (LocationWrapper) -> Double {
// %0                                             // users: %4, %3, %1
bb0(%0 : $LocationWrapper):
  strong_retain %0 : $LocationWrapper, scope 100  // id: %1
  // function_ref LocationWrapper.length() -> Double
  %2 = function_ref @_TFC9LibCoords15LocationWrapper6lengthfT_Sd : $@convention(method) (@guaranteed LocationWrapper) -> Double, scope 100 // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed LocationWrapper) -> Double, scope 100 // user: %5
  strong_release %0 : $LocationWrapper, scope 100 // id: %4
  return %3 : $Double, scope 100                  // id: %5
}

sil_scope 101 { loc "Location.swift":204:17 parent @_TFC9LibCoords15LocationWrapper6unwrapfT_VS_8Location : $@convention(method) (@guaranteed LocationWrapper) -> @owned Location }
sil_scope 102 { loc "Location.swift":204:61 parent 101 }

// LocationWrapper.unwrap() -> Location
sil @_TFC9LibCoords15LocationWrapper6unwrapfT_VS_8Location : $@convention(method) (@guaranteed LocationWrapper) -> @owned Location {
// %0                                             // users: %2, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":204:17, scope 101 // id: %1
  %2 = ref_element_addr %0 : $LocationWrapper, #LocationWrapper.location, loc "Location.swift":204:52, scope 102 // user: %3
  %3 = load %2 : $*Location, loc "Location.swift":204:52, scope 102 // users: %5, %4
  retain_value %3 : $Location, loc "Location.swift":204:52, scope 102 // id: %4
  return %3 : $Location, loc "Location.swift":204:40, scope 102 // id: %5
}

sil_scope 103 { loc "Location.swift":182:14 parent @_TFC9LibCoords15LocationWrapperD : $@convention(method) (@owned LocationWrapper) -> () }
sil_scope 104 { loc "Location.swift":182:14 parent 103 }

// LocationWrapper.__deallocating_deinit
sil @_TFC9LibCoords15LocationWrapperD : $@convention(method) (@owned LocationWrapper) -> () {
// %0                                             // users: %3, %2, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":182:14, scope 103 // id: %1
  %2 = super_method %0 : $LocationWrapper, #NSObject.deinit!deallocator.foreign : (NSObject) -> () -> () , $@convention(objc_method) (NSObject) -> (), scope 104 // user: %4
  %3 = upcast %0 : $LocationWrapper to $NSObject, scope 104 // user: %4
  %4 = apply %2(%3) : $@convention(objc_method) (NSObject) -> (), scope 104
  %5 = tuple (), scope 104                        // user: %6
  return %5 : $(), scope 104                      // id: %6
}

sil_scope 105 { loc "Location.swift":182:14 parent @_TToFC9LibCoords15LocationWrapperE : $@convention(objc_method) (LocationWrapper) -> () }

// @objc LocationWrapper.__ivar_destroyer
sil @_TToFC9LibCoords15LocationWrapperE : $@convention(objc_method) (LocationWrapper) -> () {
// %0                                             // users: %2, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":182:14, scope 105 // id: %1
  %2 = ref_element_addr %0 : $LocationWrapper, #LocationWrapper.location, scope 105 // user: %3
  destroy_addr %2 : $*Location, scope 105         // id: %3
  %4 = tuple (), scope 105                        // user: %5
  return %4 : $(), scope 105                      // id: %5
}

sil_scope 106 { loc "Location.swift":183:25 parent @_TFC9LibCoords15LocationWrapperg8locationVS_8Location : $@convention(method) (@guaranteed LocationWrapper) -> @owned Location }
sil_scope 107 { loc "Location.swift":183:25 parent 106 }

// LocationWrapper.location.getter
sil [transparent] [fragile] @_TFC9LibCoords15LocationWrapperg8locationVS_8Location : $@convention(method) (@guaranteed LocationWrapper) -> @owned Location {
// %0                                             // users: %2, %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", argno 1, loc "Location.swift":183:25, scope 106 // id: %1
  %2 = ref_element_addr %0 : $LocationWrapper, #LocationWrapper.location, scope 107 // user: %3
  %3 = load %2 : $*Location, scope 107            // users: %5, %4
  retain_value %3 : $Location, scope 107          // id: %4
  return %3 : $Location, loc "Location.swift":183:25, scope 107 // id: %5
}

sil_scope 108 { loc "Location.swift":182:41 parent @_TFC9LibCoords15LocationWrappercfT_S0_ : $@convention(method) (@owned LocationWrapper) -> @owned LocationWrapper }
sil_scope 109 {  parent 108 }

// LocationWrapper.init() -> LocationWrapper
sil @_TFC9LibCoords15LocationWrappercfT_S0_ : $@convention(method) (@owned LocationWrapper) -> @owned LocationWrapper {
// %0                                             // user: %1
bb0(%0 : $LocationWrapper):
  debug_value %0 : $LocationWrapper, let, name "self", scope 108 // id: %1
  %2 = string_literal utf8 "LibCoords.LocationWrapper", loc "Location.swift":182:14, scope 109 // user: %7
  %3 = integer_literal $Builtin.Word, 25, loc "Location.swift":182:14, scope 109 // user: %8
  br bb1, loc "Location.swift":182:14, scope 109  // id: %4

bb1:                                              // Preds: bb0
  %5 = integer_literal $Builtin.Int8, 2, loc "Location.swift":182:14, scope 109 // user: %8
  br bb2, loc "Location.swift":182:14, scope 109  // id: %6

bb2:                                              // Preds: bb1
  %7 = builtin "ptrtoint_Word"(%2 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":182:14, scope 109 // user: %8
  %8 = struct $StaticString (%7 : $Builtin.Word, %3 : $Builtin.Word, %5 : $Builtin.Int8), loc "Location.swift":182:14, scope 109 // user: %35
  br bb3, loc "Location.swift":182:14, scope 109  // id: %9

bb3:                                              // Preds: bb2
  %10 = string_literal utf8 "init()", loc "Location.swift":182:14, scope 109 // user: %15
  %11 = integer_literal $Builtin.Word, 6, loc "Location.swift":182:14, scope 109 // user: %16
  br bb4, loc "Location.swift":182:14, scope 109  // id: %12

bb4:                                              // Preds: bb3
  %13 = integer_literal $Builtin.Int8, 2, loc "Location.swift":182:14, scope 109 // user: %16
  br bb5, loc "Location.swift":182:14, scope 109  // id: %14

bb5:                                              // Preds: bb4
  %15 = builtin "ptrtoint_Word"(%10 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":182:14, scope 109 // user: %16
  %16 = struct $StaticString (%15 : $Builtin.Word, %11 : $Builtin.Word, %13 : $Builtin.Int8), loc "Location.swift":182:14, scope 109 // user: %32
  br bb6, loc "Location.swift":182:14, scope 109  // id: %17

bb6:                                              // Preds: bb5
  %18 = string_literal utf8 "Location.swift", loc "Location.swift":182:14, scope 109 // user: %23
  %19 = integer_literal $Builtin.Word, 14, loc "Location.swift":182:14, scope 109 // user: %24
  br bb7, loc "Location.swift":182:14, scope 109  // id: %20

bb7:                                              // Preds: bb6
  %21 = integer_literal $Builtin.Int8, 2, loc "Location.swift":182:14, scope 109 // user: %24
  br bb8, loc "Location.swift":182:14, scope 109  // id: %22

bb8:                                              // Preds: bb7
  %23 = builtin "ptrtoint_Word"(%18 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":182:14, scope 109 // user: %24
  %24 = struct $StaticString (%23 : $Builtin.Word, %19 : $Builtin.Word, %21 : $Builtin.Int8), loc "Location.swift":182:14, scope 109 // user: %32
  br bb9, loc "Location.swift":182:14, scope 109  // id: %25

bb9:                                              // Preds: bb8
  %26 = integer_literal $Builtin.Int64, 182, loc "Location.swift":182:14, scope 109 // user: %27
  %27 = struct $UInt (%26 : $Builtin.Int64), loc "Location.swift":182:14, scope 109 // user: %32
  %28 = integer_literal $Builtin.Int64, 14, loc "Location.swift":182:14, scope 109 // user: %29
  %29 = struct $UInt (%28 : $Builtin.Int64), loc "Location.swift":182:14, scope 109 // user: %32
  br bb10, loc "Location.swift":182:14, scope 109 // id: %30

bb10:                                             // Preds: bb9
  // function_ref (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1)
  %31 = function_ref @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, StaticString, UInt, UInt) -> (), loc "Location.swift":182:14, scope 109 // user: %32
  %32 = partial_apply %31(%16, %24, %27, %29) : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, StaticString, UInt, UInt) -> (), loc "Location.swift":182:14, scope 109 // user: %35
  // function_ref specialized specialized StaticString.withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A
  %33 = function_ref @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), loc "Location.swift":182:14, scope 109 // user: %35
  %34 = alloc_stack $(), loc "Location.swift":182:14, scope 109 // users: %36, %35
  %35 = apply %33(%34, %8, %32) : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), loc "Location.swift":182:14, scope 109
  dealloc_stack %34 : $*(), loc "Location.swift":182:14, scope 109 // id: %36
  br bb11, loc "Location.swift":182:14, scope 109 // id: %37

bb11:                                             // Preds: bb10
  %38 = builtin "int_trap"() : $Never, loc "Location.swift":182:14, scope 109
  unreachable, scope 108                          // id: %39
}

sil_scope 110 { loc "Location.swift":182:41 parent @_TFC9LibCoords15LocationWrapperCfT_S0_ : $@convention(method) (@thick LocationWrapper.Type) -> @owned LocationWrapper }

// LocationWrapper.__allocating_init() -> LocationWrapper
sil @_TFC9LibCoords15LocationWrapperCfT_S0_ : $@convention(method) (@thick LocationWrapper.Type) -> @owned LocationWrapper {
bb0(%0 : $@thick LocationWrapper.Type):
  %1 = alloc_ref [objc] $LocationWrapper, scope 110 // user: %3
  // function_ref LocationWrapper.init() -> LocationWrapper
  %2 = function_ref @_TFC9LibCoords15LocationWrappercfT_S0_ : $@convention(method) (@owned LocationWrapper) -> @owned LocationWrapper, scope 110 // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned LocationWrapper) -> @owned LocationWrapper, scope 110 // user: %4
  return %3 : $LocationWrapper, scope 110         // id: %4
}

sil_scope 111 {  parent @_TFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt) -> Never }

// _unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never
sil public_external [transparent] [fragile] @_TFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt) -> Never {
// %0                                             // users: %15, %5
// %1                                             // users: %12, %6
// %2                                             // users: %12, %7
// %3                                             // users: %12, %8
// %4                                             // users: %12, %9
bb0(%0 : $StaticString, %1 : $StaticString, %2 : $StaticString, %3 : $UInt, %4 : $UInt):
  debug_value %0 : $StaticString, scope 111       // id: %5
  debug_value %1 : $StaticString, scope 111       // id: %6
  debug_value %2 : $StaticString, scope 111       // id: %7
  debug_value %3 : $UInt, scope 111               // id: %8
  debug_value %4 : $UInt, scope 111               // id: %9
  br bb1, scope 111                               // id: %10

bb1:                                              // Preds: bb0
  // function_ref (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1)
  %11 = function_ref @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, StaticString, UInt, UInt) -> (), scope 111 // user: %12
  %12 = partial_apply %11(%1, %2, %3, %4) : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, StaticString, UInt, UInt) -> (), scope 111 // user: %15
  // function_ref specialized specialized StaticString.withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A
  %13 = function_ref @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 111 // user: %15
  %14 = alloc_stack $(), scope 111                // users: %16, %15
  %15 = apply %13(%14, %0, %12) : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 111
  dealloc_stack %14 : $*(), scope 111             // id: %16
  br bb2, scope 111                               // id: %17

bb2:                                              // Preds: bb1
  %18 = builtin "int_trap"() : $Never, scope 111
  unreachable, scope 111                          // id: %19
}

sil_scope 112 {  parent @_TFVs12StaticStringCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__S_ : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin StaticString.Type) -> StaticString }

// StaticString.init(_builtinStringLiteral : Builtin.RawPointer, utf8CodeUnitCount : Builtin.Word, isASCII : Builtin.Int1) -> StaticString
sil public_external [transparent] [fragile] [readonly] @_TFVs12StaticStringCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__S_ : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin StaticString.Type) -> StaticString {
// %0                                             // users: %13, %4
// %1                                             // users: %14, %5
// %2                                             // users: %7, %6
bb0(%0 : $Builtin.RawPointer, %1 : $Builtin.Word, %2 : $Builtin.Int1, %3 : $@thin StaticString.Type):
  debug_value %0 : $Builtin.RawPointer, scope 112 // id: %4
  debug_value %1 : $Builtin.Word, scope 112       // id: %5
  debug_value %2 : $Builtin.Int1, scope 112       // id: %6
  cond_br %2, bb2, bb1, scope 112                 // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int8, 0, scope 112 // user: %9
  br bb3(%8 : $Builtin.Int8), scope 112           // id: %9

bb2:                                              // Preds: bb0
  %10 = integer_literal $Builtin.Int8, 2, scope 112 // user: %11
  br bb3(%10 : $Builtin.Int8), scope 112          // id: %11

// %12                                            // user: %14
bb3(%12 : $Builtin.Int8):                         // Preds: bb2 bb1
  %13 = builtin "ptrtoint_Word"(%0 : $Builtin.RawPointer) : $Builtin.Word, scope 112 // user: %14
  %14 = struct $StaticString (%13 : $Builtin.Word, %1 : $Builtin.Word, %12 : $Builtin.Int8), scope 112 // user: %15
  return %14 : $StaticString, scope 112           // id: %15
}

sil_scope 113 {  parent @_TFSuCfT22_builtinIntegerLiteralBi2048__Su : $@convention(method) (Builtin.Int2048, @thin UInt.Type) -> UInt }

// UInt.init(_builtinIntegerLiteral : Builtin.Int2048) -> UInt
sil public_external [transparent] [fragile] @_TFSuCfT22_builtinIntegerLiteralBi2048__Su : $@convention(method) (Builtin.Int2048, @thin UInt.Type) -> UInt {
// %0                                             // users: %3, %2
bb0(%0 : $Builtin.Int2048, %1 : $@thin UInt.Type):
  debug_value %0 : $Builtin.Int2048, scope 113    // id: %2
  %3 = builtin "s_to_u_checked_trunc_Int2048_Int64"(%0 : $Builtin.Int2048) : $(Builtin.Int64, Builtin.Int1), scope 113 // user: %4
  %4 = tuple_extract %3 : $(Builtin.Int64, Builtin.Int1), 0, scope 113 // user: %5
  %5 = struct $UInt (%4 : $Builtin.Int64), scope 113 // user: %6
  return %5 : $UInt, scope 113                    // id: %6
}

sil_scope 114 { loc "Location.swift":182:41 parent @_TToFC9LibCoords15LocationWrappercfT_S0_ : $@convention(objc_method) (@owned LocationWrapper) -> @owned LocationWrapper }

// @objc LocationWrapper.init() -> LocationWrapper
sil [thunk] @_TToFC9LibCoords15LocationWrappercfT_S0_ : $@convention(objc_method) (@owned LocationWrapper) -> @owned LocationWrapper {
// %0                                             // user: %2
bb0(%0 : $LocationWrapper):
  // function_ref LocationWrapper.init() -> LocationWrapper
  %1 = function_ref @_TFC9LibCoords15LocationWrappercfT_S0_ : $@convention(method) (@owned LocationWrapper) -> @owned LocationWrapper, scope 114 // user: %2
  %2 = apply %1(%0) : $@convention(method) (@owned LocationWrapper) -> @owned LocationWrapper, scope 114 // user: %3
  return %2 : $LocationWrapper, scope 114         // id: %3
}

sil_scope 115 { loc "Location.swift":231:24 parent @_TZFC9LibCoords17LocationFunctions8midpointfT1xVSC17CoordinateWrapper1yS1_5errorGSqGVs33AutoreleasingUnsafeMutablePointerGSqCSo7NSError____S1_ : $@convention(method) (CoordinateWrapper, CoordinateWrapper, Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, @thick LocationFunctions.Type) -> CoordinateWrapper }
sil_scope 116 { loc "Location.swift":248:5 parent 115 }
sil_scope 117 { loc "Location.swift":236:9 parent 116 }
sil_scope 118 { loc "Location.swift":243:9 parent 116 }
sil_scope 119 { loc "Location.swift":243:9 parent 118 }
sil_scope 120 { loc "Location.swift":242:13 parent 119 }
sil_scope 121 { loc "Location.swift":242:13 parent 120 }

// static LocationFunctions.midpoint(x : CoordinateWrapper, y : CoordinateWrapper, error : AutoreleasingUnsafeMutablePointer<NSError?>?) -> CoordinateWrapper
sil @_TZFC9LibCoords17LocationFunctions8midpointfT1xVSC17CoordinateWrapper1yS1_5errorGSqGVs33AutoreleasingUnsafeMutablePointerGSqCSo7NSError____S1_ : $@convention(method) (CoordinateWrapper, CoordinateWrapper, Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, @thick LocationFunctions.Type) -> CoordinateWrapper {
// %0                                             // users: %11, %5
// %1                                             // users: %15, %6
// %2                                             // users: %41, %7
// %3                                             // user: %8
bb0(%0 : $CoordinateWrapper, %1 : $CoordinateWrapper, %2 : $Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, %3 : $@thick LocationFunctions.Type):
  %4 = global_addr @LibCoordErrorDomain : $*NSString, scope 115 // user: %47
  debug_value %0 : $CoordinateWrapper, let, name "x", argno 1, loc "Location.swift":231:33, scope 115 // id: %5
  debug_value %1 : $CoordinateWrapper, let, name "y", argno 2, loc "Location.swift":231:55, scope 115 // id: %6
  debug_value %2 : $Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, let, name "error", argno 3, loc "Location.swift":231:77, scope 115 // id: %7
  debug_value %3 : $@thick LocationFunctions.Type, let, name "self", argno 4, loc "Location.swift":231:24, scope 115 // id: %8
  // function_ref midpoint(x : (Position, Double), y : (Position, Double)) throws -> (Position, Double)
  %9 = function_ref @_TF9LibCoords8midpointFzT1xTOS_8PositionSd_1yTS0_Sd__TS0_Sd_ : $@convention(thin) (Position, Double, Position, Double) -> (Position, Double, @error Error), loc "Location.swift":234:44, scope 117 // user: %18
  // function_ref unwrap(coordinate : CoordinateWrapper) -> (Position, Double)
  %10 = function_ref @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01666unwrapFT10coordinateVSC17CoordinateWrapper_TOS_8PositionSd_ : $@convention(thin) (CoordinateWrapper) -> (Position, Double), loc "Location.swift":234:56, scope 117 // user: %11
  %11 = apply %10(%0) : $@convention(thin) (CoordinateWrapper) -> (Position, Double), loc "Location.swift":234:76, scope 117 // users: %13, %12
  %12 = tuple_extract %11 : $(Position, Double), 0, loc "Location.swift":234:76, scope 117 // user: %18
  %13 = tuple_extract %11 : $(Position, Double), 1, loc "Location.swift":234:76, scope 117 // user: %18
  // function_ref unwrap(coordinate : CoordinateWrapper) -> (Position, Double)
  %14 = function_ref @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01666unwrapFT10coordinateVSC17CoordinateWrapper_TOS_8PositionSd_ : $@convention(thin) (CoordinateWrapper) -> (Position, Double), loc "Location.swift":234:82, scope 117 // user: %15
  %15 = apply %14(%1) : $@convention(thin) (CoordinateWrapper) -> (Position, Double), loc "Location.swift":234:102, scope 117 // users: %17, %16
  %16 = tuple_extract %15 : $(Position, Double), 0, loc "Location.swift":234:102, scope 117 // user: %18
  %17 = tuple_extract %15 : $(Position, Double), 1, loc "Location.swift":234:102, scope 117 // user: %18
  try_apply %9(%12, %13, %16, %17) : $@convention(thin) (Position, Double, Position, Double) -> (Position, Double, @error Error), normal bb1, error bb13, loc "Location.swift":234:103, scope 117 // id: %18

// %19                                            // users: %21, %20
bb1(%19 : $(Position, Double)):                   // Preds: bb0
  %20 = tuple_extract %19 : $(Position, Double), 0, loc "Location.swift":234:103, scope 117 // user: %22
  %21 = tuple_extract %19 : $(Position, Double), 1, loc "Location.swift":234:103, scope 117 // user: %22
  %22 = tuple (%20 : $Position, %21 : $Double), loc "Location.swift":234:103, scope 117 // users: %26, %25, %23
  debug_value %22 : $(Position, Double), let, name "coordinate", loc "Location.swift":234:17, scope 117 // id: %23
  // function_ref wrap(coordinate : (Position, Double)) -> CoordinateWrapper
  %24 = function_ref @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01664wrapFT10coordinateTOS_8PositionSd__VSC17CoordinateWrapper : $@convention(thin) (Position, Double) -> CoordinateWrapper, loc "Location.swift":235:20, scope 117 // user: %27
  %25 = tuple_extract %22 : $(Position, Double), 0, loc "Location.swift":235:37, scope 117 // user: %27
  %26 = tuple_extract %22 : $(Position, Double), 1, loc "Location.swift":235:37, scope 117 // user: %27
  %27 = apply %24(%25, %26) : $@convention(thin) (Position, Double) -> CoordinateWrapper, loc "Location.swift":235:47, scope 117 // user: %28
  br bb3(%27 : $CoordinateWrapper), loc "Location.swift":235:13, scope 117 // id: %28

bb2:                                              // Preds: bb12
  // function_ref wrap(coordinate : (Position, Double)) -> CoordinateWrapper
  %29 = function_ref @_TF9LibCoordsP33_58AC38516D20B0BB40E15ACC2D7A01664wrapFT10coordinateTOS_8PositionSd__VSC17CoordinateWrapper : $@convention(thin) (Position, Double) -> CoordinateWrapper, loc "Location.swift":247:16, scope 116 // user: %36
  %30 = metatype $@thin Position.Type, loc "Location.swift":247:34, scope 116
  %31 = integer_literal $Builtin.Int64, 0, loc "Location.swift":247:37, scope 116 // user: %32
  %32 = struct $Int (%31 : $Builtin.Int64), loc "Location.swift":247:37, scope 116 // user: %33
  %33 = enum $Position, #Position.A!enumelt.1, %32 : $Int, loc "Location.swift":247:35, scope 116 // user: %36
  %34 = float_literal $Builtin.FPIEEE64, 0x0 // 0, loc "Location.swift":247:41, scope 116 // user: %35
  %35 = struct $Double (%34 : $Builtin.FPIEEE64), loc "Location.swift":247:41, scope 116 // user: %36
  %36 = apply %29(%33, %35) : $@convention(thin) (Position, Double) -> CoordinateWrapper, loc "Location.swift":247:43, scope 116 // user: %37
  br bb3(%36 : $CoordinateWrapper), loc "Location.swift":247:9, scope 116 // id: %37

// %38                                            // user: %39
bb3(%38 : $CoordinateWrapper):                    // Preds: bb2 bb1
  return %38 : $CoordinateWrapper, loc "Location.swift":248:5, scope 116 // id: %39

bb4:                                              // Preds: bb13
  debug_value %126 : $Error, let, name "throwError", loc "Location.swift":237:19, scope 118 // id: %40
  switch_enum %2 : $Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, case #Optional.some!enumelt.1: bb6, default bb5, loc "Location.swift":238:33, scope 120 // id: %41

bb5:                                              // Preds: bb4
  br bb12, loc "Location.swift":238:33, scope 115 // id: %42

// %43                                            // users: %88, %44
bb6(%43 : $AutoreleasingUnsafeMutablePointer<Optional<NSError>>): // Preds: bb4
  debug_value %43 : $AutoreleasingUnsafeMutablePointer<Optional<NSError>>, let, name "localError", loc "Location.swift":238:20, scope 120 // id: %44
  // function_ref NSError.__allocating_init(domain : String, code : Int, userInfo : [AnyHashable : Any]?) -> NSError
  %45 = function_ref @_TFCSo7NSErrorCfT6domainSS4codeSi8userInfoGSqGVs10DictionaryVs11AnyHashableP____S_ : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @thick NSError.Type) -> @owned NSError, loc "Location.swift":239:38, scope 121 // user: %64
  %46 = metatype $@thick NSError.Type, loc "Location.swift":239:38, scope 121 // user: %64
  %47 = load %4 : $*NSString, loc "Location.swift":239:54, scope 121 // user: %49
  // function_ref static String._unconditionallyBridgeFromObjectiveC(NSString?) -> String
  %48 = function_ref @_TZFE10FoundationSS36_unconditionallyBridgeFromObjectiveCfGSqCSo8NSString_SS : $@convention(method) (@owned Optional<NSString>, @thin String.Type) -> @owned String, loc "Location.swift":239:54, scope 121 // user: %51
  %49 = enum $Optional<NSString>, #Optional.some!enumelt.1, %47 : $NSString, loc "Location.swift":239:54, scope 121 // user: %51
  %50 = metatype $@thin String.Type, loc "Location.swift":239:54, scope 121 // user: %51
  %51 = apply %48(%49, %50) : $@convention(method) (@owned Optional<NSString>, @thin String.Type) -> @owned String, loc "Location.swift":239:54, scope 121 // user: %64
  %52 = alloc_stack $Error, loc "Location.swift":240:64, scope 121 // users: %122, %56, %54
  strong_retain %126 : $Error, loc "Location.swift":240:53, scope 121 // id: %53
  store %126 to %52 : $*Error, loc "Location.swift":240:64, scope 121 // id: %54
  %55 = alloc_stack $CoordinateError, loc "Location.swift":240:64, scope 121 // users: %121, %57, %56
  unconditional_checked_cast_addr take_always Error in %52 : $*Error to CoordinateError in %55 : $*CoordinateError, loc "Location.swift":240:64, scope 121 // id: %56
  %57 = load %55 : $*CoordinateError, loc "Location.swift":240:64, scope 121 // user: %59
  // function_ref CoordinateError.rawValue.getter
  %58 = function_ref @_TFOSC15CoordinateErrorg8rawValueSi : $@convention(method) (CoordinateError) -> Int, loc "Location.swift":240:85, scope 121 // user: %59
  %59 = apply %58(%57) : $@convention(method) (CoordinateError) -> Int, loc "Location.swift":240:85, scope 121 // user: %64
  %60 = alloc_stack $Optional<Dictionary<AnyHashable, Any>>, loc "Location.swift":241:56, scope 121 // users: %61, %120, %63
  inject_enum_addr %60 : $*Optional<Dictionary<AnyHashable, Any>>, #Optional.none!enumelt, loc "Location.swift":241:56, scope 121 // id: %61
  %62 = tuple (), loc "Location.swift":241:56, scope 121
  %63 = load %60 : $*Optional<Dictionary<AnyHashable, Any>>, loc "Location.swift":241:56, scope 121 // user: %64
  %64 = apply %45(%51, %59, %63, %46) : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @thick NSError.Type) -> @owned NSError, loc "Location.swift":241:59, scope 121 // user: %65
  %65 = unchecked_ref_cast %64 : $NSError to $Optional<NSError>, loc "Location.swift":239:38, scope 121 // users: %85, %78, %79, %104, %66
  retain_value %65 : $Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %66
  br bb7, loc "Location.swift":239:36, scope 121  // id: %67

bb7:                                              // Preds: bb6
  %68 = metatype $@thick Optional<NSError>.Type, loc "Location.swift":239:36, scope 121 // user: %69
  %69 = builtin "sizeof"<Optional<NSError>>(%68 : $@thick Optional<NSError>.Type) : $Builtin.Word, loc "Location.swift":239:36, scope 121 // user: %72
  %70 = metatype $@thick Optional<AnyObject>.Type, loc "Location.swift":239:36, scope 121 // user: %71
  %71 = builtin "sizeof"<Optional<AnyObject>>(%70 : $@thick Optional<AnyObject>.Type) : $Builtin.Word, loc "Location.swift":239:36, scope 121 // user: %72
  %72 = builtin "cmp_eq_Word"(%69 : $Builtin.Word, %71 : $Builtin.Word) : $Builtin.Int1, loc "Location.swift":239:36, scope 121 // user: %74
  %73 = integer_literal $Builtin.Int1, -1, loc "Location.swift":239:36, scope 121 // user: %74
  %74 = builtin "int_expect_Int1"(%72 : $Builtin.Int1, %73 : $Builtin.Int1) : $Builtin.Int1, loc "Location.swift":239:36, scope 121 // user: %75
  cond_br %74, bb8, bb10, loc "Location.swift":239:36, scope 121 // id: %75

bb8:                                              // Preds: bb7
  br bb9, loc "Location.swift":239:36, scope 121  // id: %76

bb9:                                              // Preds: bb8
  %77 = alloc_stack $Optional<NSError>, loc "Location.swift":239:36, scope 121 // users: %79, %84, %83, %80
  retain_value %65 : $Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %78
  store %65 to %77 : $*Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %79
  %80 = unchecked_addr_cast %77 : $*Optional<NSError> to $*Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // user: %81
  %81 = load %80 : $*Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // users: %103, %100, %99, %94, %86, %82
  retain_value %81 : $Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // id: %82
  destroy_addr %77 : $*Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %83
  dealloc_stack %77 : $*Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %84
  release_value %65 : $Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %85
  autorelease_value %81 : $Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // id: %86
  // function_ref UnsafeMutablePointer.withMemoryRebound<A, B> (to : A1.Type, capacity : Int, (UnsafeMutablePointer<A1>) throws -> B1) throws -> B1
  %87 = function_ref @_TFSp17withMemoryReboundu0_rfzT2toMqd__8capacitySiFzGSpqd___qd_0__qd_0_ : $@convention(method) <τ_0_0><τ_1_0, τ_1_1> (@thick τ_1_0.Type, Int, @owned @callee_owned (UnsafeMutablePointer<τ_1_0>) -> (@out τ_1_1, @error Error), UnsafeMutablePointer<τ_0_0>) -> (@out τ_1_1, @error Error), loc "Location.swift":239:36, scope 121 // user: %101
  %88 = struct_extract %43 : $AutoreleasingUnsafeMutablePointer<Optional<NSError>>, #AutoreleasingUnsafeMutablePointer._rawValue, loc "Location.swift":239:36, scope 121 // user: %89
  %89 = struct $UnsafeMutablePointer<Optional<NSError>> (%88 : $Builtin.RawPointer), loc "Location.swift":239:36, scope 121 // user: %101
  %90 = metatype $@thick Optional<Unmanaged<AnyObject>>.Type, loc "Location.swift":239:36, scope 121 // user: %101
  %91 = integer_literal $Builtin.Int64, 1, loc "Location.swift":239:36, scope 121 // user: %92
  %92 = struct $Int (%91 : $Builtin.Int64), loc "Location.swift":239:36, scope 121 // user: %101
  // function_ref AutoreleasingUnsafeMutablePointer.(pointee.setter).(closure #1)
  %93 = function_ref @_TFFVs33AutoreleasingUnsafeMutablePointers7pointeexU_FGSpGSqGVs9UnmanagedPs9AnyObject____T_ : $@convention(thin) (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned Optional<AnyObject>) -> (), loc "Location.swift":239:36, scope 121 // user: %94
  %94 = partial_apply %93(%81) : $@convention(thin) (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned Optional<AnyObject>) -> (), loc "Location.swift":239:36, scope 121 // user: %95
  %95 = convert_function %94 : $@callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> () to $@callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error, loc "Location.swift":239:36, scope 121 // user: %97
  // function_ref thunk
  %96 = function_ref @_TTRGrXFo_dGSpGSqGVs9UnmanagedPs9AnyObject_____zoPs5Error__XFo_dGSpGSqGS_PS0______iT_zoPS1___ : $@convention(thin) <τ_0_0> (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned @callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error) -> (@out (), @error Error), loc "Location.swift":239:36, scope 121 // user: %97
  %97 = partial_apply %96<Optional<NSError>>(%95) : $@convention(thin) <τ_0_0> (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned @callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error) -> (@out (), @error Error), loc "Location.swift":239:36, scope 121 // user: %101
  %98 = alloc_stack $(), loc "Location.swift":239:36, scope 121 // users: %102, %101
  retain_value %81 : $Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // id: %99
  retain_value %81 : $Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // id: %100
  %101 = apply [nothrow] %87<Optional<NSError>, Optional<Unmanaged<AnyObject>>, ()>(%98, %90, %92, %97, %89) : $@convention(method) <τ_0_0><τ_1_0, τ_1_1> (@thick τ_1_0.Type, Int, @owned @callee_owned (UnsafeMutablePointer<τ_1_0>) -> (@out τ_1_1, @error Error), UnsafeMutablePointer<τ_0_0>) -> (@out τ_1_1, @error Error), loc "Location.swift":239:36, scope 121
  dealloc_stack %98 : $*(), loc "Location.swift":239:36, scope 121 // id: %102
  release_value %81 : $Optional<AnyObject>, loc "Location.swift":239:36, scope 121 // id: %103
  release_value %65 : $Optional<NSError>, loc "Location.swift":239:36, scope 121 // id: %104
  br bb11, loc "Location.swift":239:36, scope 121 // id: %105

bb10:                                             // Preds: bb7
  %106 = string_literal utf8 "can't unsafeBitCast between types of different sizes", loc "Location.swift":239:36, scope 121 // user: %108
  %107 = integer_literal $Builtin.Word, 52, loc "Location.swift":239:36, scope 121 // user: %110
  %108 = builtin "ptrtoint_Word"(%106 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":239:36, scope 121 // user: %110
  %109 = integer_literal $Builtin.Int8, 2, loc "Location.swift":239:36, scope 121 // users: %114, %110
  %110 = struct $StaticString (%108 : $Builtin.Word, %107 : $Builtin.Word, %109 : $Builtin.Int8), loc "Location.swift":239:36, scope 121 // user: %118
  %111 = string_literal utf8 "fatal error", loc "Location.swift":239:36, scope 121 // user: %113
  %112 = integer_literal $Builtin.Word, 11, loc "Location.swift":239:36, scope 121 // user: %114
  %113 = builtin "ptrtoint_Word"(%111 : $Builtin.RawPointer) : $Builtin.Word, loc "Location.swift":239:36, scope 121 // user: %114
  %114 = struct $StaticString (%113 : $Builtin.Word, %112 : $Builtin.Word, %109 : $Builtin.Int8), loc "Location.swift":239:36, scope 121 // user: %118
  %115 = integer_literal $Builtin.Int32, 1, loc "Location.swift":239:36, scope 121 // user: %116
  %116 = struct $UInt32 (%115 : $Builtin.Int32), loc "Location.swift":239:36, scope 121 // user: %118
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %117 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":239:36, scope 121 // user: %118
  %118 = apply %117(%114, %110, %116) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, loc "Location.swift":239:36, scope 121
  unreachable, scope 115                          // id: %119

bb11:                                             // Preds: bb9
  dealloc_stack %60 : $*Optional<Dictionary<AnyHashable, Any>>, loc "Location.swift":241:59, scope 121 // id: %120
  dealloc_stack %55 : $*CoordinateError, loc "Location.swift":241:59, scope 121 // id: %121
  dealloc_stack %52 : $*Error, loc "Location.swift":241:59, scope 121 // id: %122
  br bb12, loc "Location.swift":242:13, scope 120 // id: %123

bb12:                                             // Preds: bb5 bb11
  strong_release %126 : $Error, loc "Location.swift":236:9, scope 118 // id: %124
  br bb2, loc "Location.swift":237:30, scope 118  // id: %125

// %126                                           // users: %40, %53, %54, %124
bb13(%126 : $Error):                              // Preds: bb0
  br bb4, loc "Location.swift":234:103, scope 117 // id: %127
}

sil_scope 122 {  parent @_TFCSo7NSErrorCfT6domainSS4codeSi8userInfoGSqGVs10DictionaryVs11AnyHashableP____S_ : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @thick NSError.Type) -> @owned NSError }

// NSError.__allocating_init(domain : String, code : Int, userInfo : [AnyHashable : Any]?) -> NSError
sil shared @_TFCSo7NSErrorCfT6domainSS4codeSi8userInfoGSqGVs10DictionaryVs11AnyHashableP____S_ : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @thick NSError.Type) -> @owned NSError {
// %0                                             // user: %7
// %1                                             // user: %7
// %2                                             // user: %7
// %3                                             // user: %4
bb0(%0 : $String, %1 : $Int, %2 : $Optional<Dictionary<AnyHashable, Any>>, %3 : $@thick NSError.Type):
  %4 = thick_to_objc_metatype %3 : $@thick NSError.Type to $@objc_metatype NSError.Type, scope 122 // user: %5
  %5 = alloc_ref_dynamic [objc] %4 : $@objc_metatype NSError.Type, $NSError, scope 122 // user: %7
  // function_ref @nonobjc NSError.init(domain : String, code : Int, userInfo : [AnyHashable : Any]?) -> NSError
  %6 = function_ref @_TTOFCSo7NSErrorcfT6domainSS4codeSi8userInfoGSqGVs10DictionaryVs11AnyHashableP____S_ : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @owned NSError) -> @owned NSError, scope 122 // user: %7
  %7 = apply %6(%0, %1, %2, %5) : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @owned NSError) -> @owned NSError, scope 122 // user: %8
  return %7 : $NSError, scope 122                 // id: %8
}

sil_scope 123 {  parent @_TFSqCfT10nilLiteralT__GSqx_ : $@convention(method) <τ_0_0> (@thin Optional<τ_0_0>.Type) -> @out Optional<τ_0_0> }

// Optional.init(nilLiteral : ()) -> A?
sil public_external [transparent] [fragile] @_TFSqCfT10nilLiteralT__GSqx_ : $@convention(method) <Wrapped> (@thin Optional<Wrapped>.Type) -> @out Optional<Wrapped> {
// %0                                             // user: %2
bb0(%0 : $*Optional<Wrapped>, %1 : $@thin Optional<Wrapped>.Type):
  inject_enum_addr %0 : $*Optional<Wrapped>, #Optional.none!enumelt, scope 123 // id: %2
  %3 = tuple (), scope 123                        // user: %4
  return %3 : $(), scope 123                      // id: %4
}

sil_scope 124 {  parent @_TFVs33AutoreleasingUnsafeMutablePointers7pointeex : $@convention(method) <τ_0_0> (@in τ_0_0, AutoreleasingUnsafeMutablePointer<τ_0_0>) -> () }

// AutoreleasingUnsafeMutablePointer.pointee.setter
sil public_external [transparent] [fragile] @_TFVs33AutoreleasingUnsafeMutablePointers7pointeex : $@convention(method) <Pointee> (@in Pointee, AutoreleasingUnsafeMutablePointer<Pointee>) -> () {
// %0                                             // users: %58, %5, %2
// %1                                             // users: %42, %3
bb0(%0 : $*Pointee, %1 : $AutoreleasingUnsafeMutablePointer<Pointee>):
  debug_value_addr %0 : $*Pointee, scope 124      // id: %2
  debug_value %1 : $AutoreleasingUnsafeMutablePointer<Pointee>, scope 124 // id: %3
  %4 = alloc_stack $Pointee, scope 124            // users: %39, %37, %31, %5
  copy_addr %0 to [initialization] %4 : $*Pointee, scope 124 // id: %5
  br bb1, scope 124                               // id: %6

bb1:                                              // Preds: bb0
  %7 = metatype $@thick Pointee.Type, scope 124   // user: %8
  %8 = builtin "sizeof"<Pointee>(%7 : $@thick Pointee.Type) : $Builtin.Word, scope 124 // user: %11
  %9 = metatype $@thick Optional<AnyObject>.Type, scope 124 // user: %10
  %10 = builtin "sizeof"<Optional<AnyObject>>(%9 : $@thick Optional<AnyObject>.Type) : $Builtin.Word, scope 124 // user: %11
  %11 = builtin "cmp_eq_Word"(%8 : $Builtin.Word, %10 : $Builtin.Word) : $Builtin.Int1, scope 124 // user: %13
  %12 = integer_literal $Builtin.Int1, -1, scope 124 // user: %13
  %13 = builtin "int_expect_Int1"(%11 : $Builtin.Int1, %12 : $Builtin.Int1) : $Builtin.Int1, scope 124 // user: %14
  cond_br %13, bb3, bb2, scope 124                // id: %14

bb2:                                              // Preds: bb1
  %15 = string_literal utf8 "can't unsafeBitCast between types of different sizes", scope 124 // user: %17
  %16 = integer_literal $Builtin.Word, 52, scope 124 // user: %19
  %17 = builtin "ptrtoint_Word"(%15 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %19
  %18 = integer_literal $Builtin.Int8, 2, scope 124 // users: %23, %19
  %19 = struct $StaticString (%17 : $Builtin.Word, %16 : $Builtin.Word, %18 : $Builtin.Int8), scope 124 // user: %27
  %20 = string_literal utf8 "fatal error", scope 124 // user: %22
  %21 = integer_literal $Builtin.Word, 11, scope 124 // user: %23
  %22 = builtin "ptrtoint_Word"(%20 : $Builtin.RawPointer) : $Builtin.Word, scope 124 // user: %23
  %23 = struct $StaticString (%22 : $Builtin.Word, %21 : $Builtin.Word, %18 : $Builtin.Int8), scope 124 // user: %27
  %24 = integer_literal $Builtin.Int32, 1, scope 124 // user: %25
  %25 = struct $UInt32 (%24 : $Builtin.Int32), scope 124 // user: %27
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %26 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 124 // user: %27
  %27 = apply %26(%23, %19, %25) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 124
  unreachable, scope 124                          // id: %28

bb3:                                              // Preds: bb1
  br bb4, scope 124                               // id: %29

bb4:                                              // Preds: bb3
  %30 = alloc_stack $Pointee, scope 124           // users: %36, %35, %32, %31
  copy_addr %4 to [initialization] %30 : $*Pointee, scope 124 // id: %31
  %32 = unchecked_addr_cast %30 : $*Pointee to $*Optional<AnyObject>, scope 124 // user: %33
  %33 = load %32 : $*Optional<AnyObject>, scope 124 // users: %57, %54, %53, %48, %40, %38, %34
  retain_value %33 : $Optional<AnyObject>, scope 124 // id: %34
  destroy_addr %30 : $*Pointee, scope 124         // id: %35
  dealloc_stack %30 : $*Pointee, scope 124        // id: %36
  destroy_addr %4 : $*Pointee, scope 124          // id: %37
  debug_value %33 : $Optional<AnyObject>, scope 124 // id: %38
  dealloc_stack %4 : $*Pointee, scope 124         // id: %39
  autorelease_value %33 : $Optional<AnyObject>, scope 124 // id: %40
  // function_ref UnsafeMutablePointer.withMemoryRebound<A, B> (to : A1.Type, capacity : Int, (UnsafeMutablePointer<A1>) throws -> B1) throws -> B1
  %41 = function_ref @_TFSp17withMemoryReboundu0_rfzT2toMqd__8capacitySiFzGSpqd___qd_0__qd_0_ : $@convention(method) <τ_0_0><τ_1_0, τ_1_1> (@thick τ_1_0.Type, Int, @owned @callee_owned (UnsafeMutablePointer<τ_1_0>) -> (@out τ_1_1, @error Error), UnsafeMutablePointer<τ_0_0>) -> (@out τ_1_1, @error Error), scope 124 // user: %55
  %42 = struct_extract %1 : $AutoreleasingUnsafeMutablePointer<Pointee>, #AutoreleasingUnsafeMutablePointer._rawValue, scope 124 // user: %43
  %43 = struct $UnsafeMutablePointer<Pointee> (%42 : $Builtin.RawPointer), scope 124 // user: %55
  %44 = metatype $@thick Optional<Unmanaged<AnyObject>>.Type, scope 124 // user: %55
  %45 = integer_literal $Builtin.Int64, 1, scope 124 // user: %46
  %46 = struct $Int (%45 : $Builtin.Int64), scope 124 // user: %55
  // function_ref AutoreleasingUnsafeMutablePointer.(pointee.setter).(closure #1)
  %47 = function_ref @_TFFVs33AutoreleasingUnsafeMutablePointers7pointeexU_FGSpGSqGVs9UnmanagedPs9AnyObject____T_ : $@convention(thin) (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned Optional<AnyObject>) -> (), scope 124 // user: %48
  %48 = partial_apply %47(%33) : $@convention(thin) (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned Optional<AnyObject>) -> (), scope 124 // user: %49
  %49 = convert_function %48 : $@callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> () to $@callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error, scope 124 // user: %51
  // function_ref thunk
  %50 = function_ref @_TTRGrXFo_dGSpGSqGVs9UnmanagedPs9AnyObject_____zoPs5Error__XFo_dGSpGSqGS_PS0______iT_zoPS1___ : $@convention(thin) <τ_0_0> (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned @callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error) -> (@out (), @error Error), scope 124 // user: %51
  %51 = partial_apply %50<Pointee>(%49) : $@convention(thin) <τ_0_0> (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned @callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error) -> (@out (), @error Error), scope 124 // user: %55
  %52 = alloc_stack $(), scope 124                // users: %56, %55
  retain_value %33 : $Optional<AnyObject>, scope 124 // id: %53
  retain_value %33 : $Optional<AnyObject>, scope 124 // id: %54
  %55 = apply [nothrow] %41<Pointee, Unmanaged<AnyObject>?, ()>(%52, %44, %46, %51, %43) : $@convention(method) <τ_0_0><τ_1_0, τ_1_1> (@thick τ_1_0.Type, Int, @owned @callee_owned (UnsafeMutablePointer<τ_1_0>) -> (@out τ_1_1, @error Error), UnsafeMutablePointer<τ_0_0>) -> (@out τ_1_1, @error Error), scope 124
  dealloc_stack %52 : $*(), scope 124             // id: %56
  release_value %33 : $Optional<AnyObject>, scope 124 // id: %57
  destroy_addr %0 : $*Pointee, scope 124          // id: %58
  %59 = tuple (), scope 124                       // user: %60
  return %59 : $(), scope 124                     // id: %60
}

sil_scope 125 {  parent @_TFSiCfT22_builtinIntegerLiteralBi2048__Si : $@convention(method) (Builtin.Int2048, @thin Int.Type) -> Int }

// Int.init(_builtinIntegerLiteral : Builtin.Int2048) -> Int
sil public_external [transparent] [fragile] @_TFSiCfT22_builtinIntegerLiteralBi2048__Si : $@convention(method) (Builtin.Int2048, @thin Int.Type) -> Int {
// %0                                             // users: %3, %2
bb0(%0 : $Builtin.Int2048, %1 : $@thin Int.Type):
  debug_value %0 : $Builtin.Int2048, scope 125    // id: %2
  %3 = builtin "s_to_s_checked_trunc_Int2048_Int64"(%0 : $Builtin.Int2048) : $(Builtin.Int64, Builtin.Int1), scope 125 // user: %4
  %4 = tuple_extract %3 : $(Builtin.Int64, Builtin.Int1), 0, scope 125 // user: %5
  %5 = struct $Int (%4 : $Builtin.Int64), scope 125 // user: %6
  return %5 : $Int, scope 125                     // id: %6
}

sil_scope 126 { loc "Location.swift":231:24 parent @_TToZFC9LibCoords17LocationFunctions8midpointfT1xVSC17CoordinateWrapper1yS1_5errorGSqGVs33AutoreleasingUnsafeMutablePointerGSqCSo7NSError____S1_ : $@convention(objc_method) (CoordinateWrapper, CoordinateWrapper, Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, @objc_metatype LocationFunctions.Type) -> CoordinateWrapper }

// @objc static LocationFunctions.midpoint(x : CoordinateWrapper, y : CoordinateWrapper, error : AutoreleasingUnsafeMutablePointer<NSError?>?) -> CoordinateWrapper
sil [thunk] @_TToZFC9LibCoords17LocationFunctions8midpointfT1xVSC17CoordinateWrapper1yS1_5errorGSqGVs33AutoreleasingUnsafeMutablePointerGSqCSo7NSError____S1_ : $@convention(objc_method) (CoordinateWrapper, CoordinateWrapper, Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, @objc_metatype LocationFunctions.Type) -> CoordinateWrapper {
// %0                                             // user: %6
// %1                                             // user: %6
// %2                                             // user: %6
// %3                                             // user: %4
bb0(%0 : $CoordinateWrapper, %1 : $CoordinateWrapper, %2 : $Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, %3 : $@objc_metatype LocationFunctions.Type):
  %4 = objc_to_thick_metatype %3 : $@objc_metatype LocationFunctions.Type to $@thick LocationFunctions.Type, scope 126 // user: %6
  // function_ref static LocationFunctions.midpoint(x : CoordinateWrapper, y : CoordinateWrapper, error : AutoreleasingUnsafeMutablePointer<NSError?>?) -> CoordinateWrapper
  %5 = function_ref @_TZFC9LibCoords17LocationFunctions8midpointfT1xVSC17CoordinateWrapper1yS1_5errorGSqGVs33AutoreleasingUnsafeMutablePointerGSqCSo7NSError____S1_ : $@convention(method) (CoordinateWrapper, CoordinateWrapper, Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, @thick LocationFunctions.Type) -> CoordinateWrapper, scope 126 // user: %6
  %6 = apply %5(%0, %1, %2, %4) : $@convention(method) (CoordinateWrapper, CoordinateWrapper, Optional<AutoreleasingUnsafeMutablePointer<Optional<NSError>>>, @thick LocationFunctions.Type) -> CoordinateWrapper, scope 126 // user: %7
  return %6 : $CoordinateWrapper, scope 126       // id: %7
}

sil_scope 127 { loc "Location.swift":229:14 parent @_TFC9LibCoords17LocationFunctionsD : $@convention(method) (@owned LocationFunctions) -> () }
sil_scope 128 { loc "Location.swift":229:14 parent 127 }

// LocationFunctions.__deallocating_deinit
sil @_TFC9LibCoords17LocationFunctionsD : $@convention(method) (@owned LocationFunctions) -> () {
// %0                                             // users: %3, %2, %1
bb0(%0 : $LocationFunctions):
  debug_value %0 : $LocationFunctions, let, name "self", argno 1, loc "Location.swift":229:14, scope 127 // id: %1
  %2 = super_method %0 : $LocationFunctions, #NSObject.deinit!deallocator.foreign : (NSObject) -> () -> () , $@convention(objc_method) (NSObject) -> (), scope 128 // user: %4
  %3 = upcast %0 : $LocationFunctions to $NSObject, scope 128 // user: %4
  %4 = apply %2(%3) : $@convention(objc_method) (NSObject) -> (), scope 128
  %5 = tuple (), scope 128                        // user: %6
  return %5 : $(), scope 128                      // id: %6
}

sil_scope 129 { loc "Location.swift":229:43 parent @_TFC9LibCoords17LocationFunctionscfT_S0_ : $@convention(method) (@owned LocationFunctions) -> @owned LocationFunctions }
sil_scope 130 {  parent 129 }

// LocationFunctions.init() -> LocationFunctions
sil @_TFC9LibCoords17LocationFunctionscfT_S0_ : $@convention(method) (@owned LocationFunctions) -> @owned LocationFunctions {
// %0                                             // users: %3, %4, %2
bb0(%0 : $LocationFunctions):
  %1 = alloc_stack $LocationFunctions, let, name "self", scope 129 // users: %2, %7, %8
  store %0 to %1 : $*LocationFunctions, loc "Location.swift":229:43, scope 129 // id: %2
  %3 = upcast %0 : $LocationFunctions to $NSObject, scope 130 // user: %5
  %4 = super_method [volatile] %0 : $LocationFunctions, #NSObject.init!initializer.1.foreign : (NSObject.Type) -> () -> NSObject , $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 130 // user: %5
  %5 = apply %4(%3) : $@convention(objc_method) (@owned NSObject) -> @owned NSObject, scope 130 // user: %6
  %6 = unchecked_ref_cast %5 : $NSObject to $LocationFunctions, scope 130 // users: %9, %7
  store %6 to %1 : $*LocationFunctions, scope 130 // id: %7
  dealloc_stack %1 : $*LocationFunctions, scope 130 // id: %8
  return %6 : $LocationFunctions, loc "Location.swift":229:43, scope 130 // id: %9
}

sil_scope 131 { loc "Location.swift":229:43 parent @_TFC9LibCoords17LocationFunctionsCfT_S0_ : $@convention(method) (@thick LocationFunctions.Type) -> @owned LocationFunctions }

// LocationFunctions.__allocating_init() -> LocationFunctions
sil @_TFC9LibCoords17LocationFunctionsCfT_S0_ : $@convention(method) (@thick LocationFunctions.Type) -> @owned LocationFunctions {
bb0(%0 : $@thick LocationFunctions.Type):
  %1 = alloc_ref [objc] $LocationFunctions, scope 131 // user: %3
  // function_ref LocationFunctions.init() -> LocationFunctions
  %2 = function_ref @_TFC9LibCoords17LocationFunctionscfT_S0_ : $@convention(method) (@owned LocationFunctions) -> @owned LocationFunctions, scope 131 // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned LocationFunctions) -> @owned LocationFunctions, scope 131 // user: %4
  return %3 : $LocationFunctions, scope 131       // id: %4
}

sil_scope 132 { loc "Location.swift":229:43 parent @_TToFC9LibCoords17LocationFunctionscfT_S0_ : $@convention(objc_method) (@owned LocationFunctions) -> @owned LocationFunctions }

// @objc LocationFunctions.init() -> LocationFunctions
sil [thunk] @_TToFC9LibCoords17LocationFunctionscfT_S0_ : $@convention(objc_method) (@owned LocationFunctions) -> @owned LocationFunctions {
// %0                                             // user: %2
bb0(%0 : $LocationFunctions):
  // function_ref LocationFunctions.init() -> LocationFunctions
  %1 = function_ref @_TFC9LibCoords17LocationFunctionscfT_S0_ : $@convention(method) (@owned LocationFunctions) -> @owned LocationFunctions, scope 132 // user: %2
  %2 = apply %1(%0) : $@convention(method) (@owned LocationFunctions) -> @owned LocationFunctions, scope 132 // user: %3
  return %2 : $LocationFunctions, scope 132       // id: %3
}

sil_scope 133 {  parent @_TTOFCSo7NSErrorcfT6domainSS4codeSi8userInfoGSqGVs10DictionaryVs11AnyHashableP____S_ : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @owned NSError) -> @owned NSError }

// @nonobjc NSError.init(domain : String, code : Int, userInfo : [AnyHashable : Any]?) -> NSError
sil shared [thunk] @_TTOFCSo7NSErrorcfT6domainSS4codeSi8userInfoGSqGVs10DictionaryVs11AnyHashableP____S_ : $@convention(method) (@owned String, Int, @owned Optional<Dictionary<AnyHashable, Any>>, @owned NSError) -> @owned NSError {
// %0                                             // users: %23, %5
// %1                                             // user: %20
// %2                                             // users: %10, %8
// %3                                             // users: %20, %19
bb0(%0 : $String, %1 : $Int, %2 : $Optional<Dictionary<AnyHashable, Any>>, %3 : $NSError):
  // function_ref String._bridgeToObjectiveC() -> NSString
  %4 = function_ref @_TFE10FoundationSS19_bridgeToObjectiveCfT_CSo8NSString : $@convention(method) (@guaranteed String) -> @owned NSString, scope 133 // user: %5
  %5 = apply %4(%0) : $@convention(method) (@guaranteed String) -> @owned NSString, scope 133 // users: %22, %20
  %6 = integer_literal $Builtin.Int1, -1, scope 133 // user: %8
  %7 = integer_literal $Builtin.Int1, 0, scope 133 // user: %8
  %8 = select_enum %2 : $Optional<Dictionary<AnyHashable, Any>>, case #Optional.some!enumelt.1: %6, default %7 : $Builtin.Int1, scope 133 // user: %9
  cond_br %8, bb1, bb2, scope 133                 // id: %9

bb1:                                              // Preds: bb0
  %10 = unchecked_enum_data %2 : $Optional<Dictionary<AnyHashable, Any>>, #Optional.some!enumelt.1, scope 133 // users: %14, %12
  // function_ref Dictionary._bridgeToObjectiveC() -> NSDictionary
  %11 = function_ref @_TFE10FoundationVs10Dictionary19_bridgeToObjectiveCfT_CSo12NSDictionary : $@convention(method) <τ_0_0, τ_0_1 where τ_0_0 : Hashable> (@guaranteed Dictionary<τ_0_0, τ_0_1>) -> @owned NSDictionary, scope 133 // user: %12
  %12 = apply %11<AnyHashable, Any>(%10) : $@convention(method) <τ_0_0, τ_0_1 where τ_0_0 : Hashable> (@guaranteed Dictionary<τ_0_0, τ_0_1>) -> @owned NSDictionary, scope 133 // user: %13
  %13 = enum $Optional<NSDictionary>, #Optional.some!enumelt.1, %12 : $NSDictionary, scope 133 // user: %15
  release_value %10 : $Dictionary<AnyHashable, Any>, scope 133 // id: %14
  br bb3(%13 : $Optional<NSDictionary>), scope 133 // id: %15

bb2:                                              // Preds: bb0
  %16 = enum $Optional<NSDictionary>, #Optional.none!enumelt, scope 133 // user: %17
  br bb3(%16 : $Optional<NSDictionary>), scope 133 // id: %17

// %18                                            // users: %21, %20
bb3(%18 : $Optional<NSDictionary>):               // Preds: bb2 bb1
  %19 = class_method [volatile] %3 : $NSError, #NSError.init!initializer.1.foreign : (NSError.Type) -> (String, Int, [AnyHashable : Any]?) -> NSError , $@convention(objc_method) (NSString, Int, Optional<NSDictionary>, @owned NSError) -> @owned NSError, scope 133 // user: %20
  %20 = apply %19(%5, %1, %18, %3) : $@convention(objc_method) (NSString, Int, Optional<NSDictionary>, @owned NSError) -> @owned NSError, scope 133 // user: %24
  release_value %18 : $Optional<NSDictionary>, scope 133 // id: %21
  strong_release %5 : $NSString, scope 133        // id: %22
  release_value %0 : $String, scope 133           // id: %23
  return %20 : $NSError, scope 133                // id: %24
}


// Dictionary._bridgeToObjectiveC() -> NSDictionary
sil [_semantics "convertToObjectiveC"] @_TFE10FoundationVs10Dictionary19_bridgeToObjectiveCfT_CSo12NSDictionary : $@convention(method) <τ_0_0, τ_0_1 where τ_0_0 : Hashable> (@guaranteed Dictionary<τ_0_0, τ_0_1>) -> @owned NSDictionary


// globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4
sil private_external [fragile] @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 : $@convention(thin) () -> ()


// specialized String.init(_builtinStringLiteral : Builtin.RawPointer, utf8CodeUnitCount : Builtin.Word, isASCII : Builtin.Int1) -> String
sil [fragile] [readonly] [_semantics "string.makeUTF8"] @_TTSfq4n_n_n_d___TFSSCfT21_builtinStringLiteralBp17utf8CodeUnitCountBw7isASCIIBi1__SS : $@convention(thin) (Builtin.RawPointer, Builtin.Word, Builtin.Int1) -> @owned String

sil_scope 134 {  parent @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8> }

// specialized specialized UnsafeBufferPointer.init(start : UnsafePointer<A>?, count : Int) -> UnsafeBufferPointer<A>
sil shared_external [fragile] @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8> {
// %0                                             // users: %77, %60, %58, %57, %56, %38, %37, %36, %35, %34, %33, %2
// %1                                             // users: %67, %62, %11, %3
bb0(%0 : $Optional<UnsafePointer<UInt8>>, %1 : $Int):
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %2
  debug_value %1 : $Int, scope 134                // id: %3
  br bb1, scope 134                               // id: %4

bb1:                                              // Preds: bb0
  %5 = integer_literal $Builtin.Int8, 2, scope 134 // users: %50, %43, %26, %19, %9
  %6 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.43.6~5/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/UnsafeBufferPointer.swift", scope 134 // user: %8
  %7 = integer_literal $Builtin.Word, 181, scope 134 // user: %9
  %8 = builtin "ptrtoint_Word"(%6 : $Builtin.RawPointer) : $Builtin.Word, scope 134 // user: %9
  %9 = struct $StaticString (%8 : $Builtin.Word, %7 : $Builtin.Word, %5 : $Builtin.Int8), scope 134 // users: %53, %29
  %10 = integer_literal $Builtin.Int64, 0, scope 134 // users: %31, %12
  %11 = struct_extract %1 : $Int, #Int._value, scope 134 // users: %31, %12
  %12 = builtin "cmp_sge_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 134 // user: %14
  %13 = integer_literal $Builtin.Int1, -1, scope 134 // user: %14
  %14 = builtin "int_expect_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 134 // user: %15
  cond_br %14, bb3, bb2, scope 134                // id: %15

bb2:                                              // Preds: bb1
  %16 = string_literal utf8 "UnsafeBufferPointer with negative count", scope 134 // user: %18
  %17 = integer_literal $Builtin.Word, 39, scope 134 // user: %19
  %18 = builtin "ptrtoint_Word"(%16 : $Builtin.RawPointer) : $Builtin.Word, scope 134 // user: %19
  %19 = struct $StaticString (%18 : $Builtin.Word, %17 : $Builtin.Word, %5 : $Builtin.Int8), scope 134 // user: %29
  %20 = integer_literal $Builtin.Int64, 366, scope 134 // user: %21
  %21 = struct $UInt (%20 : $Builtin.Int64), scope 134 // user: %29
  // function_ref _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %22 = function_ref @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 134 // user: %29
  %23 = string_literal utf8 "fatal error", scope 134 // user: %25
  %24 = integer_literal $Builtin.Word, 11, scope 134 // user: %26
  %25 = builtin "ptrtoint_Word"(%23 : $Builtin.RawPointer) : $Builtin.Word, scope 134 // user: %26
  %26 = struct $StaticString (%25 : $Builtin.Word, %24 : $Builtin.Word, %5 : $Builtin.Int8), scope 134 // user: %29
  %27 = integer_literal $Builtin.Int32, 1, scope 134 // user: %28
  %28 = struct $UInt32 (%27 : $Builtin.Int32), scope 134 // user: %29
  %29 = apply %22(%26, %19, %9, %21, %28) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 134
  unreachable, scope 134                          // id: %30

bb3:                                              // Preds: bb1
  %31 = builtin "cmp_eq_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 134 // user: %32
  cond_br %31, bb7, bb4, scope 134                // id: %32

bb4:                                              // Preds: bb3
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %33
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %34
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %35
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %36
  switch_enum %0 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb6, case #Optional.some!enumelt.1: bb5, scope 134 // id: %37

bb5:                                              // Preds: bb4
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %38
  br bb11, scope 134                              // id: %39

bb6:                                              // Preds: bb4
  %40 = string_literal utf8 "UnsafeBufferPointer has a nil start and nonzero count", scope 134 // user: %42
  %41 = integer_literal $Builtin.Word, 53, scope 134 // user: %43
  %42 = builtin "ptrtoint_Word"(%40 : $Builtin.RawPointer) : $Builtin.Word, scope 134 // user: %43
  %43 = struct $StaticString (%42 : $Builtin.Word, %41 : $Builtin.Word, %5 : $Builtin.Int8), scope 134 // user: %53
  %44 = integer_literal $Builtin.Int64, 368, scope 134 // user: %45
  %45 = struct $UInt (%44 : $Builtin.Int64), scope 134 // user: %53
  // function_ref _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %46 = function_ref @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 134 // user: %53
  %47 = string_literal utf8 "fatal error", scope 134 // user: %49
  %48 = integer_literal $Builtin.Word, 11, scope 134 // user: %50
  %49 = builtin "ptrtoint_Word"(%47 : $Builtin.RawPointer) : $Builtin.Word, scope 134 // user: %50
  %50 = struct $StaticString (%49 : $Builtin.Word, %48 : $Builtin.Word, %5 : $Builtin.Int8), scope 134 // user: %53
  %51 = integer_literal $Builtin.Int32, 1, scope 134 // user: %52
  %52 = struct $UInt32 (%51 : $Builtin.Int32), scope 134 // user: %53
  %53 = apply %46(%50, %43, %9, %45, %52) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 134
  unreachable, scope 134                          // id: %54

bb7:                                              // Preds: bb3
  br bb8, scope 134                               // id: %55

bb8:                                              // Preds: bb7
  debug_value %0 : $Optional<UnsafePointer<UInt8>>, scope 134 // id: %56
  switch_enum %0 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb10, case #Optional.none!enumelt: bb9, scope 134 // id: %57

bb9:                                              // Preds: bb8
  br bb12(%0 : $Optional<UnsafePointer<UInt8>>), scope 134 // id: %58

bb10:                                             // Preds: bb8
  br bb11, scope 134                              // id: %59

bb11:                                             // Preds: bb10 bb5
  %60 = unchecked_enum_data %0 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 134 // users: %63, %61
  debug_value %60 : $UnsafePointer<UInt8>, scope 134 // id: %61
  debug_value %1 : $Int, scope 134                // id: %62
  %63 = struct_extract %60 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 134 // user: %72
  %64 = metatype $@thick UInt8.Type, scope 134    // user: %65
  %65 = builtin "strideof_nonzero"<UInt8>(%64 : $@thick UInt8.Type) : $Builtin.Word, scope 134 // user: %66
  %66 = builtin "zextOrBitCast_Word_Int64"(%65 : $Builtin.Word) : $Builtin.Int64, scope 134 // user: %69
  %67 = struct_extract %1 : $Int, #Int._value, scope 134 // user: %69
  %68 = integer_literal $Builtin.Int1, 0, scope 134 // user: %69
  %69 = builtin "smul_with_overflow_Int64"(%67 : $Builtin.Int64, %66 : $Builtin.Int64, %68 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 134 // user: %70
  %70 = tuple_extract %69 : $(Builtin.Int64, Builtin.Int1), 0, scope 134 // user: %71
  %71 = builtin "truncOrBitCast_Int64_Word"(%70 : $Builtin.Int64) : $Builtin.Word, scope 134 // user: %72
  %72 = index_raw_pointer %63 : $Builtin.RawPointer, %71 : $Builtin.Word, scope 134 // user: %73
  %73 = struct $UnsafePointer<UInt8> (%72 : $Builtin.RawPointer), scope 134 // user: %74
  %74 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %73 : $UnsafePointer<UInt8>, scope 134 // user: %75
  br bb12(%74 : $Optional<UnsafePointer<UInt8>>), scope 134 // id: %75

// %76                                            // user: %77
bb12(%76 : $Optional<UnsafePointer<UInt8>>):      // Preds: bb11 bb9
  %77 = struct $UnsafeBufferPointer<UInt8> (%0 : $Optional<UnsafePointer<UInt8>>, %76 : $Optional<UnsafePointer<UInt8>>), scope 134 // user: %78
  return %77 : $UnsafeBufferPointer<UInt8>, scope 134 // id: %78
}

sil_scope 135 {  parent @_TTSgq5GVs16IndexingIteratorGSRVs5UInt8__GS_GSRS0___s16IteratorProtocols___TFVs4UTF86decodeuRxs16IteratorProtocolwx7ElementzVs5UInt8rfRxOs21UnicodeDecodingResult : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult }

// specialized UTF8.decode<A where ...> (inout A) -> UnicodeDecodingResult
sil shared_external [fragile] @_TTSgq5GVs16IndexingIteratorGSRVs5UInt8__GS_GSRS0___s16IteratorProtocols___TFVs4UTF86decodeuRxs16IteratorProtocolwx7ElementzVs5UInt8rfRxOs21UnicodeDecodingResult : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>, @inout UTF8) -> UnicodeDecodingResult {
// %0                                             // users: %66, %63, %62, %41, %2
// %1                                             // users: %290, %220, %54, %12, %4, %3
bb0(%0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, %1 : $*UTF8):
  debug_value_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 135 // id: %2
  debug_value_addr %1 : $*UTF8, scope 135         // id: %3
  %4 = struct_element_addr %1 : $*UTF8, #UTF8._bitsInBuffer, scope 135 // users: %300, %231, %58, %35, %5
  %5 = struct_element_addr %4 : $*UInt8, #UInt8._value, scope 135 // users: %195, %6
  %6 = load %5 : $*Builtin.Int8, scope 135        // users: %32, %21, %8
  %7 = integer_literal $Builtin.Int8, 0, scope 135 // users: %251, %50, %8
  %8 = builtin "cmp_eq_Int8"(%6 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 135 // user: %10
  %9 = integer_literal $Builtin.Int1, -1, scope 135 // users: %273, %206, %189, %167, %126, %113, %10
  %10 = builtin "int_expect_Int1"(%8 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 135 // user: %11
  cond_br %10, bb4, bb1, scope 135                // id: %11

bb1:                                              // Preds: bb0
  %12 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 135 // users: %29, %13
  %13 = struct_element_addr %12 : $*UInt32, #UInt32._value, scope 135 // user: %14
  %14 = load %13 : $*Builtin.Int32, scope 135     // users: %27, %23, %20, %16
  %15 = integer_literal $Builtin.Int32, 128, scope 135 // user: %16
  %16 = builtin "and_Int32"(%14 : $Builtin.Int32, %15 : $Builtin.Int32) : $Builtin.Int32, scope 135 // user: %18
  %17 = integer_literal $Builtin.Int32, 0, scope 135 // user: %18
  %18 = builtin "cmp_eq_Int32"(%16 : $Builtin.Int32, %17 : $Builtin.Int32) : $Builtin.Int1, scope 135 // user: %19
  cond_br %18, bb3, bb2, scope 135                // id: %19

bb2:                                              // Preds: bb1
  %20 = struct $UInt32 (%14 : $Builtin.Int32), scope 135 // user: %21
  br bb8(%6 : $Builtin.Int8, %20 : $UInt32), scope 135 // id: %21

bb3:                                              // Preds: bb1
  %22 = integer_literal $Builtin.Int32, 255, scope 135 // user: %23
  %23 = builtin "and_Int32"(%14 : $Builtin.Int32, %22 : $Builtin.Int32) : $Builtin.Int32, scope 135 // user: %24
  %24 = struct $UInt32 (%23 : $Builtin.Int32), scope 135 // users: %37, %36, %25
  debug_value %24 : $UInt32, scope 135            // id: %25
  %26 = integer_literal $Builtin.Int32, 8, scope 135 // user: %27
  %27 = builtin "lshr_Int32"(%14 : $Builtin.Int32, %26 : $Builtin.Int32) : $Builtin.Int32, scope 135 // user: %28
  %28 = struct $UInt32 (%27 : $Builtin.Int32), scope 135 // user: %29
  store %28 to %12 : $*UInt32, scope 135          // id: %29
  %30 = integer_literal $Builtin.Int8, 8, scope 135 // user: %32
  %31 = integer_literal $Builtin.Int1, 0, scope 135 // user: %32
  %32 = builtin "usub_with_overflow_Int8"(%6 : $Builtin.Int8, %30 : $Builtin.Int8, %31 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 135 // user: %33
  %33 = tuple_extract %32 : $(Builtin.Int8, Builtin.Int1), 0, scope 135 // user: %34
  %34 = struct $UInt8 (%33 : $Builtin.Int8), scope 135 // user: %35
  store %34 to %4 : $*UInt8, scope 135            // id: %35
  debug_value %24 : $UInt32, scope 135            // id: %36
  %37 = struct $UnicodeScalar (%24 : $UInt32), scope 135 // user: %38
  %38 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.scalarValue!enumelt.1, %37 : $UnicodeScalar, scope 135 // user: %39
  br bb55(%38 : $UnicodeDecodingResult), scope 135 // id: %39

bb4:                                              // Preds: bb0
  // function_ref specialized IndexingIterator.next() -> A._Element?
  %40 = function_ref @_TTSgq5GSRVs5UInt8_GSRS__s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>) -> Optional<UInt8>, scope 135 // user: %41
  %41 = apply %40(%0) : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>) -> Optional<UInt8>, scope 135 // user: %42
  switch_enum %41 : $Optional<UInt8>, case #Optional.some!enumelt.1: bb6, case #Optional.none!enumelt: bb5, scope 135 // id: %42

bb5:                                              // Preds: bb4
  %43 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.emptyInput!enumelt, scope 135 // user: %44
  br bb55(%43 : $UnicodeDecodingResult), scope 135 // id: %44

// %45                                            // users: %48, %46
bb6(%45 : $UInt8):                                // Preds: bb4
  debug_value %45 : $UInt8, scope 135             // id: %46
  %47 = integer_literal $Builtin.Int8, -128, scope 135 // user: %49
  %48 = struct_extract %45 : $UInt8, #UInt8._value, scope 135 // users: %330, %52, %49
  %49 = builtin "and_Int8"(%48 : $Builtin.Int8, %47 : $Builtin.Int8) : $Builtin.Int8, scope 135 // user: %50
  %50 = builtin "cmp_eq_Int8"(%49 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 135 // user: %51
  cond_br %50, bb54, bb7, scope 135               // id: %51

bb7:                                              // Preds: bb6
  %52 = builtin "zext_Int8_Int32"(%48 : $Builtin.Int8) : $Builtin.Int32, scope 135 // user: %53
  %53 = struct $UInt32 (%52 : $Builtin.Int32), scope 135 // users: %59, %55
  %54 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 135 // user: %55
  store %53 to %54 : $*UInt32, scope 135          // id: %55
  %56 = integer_literal $Builtin.Int8, 8, scope 135 // users: %59, %57
  %57 = struct $UInt8 (%56 : $Builtin.Int8), scope 135 // user: %58
  store %57 to %4 : $*UInt8, scope 135            // id: %58
  br bb8(%56 : $Builtin.Int8, %53 : $UInt32), scope 135 // id: %59

// %60                                            // users: %253, %251
// %61                                            // user: %253
bb8(%60 : $Builtin.Int8, %61 : $UInt32):          // Preds: bb39 bb7 bb2
  debug_value_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 135 // id: %62
  %63 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._position, scope 135 // users: %194, %187, %64
  %64 = struct_element_addr %63 : $*Int, #Int._value, scope 135 // user: %65
  %65 = load %64 : $*Builtin.Int64, scope 135     // users: %189, %183, %166, %125, %112, %102, %73
  %66 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._elements, scope 135 // users: %69, %67
  %67 = struct_element_addr %66 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 135 // user: %68
  %68 = load %67 : $*Optional<UnsafePointer<UInt8>>, scope 135 // users: %180, %124, %71
  %69 = struct_element_addr %66 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 135 // user: %70
  %70 = load %69 : $*Optional<UnsafePointer<UInt8>>, scope 135 // users: %145, %144, %80, %79
  switch_enum %68 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb12, case #Optional.none!enumelt: bb9, scope 135 // id: %71

bb9:                                              // Preds: bb8
  %72 = integer_literal $Builtin.Int64, 0, scope 135 // user: %73
  %73 = builtin "cmp_eq_Int64"(%65 : $Builtin.Int64, %72 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %74
  cond_br %73, bb11, bb10, scope 135              // id: %74

bb10:                                             // Preds: bb9
  br bb18, scope 135                              // id: %75

bb11:                                             // Preds: bb9
  br bb42, scope 135                              // id: %76

// %77                                            // users: %83, %78
bb12(%77 : $UnsafePointer<UInt8>):                // Preds: bb8
  debug_value %77 : $UnsafePointer<UInt8>, scope 135 // id: %78
  switch_enum %70 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb52, case #Optional.some!enumelt.1: bb13, scope 135 // id: %79

bb13:                                             // Preds: bb12
  %80 = unchecked_enum_data %70 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 135 // user: %81
  %81 = struct_extract %80 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 135 // user: %82
  %82 = builtin "ptrtoint_Word"(%81 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %85
  %83 = struct_extract %77 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 135 // user: %84
  %84 = builtin "ptrtoint_Word"(%83 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %85
  %85 = builtin "sub_Word"(%82 : $Builtin.Word, %84 : $Builtin.Word) : $Builtin.Word, scope 135 // user: %86
  %86 = builtin "zextOrBitCast_Word_Int64"(%85 : $Builtin.Word) : $Builtin.Int64, scope 135 // users: %101, %94
  %87 = metatype $@thick UInt8.Type, scope 135    // user: %88
  %88 = builtin "strideof_nonzero"<UInt8>(%87 : $@thick UInt8.Type) : $Builtin.Word, scope 135 // user: %89
  %89 = builtin "zextOrBitCast_Word_Int64"(%88 : $Builtin.Word) : $Builtin.Int64, scope 135 // users: %101, %98, %91
  %90 = integer_literal $Builtin.Int64, 0, scope 135 // user: %91
  %91 = builtin "cmp_eq_Int64"(%89 : $Builtin.Int64, %90 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %92
  cond_fail %91 : $Builtin.Int1, scope 135        // id: %92
  %93 = integer_literal $Builtin.Int64, -9223372036854775808, scope 135 // user: %94
  %94 = builtin "cmp_eq_Int64"(%86 : $Builtin.Int64, %93 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %95
  cond_br %94, bb15, bb14, scope 135              // id: %95

bb14:                                             // Preds: bb13
  br bb16, scope 135                              // id: %96

bb15:                                             // Preds: bb13
  %97 = integer_literal $Builtin.Int64, -1, scope 135 // user: %98
  %98 = builtin "cmp_eq_Int64"(%89 : $Builtin.Int64, %97 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %99
  cond_fail %98 : $Builtin.Int1, scope 135        // id: %99
  br bb16, scope 135                              // id: %100

bb16:                                             // Preds: bb15 bb14
  %101 = builtin "sdiv_Int64"(%86 : $Builtin.Int64, %89 : $Builtin.Int64) : $Builtin.Int64, scope 135 // user: %102
  %102 = builtin "cmp_eq_Int64"(%65 : $Builtin.Int64, %101 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %103
  cond_br %102, bb41, bb17, scope 135             // id: %103

bb17:                                             // Preds: bb16
  br bb18, scope 135                              // id: %104

bb18:                                             // Preds: bb17 bb10
  %105 = integer_literal $Builtin.Int8, 2, scope 135 // users: %244, %240, %211, %203, %173, %136, %132, %118, %110
  br bb19, scope 135                              // id: %106

bb19:                                             // Preds: bb18
  %107 = string_literal utf8 "", scope 135        // user: %109
  %108 = integer_literal $Builtin.Word, 0, scope 135 // user: %110
  %109 = builtin "ptrtoint_Word"(%107 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %110
  %110 = struct $StaticString (%109 : $Builtin.Word, %108 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // users: %177, %122
  %111 = integer_literal $Builtin.Int64, 0, scope 135 // users: %155, %125, %112
  %112 = builtin "cmp_sge_Int64"(%65 : $Builtin.Int64, %111 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %113
  %113 = builtin "int_expect_Int1"(%112 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 135 // user: %114
  cond_br %113, bb21, bb20, scope 135             // id: %114

bb20:                                             // Preds: bb19
  %115 = string_literal utf8 "fatal error", scope 135 // user: %117
  %116 = integer_literal $Builtin.Word, 11, scope 135 // user: %118
  %117 = builtin "ptrtoint_Word"(%115 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %118
  %118 = struct $StaticString (%117 : $Builtin.Word, %116 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %122
  %119 = integer_literal $Builtin.Int32, 1, scope 135 // user: %120
  %120 = struct $UInt32 (%119 : $Builtin.Int32), scope 135 // user: %122
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %121 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %122
  %122 = apply %121(%118, %110, %120) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %123

bb21:                                             // Preds: bb19
  switch_enum %68 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb25, case #Optional.none!enumelt: bb22, scope 135 // id: %124

bb22:                                             // Preds: bb21
  %125 = builtin "cmp_slt_Int64"(%65 : $Builtin.Int64, %111 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %126
  %126 = builtin "int_expect_Int1"(%125 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 135 // user: %127
  cond_br %126, bb24, bb23, scope 135             // id: %127

bb23:                                             // Preds: bb22
  br bb31, scope 135                              // id: %128

bb24:                                             // Preds: bb22
  %129 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 135 // user: %131
  %130 = integer_literal $Builtin.Word, 57, scope 135 // user: %132
  %131 = builtin "ptrtoint_Word"(%129 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %132
  %132 = struct $StaticString (%131 : $Builtin.Word, %130 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %140
  %133 = string_literal utf8 "fatal error", scope 135 // user: %135
  %134 = integer_literal $Builtin.Word, 11, scope 135 // user: %136
  %135 = builtin "ptrtoint_Word"(%133 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %136
  %136 = struct $StaticString (%135 : $Builtin.Word, %134 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %140
  %137 = integer_literal $Builtin.Int32, 1, scope 135 // user: %138
  %138 = struct $UInt32 (%137 : $Builtin.Int32), scope 135 // user: %140
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %139 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %140
  %140 = apply %139(%136, %132, %138) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %141

// %142                                           // users: %148, %143
bb25(%142 : $UnsafePointer<UInt8>):               // Preds: bb21
  debug_value %142 : $UnsafePointer<UInt8>, scope 135 // id: %143
  switch_enum %70 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb40, case #Optional.some!enumelt.1: bb26, scope 135 // id: %144

bb26:                                             // Preds: bb25
  %145 = unchecked_enum_data %70 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 135 // user: %146
  %146 = struct_extract %145 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 135 // user: %147
  %147 = builtin "ptrtoint_Word"(%146 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %150
  %148 = struct_extract %142 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 135 // user: %149
  %149 = builtin "ptrtoint_Word"(%148 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %150
  %150 = builtin "sub_Word"(%147 : $Builtin.Word, %149 : $Builtin.Word) : $Builtin.Word, scope 135 // user: %151
  %151 = builtin "zextOrBitCast_Word_Int64"(%150 : $Builtin.Word) : $Builtin.Int64, scope 135 // users: %165, %158
  %152 = metatype $@thick UInt8.Type, scope 135   // user: %153
  %153 = builtin "strideof_nonzero"<UInt8>(%152 : $@thick UInt8.Type) : $Builtin.Word, scope 135 // user: %154
  %154 = builtin "zextOrBitCast_Word_Int64"(%153 : $Builtin.Word) : $Builtin.Int64, scope 135 // users: %165, %162, %155
  %155 = builtin "cmp_eq_Int64"(%154 : $Builtin.Int64, %111 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %156
  cond_fail %155 : $Builtin.Int1, scope 135       // id: %156
  %157 = integer_literal $Builtin.Int64, -9223372036854775808, scope 135 // user: %158
  %158 = builtin "cmp_eq_Int64"(%151 : $Builtin.Int64, %157 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %159
  cond_br %158, bb28, bb27, scope 135             // id: %159

bb27:                                             // Preds: bb26
  br bb29, scope 135                              // id: %160

bb28:                                             // Preds: bb26
  %161 = integer_literal $Builtin.Int64, -1, scope 135 // user: %162
  %162 = builtin "cmp_eq_Int64"(%154 : $Builtin.Int64, %161 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %163
  cond_fail %162 : $Builtin.Int1, scope 135       // id: %163
  br bb29, scope 135                              // id: %164

bb29:                                             // Preds: bb28 bb27
  %165 = builtin "sdiv_Int64"(%151 : $Builtin.Int64, %154 : $Builtin.Int64) : $Builtin.Int64, scope 135 // user: %166
  %166 = builtin "cmp_slt_Int64"(%65 : $Builtin.Int64, %165 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %167
  %167 = builtin "int_expect_Int1"(%166 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 135 // user: %168
  cond_br %167, bb32, bb30, scope 135             // id: %168

bb30:                                             // Preds: bb29
  br bb31, scope 135                              // id: %169

bb31:                                             // Preds: bb30 bb23
  %170 = string_literal utf8 "fatal error", scope 135 // user: %172
  %171 = integer_literal $Builtin.Word, 11, scope 135 // user: %173
  %172 = builtin "ptrtoint_Word"(%170 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %173
  %173 = struct $StaticString (%172 : $Builtin.Word, %171 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %177
  %174 = integer_literal $Builtin.Int32, 1, scope 135 // user: %175
  %175 = struct $UInt32 (%174 : $Builtin.Int32), scope 135 // user: %177
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %176 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %177
  %177 = apply %176(%173, %110, %175) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %178

bb32:                                             // Preds: bb29
  br bb33, scope 135                              // id: %179

bb33:                                             // Preds: bb32
  %180 = unchecked_enum_data %68 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 135 // user: %181
  %181 = struct_extract %180 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 135 // user: %182
  %182 = pointer_to_address %181 : $Builtin.RawPointer to [strict] $*UInt8, scope 135 // user: %184
  %183 = builtin "truncOrBitCast_Int64_Word"(%65 : $Builtin.Int64) : $Builtin.Word, scope 135 // user: %184
  %184 = index_addr %182 : $*UInt8, %183 : $Builtin.Word, scope 135 // user: %185
  %185 = struct_element_addr %184 : $*UInt8, #UInt8._value, scope 135 // user: %186
  %186 = load %185 : $*Builtin.Int8, scope 135    // user: %218
  debug_value_addr %63 : $*Int, scope 135         // id: %187
  %188 = integer_literal $Builtin.Int64, 1, scope 135 // user: %189
  %189 = builtin "sadd_with_overflow_Int64"(%65 : $Builtin.Int64, %188 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 135 // users: %191, %190
  %190 = tuple_extract %189 : $(Builtin.Int64, Builtin.Int1), 0, scope 135 // user: %193
  %191 = tuple_extract %189 : $(Builtin.Int64, Builtin.Int1), 1, scope 135 // user: %192
  cond_fail %191 : $Builtin.Int1, scope 135       // id: %192
  %193 = struct $Int (%190 : $Builtin.Int64), scope 135 // user: %194
  store %193 to %63 : $*Int, scope 135            // id: %194
  %195 = load %5 : $*Builtin.Int8, scope 135      // users: %228, %197
  %196 = integer_literal $Builtin.Int8, 31, scope 135 // user: %197
  %197 = builtin "and_Int8"(%195 : $Builtin.Int8, %196 : $Builtin.Int8) : $Builtin.Int8, scope 135 // user: %198
  %198 = builtin "zext_Int8_Int32"(%197 : $Builtin.Int8) : $Builtin.Int32, scope 135 // users: %219, %205
  br bb34, scope 135                              // id: %199

bb34:                                             // Preds: bb33
  %200 = string_literal utf8 "shift amount is larger than type size in bits", scope 135 // user: %202
  %201 = integer_literal $Builtin.Word, 45, scope 135 // user: %203
  %202 = builtin "ptrtoint_Word"(%200 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %203
  %203 = struct $StaticString (%202 : $Builtin.Word, %201 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %215
  %204 = integer_literal $Builtin.Int32, 32, scope 135 // user: %205
  %205 = builtin "cmp_ult_Int32"(%198 : $Builtin.Int32, %204 : $Builtin.Int32) : $Builtin.Int1, scope 135 // user: %206
  %206 = builtin "int_expect_Int1"(%205 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 135 // user: %207
  cond_br %206, bb36, bb35, scope 135             // id: %207

bb35:                                             // Preds: bb34
  %208 = string_literal utf8 "fatal error", scope 135 // user: %210
  %209 = integer_literal $Builtin.Word, 11, scope 135 // user: %211
  %210 = builtin "ptrtoint_Word"(%208 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %211
  %211 = struct $StaticString (%210 : $Builtin.Word, %209 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %215
  %212 = integer_literal $Builtin.Int32, 1, scope 135 // user: %213
  %213 = struct $UInt32 (%212 : $Builtin.Int32), scope 135 // user: %215
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %214 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %215
  %215 = apply %214(%211, %203, %213) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %216

bb36:                                             // Preds: bb34
  br bb37, scope 135                              // id: %217

bb37:                                             // Preds: bb36
  %218 = builtin "zext_Int8_Int32"(%186 : $Builtin.Int8) : $Builtin.Int32, scope 135 // user: %219
  %219 = builtin "shl_Int32"(%218 : $Builtin.Int32, %198 : $Builtin.Int32) : $Builtin.Int32, scope 135 // user: %223
  %220 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 135 // users: %225, %221
  %221 = struct_element_addr %220 : $*UInt32, #UInt32._value, scope 135 // user: %222
  %222 = load %221 : $*Builtin.Int32, scope 135   // user: %223
  %223 = builtin "or_Int32"(%222 : $Builtin.Int32, %219 : $Builtin.Int32) : $Builtin.Int32, scope 135 // user: %224
  %224 = struct $UInt32 (%223 : $Builtin.Int32), scope 135 // users: %236, %235, %225
  store %224 to %220 : $*UInt32, scope 135        // id: %225
  %226 = integer_literal $Builtin.Int8, 8, scope 135 // user: %228
  %227 = integer_literal $Builtin.Int1, 0, scope 135 // user: %228
  %228 = builtin "uadd_with_overflow_Int8"(%195 : $Builtin.Int8, %226 : $Builtin.Int8, %227 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 135 // user: %229
  %229 = tuple_extract %228 : $(Builtin.Int8, Builtin.Int1), 0, scope 135 // users: %236, %235, %233, %230
  %230 = struct $UInt8 (%229 : $Builtin.Int8), scope 135 // user: %231
  store %230 to %4 : $*UInt8, scope 135           // id: %231
  %232 = integer_literal $Builtin.Int8, 32, scope 135 // user: %233
  %233 = builtin "cmp_ult_Int8"(%229 : $Builtin.Int8, %232 : $Builtin.Int8) : $Builtin.Int1, scope 135 // user: %234
  cond_br %233, bb39, bb38, scope 135             // id: %234

bb38:                                             // Preds: bb37
  br bb44(%229 : $Builtin.Int8, %224 : $UInt32), scope 135 // id: %235

bb39:                                             // Preds: bb37
  br bb8(%229 : $Builtin.Int8, %224 : $UInt32), scope 135 // id: %236

bb40:                                             // Preds: bb25
  %237 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 135 // user: %239
  %238 = integer_literal $Builtin.Word, 57, scope 135 // user: %240
  %239 = builtin "ptrtoint_Word"(%237 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %240
  %240 = struct $StaticString (%239 : $Builtin.Word, %238 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %248
  %241 = string_literal utf8 "fatal error", scope 135 // user: %243
  %242 = integer_literal $Builtin.Word, 11, scope 135 // user: %244
  %243 = builtin "ptrtoint_Word"(%241 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %244
  %244 = struct $StaticString (%243 : $Builtin.Word, %242 : $Builtin.Word, %105 : $Builtin.Int8), scope 135 // user: %248
  %245 = integer_literal $Builtin.Int32, 1, scope 135 // user: %246
  %246 = struct $UInt32 (%245 : $Builtin.Int32), scope 135 // user: %248
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %247 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %248
  %248 = apply %247(%244, %240, %246) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %249

bb41:                                             // Preds: bb16
  br bb42, scope 135                              // id: %250

bb42:                                             // Preds: bb41 bb11
  %251 = builtin "cmp_eq_Int8"(%60 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int1, scope 135 // user: %252
  cond_br %251, bb51, bb43, scope 135             // id: %252

bb43:                                             // Preds: bb42
  br bb44(%60 : $Builtin.Int8, %61 : $UInt32), scope 135 // id: %253

// %254                                           // user: %297
// %255                                           // users: %291, %257
bb44(%254 : $Builtin.Int8, %255 : $UInt32):       // Preds: bb43 bb38
  // function_ref specialized static UTF8._decodeOne(UInt32) -> (result : UInt32?, length : UInt8)
  %256 = function_ref @_TTSfq4n_d___TZFVs4UTF810_decodeOnefVs6UInt32T6resultGSqS0__6lengthVs5UInt8_ : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8), scope 135 // user: %257
  %257 = apply %256(%255) : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8), scope 135 // users: %259, %258
  %258 = tuple_extract %257 : $(Optional<UInt32>, UInt8), 0, scope 135 // users: %306, %305, %304, %303, %302, %301, %260
  %259 = tuple_extract %257 : $(Optional<UInt32>, UInt8), 1, scope 135 // users: %263, %261
  debug_value %258 : $Optional<UInt32>, scope 135 // id: %260
  debug_value %259 : $UInt8, scope 135            // id: %261
  %262 = integer_literal $Builtin.Int8, 8, scope 135 // user: %265
  %263 = struct_extract %259 : $UInt8, #UInt8._value, scope 135 // user: %265
  %264 = integer_literal $Builtin.Int1, 0, scope 135 // users: %297, %265
  %265 = builtin "umul_with_overflow_Int8"(%262 : $Builtin.Int8, %263 : $Builtin.Int8, %264 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 135 // user: %266
  %266 = tuple_extract %265 : $(Builtin.Int8, Builtin.Int1), 0, scope 135 // users: %297, %267
  %267 = builtin "zext_Int8_Int64"(%266 : $Builtin.Int8) : $Builtin.Int64, scope 135 // user: %269
  %268 = integer_literal $Builtin.Int64, 63, scope 135 // user: %269
  %269 = builtin "and_Int64"(%267 : $Builtin.Int64, %268 : $Builtin.Int64) : $Builtin.Int64, scope 135 // users: %293, %272
  br bb45, scope 135                              // id: %270

bb45:                                             // Preds: bb44
  %271 = integer_literal $Builtin.Int64, 64, scope 135 // user: %272
  %272 = builtin "cmp_ult_Int64"(%269 : $Builtin.Int64, %271 : $Builtin.Int64) : $Builtin.Int1, scope 135 // user: %273
  %273 = builtin "int_expect_Int1"(%272 : $Builtin.Int1, %9 : $Builtin.Int1) : $Builtin.Int1, scope 135 // user: %274
  cond_br %273, bb47, bb46, scope 135             // id: %274

bb46:                                             // Preds: bb45
  %275 = string_literal utf8 "shift amount is larger than type size in bits", scope 135 // user: %277
  %276 = integer_literal $Builtin.Word, 45, scope 135 // user: %279
  %277 = builtin "ptrtoint_Word"(%275 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %279
  %278 = integer_literal $Builtin.Int8, 2, scope 135 // users: %283, %279
  %279 = struct $StaticString (%277 : $Builtin.Word, %276 : $Builtin.Word, %278 : $Builtin.Int8), scope 135 // user: %287
  %280 = string_literal utf8 "fatal error", scope 135 // user: %282
  %281 = integer_literal $Builtin.Word, 11, scope 135 // user: %283
  %282 = builtin "ptrtoint_Word"(%280 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %283
  %283 = struct $StaticString (%282 : $Builtin.Word, %281 : $Builtin.Word, %278 : $Builtin.Int8), scope 135 // user: %287
  %284 = integer_literal $Builtin.Int32, 1, scope 135 // user: %285
  %285 = struct $UInt32 (%284 : $Builtin.Int32), scope 135 // user: %287
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %286 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %287
  %287 = apply %286(%283, %279, %285) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %288

bb47:                                             // Preds: bb45
  br bb48, scope 135                              // id: %289

bb48:                                             // Preds: bb47
  %290 = struct_element_addr %1 : $*UTF8, #UTF8._decodeBuffer, scope 135 // user: %296
  %291 = struct_extract %255 : $UInt32, #UInt32._value, scope 135 // user: %292
  %292 = builtin "zext_Int32_Int64"(%291 : $Builtin.Int32) : $Builtin.Int64, scope 135 // user: %293
  %293 = builtin "lshr_Int64"(%292 : $Builtin.Int64, %269 : $Builtin.Int64) : $Builtin.Int64, scope 135 // user: %294
  %294 = builtin "trunc_Int64_Int32"(%293 : $Builtin.Int64) : $Builtin.Int32, scope 135 // user: %295
  %295 = struct $UInt32 (%294 : $Builtin.Int32), scope 135 // user: %296
  store %295 to %290 : $*UInt32, scope 135        // id: %296
  %297 = builtin "usub_with_overflow_Int8"(%254 : $Builtin.Int8, %266 : $Builtin.Int8, %264 : $Builtin.Int1) : $(Builtin.Int8, Builtin.Int1), scope 135 // user: %298
  %298 = tuple_extract %297 : $(Builtin.Int8, Builtin.Int1), 0, scope 135 // user: %299
  %299 = struct $UInt8 (%298 : $Builtin.Int8), scope 135 // user: %300
  store %299 to %4 : $*UInt8, scope 135           // id: %300
  debug_value %258 : $Optional<UInt32>, scope 135 // id: %301
  debug_value %258 : $Optional<UInt32>, scope 135 // id: %302
  debug_value %258 : $Optional<UInt32>, scope 135 // id: %303
  debug_value %258 : $Optional<UInt32>, scope 135 // id: %304
  switch_enum %258 : $Optional<UInt32>, case #Optional.none!enumelt: bb50, case #Optional.some!enumelt.1: bb49, scope 135 // id: %305

bb49:                                             // Preds: bb48
  %306 = unchecked_enum_data %258 : $Optional<UInt32>, #Optional.some!enumelt.1, scope 135 // users: %308, %307
  debug_value %306 : $UInt32, scope 135           // id: %307
  %308 = struct $UnicodeScalar (%306 : $UInt32), scope 135 // user: %309
  %309 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.scalarValue!enumelt.1, %308 : $UnicodeScalar, scope 135 // user: %310
  br bb55(%309 : $UnicodeDecodingResult), scope 135 // id: %310

bb50:                                             // Preds: bb48
  %311 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.error!enumelt, scope 135 // user: %312
  br bb55(%311 : $UnicodeDecodingResult), scope 135 // id: %312

bb51:                                             // Preds: bb42
  %313 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.emptyInput!enumelt, scope 135 // user: %314
  br bb55(%313 : $UnicodeDecodingResult), scope 135 // id: %314

bb52:                                             // Preds: bb12
  br bb53, scope 135                              // id: %315

bb53:                                             // Preds: bb52
  %316 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 135 // user: %318
  %317 = integer_literal $Builtin.Word, 57, scope 135 // user: %320
  %318 = builtin "ptrtoint_Word"(%316 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %320
  %319 = integer_literal $Builtin.Int8, 2, scope 135 // users: %324, %320
  %320 = struct $StaticString (%318 : $Builtin.Word, %317 : $Builtin.Word, %319 : $Builtin.Int8), scope 135 // user: %328
  %321 = string_literal utf8 "fatal error", scope 135 // user: %323
  %322 = integer_literal $Builtin.Word, 11, scope 135 // user: %324
  %323 = builtin "ptrtoint_Word"(%321 : $Builtin.RawPointer) : $Builtin.Word, scope 135 // user: %324
  %324 = struct $StaticString (%323 : $Builtin.Word, %322 : $Builtin.Word, %319 : $Builtin.Int8), scope 135 // user: %328
  %325 = integer_literal $Builtin.Int32, 1, scope 135 // user: %326
  %326 = struct $UInt32 (%325 : $Builtin.Int32), scope 135 // user: %328
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %327 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135 // user: %328
  %328 = apply %327(%324, %320, %326) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 135
  unreachable, scope 135                          // id: %329

bb54:                                             // Preds: bb6
  %330 = builtin "zext_Int8_Int32"(%48 : $Builtin.Int8) : $Builtin.Int32, scope 135 // user: %331
  %331 = struct $UInt32 (%330 : $Builtin.Int32), scope 135 // users: %333, %332
  debug_value %331 : $UInt32, scope 135           // id: %332
  %333 = struct $UnicodeScalar (%331 : $UInt32), scope 135 // user: %334
  %334 = enum $UnicodeDecodingResult, #UnicodeDecodingResult.scalarValue!enumelt.1, %333 : $UnicodeScalar, scope 135 // user: %335
  br bb55(%334 : $UnicodeDecodingResult), scope 135 // id: %335

// %336                                           // user: %337
bb55(%336 : $UnicodeDecodingResult):              // Preds: bb54 bb51 bb50 bb49 bb5 bb3
  return %336 : $UnicodeDecodingResult, scope 135 // id: %337
}


// specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
sil [fragile] [noinline] [_semantics "arc.programtermination_point"] [_semantics "stdlib_binary_only"] @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never


// specialized _StringBuffer.init(capacity : Int, initialSize : Int, elementWidth : Int) -> _StringBuffer
sil [fragile] @_TTSfq4n_n_n_d___TFVs13_StringBufferCfT8capacitySi11initialSizeSi12elementWidthSi_S_ : $@convention(thin) (Int, Int, Int) -> @owned _StringBuffer

sil_scope 136 {  parent @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int }

// specialized specialized static _HeapBuffer._elementOffset() -> Int
sil shared_external [fragile] @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int {
bb0:
  %0 = metatype $@thick HeapObject.Type, scope 136 // user: %1
  %1 = builtin "sizeof"<HeapObject>(%0 : $@thick HeapObject.Type) : $Builtin.Word, scope 136 // user: %2
  %2 = builtin "zextOrBitCast_Word_Int64"(%1 : $Builtin.Word) : $Builtin.Int64, scope 136 // user: %7
  %3 = metatype $@thick _StringBufferIVars.Type, scope 136 // users: %24, %4
  %4 = builtin "alignof"<_StringBufferIVars>(%3 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 136 // user: %5
  %5 = builtin "zextOrBitCast_Word_Int64"(%4 : $Builtin.Word) : $Builtin.Int64, scope 136 // users: %15, %7
  %6 = integer_literal $Builtin.Int1, -1, scope 136 // users: %33, %26, %7
  %7 = builtin "uadd_with_overflow_Int64"(%2 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1, scope 136 // user: %10
  cond_fail %9 : $Builtin.Int1, scope 136         // id: %10
  %11 = integer_literal $Builtin.Int64, 1, scope 136 // users: %39, %37, %15, %13
  %12 = integer_literal $Builtin.Int1, 0, scope 136 // users: %39, %37, %15, %13
  %13 = builtin "usub_with_overflow_Int64"(%8 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // user: %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %19
  %15 = builtin "usub_with_overflow_Int64"(%5 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // user: %16
  %16 = tuple_extract %15 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %18
  %17 = integer_literal $Builtin.Int64, -1, scope 136 // users: %41, %18
  %18 = builtin "xor_Int64"(%16 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 136 // user: %19
  %19 = builtin "and_Int64"(%14 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int64, scope 136 // user: %20
  %20 = builtin "u_to_s_checked_conversion_Int64"(%19 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 136 // users: %22, %21
  %21 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %26
  %22 = tuple_extract %20 : $(Builtin.Int64, Builtin.Int1), 1, scope 136 // user: %23
  cond_fail %22 : $Builtin.Int1, scope 136        // id: %23
  %24 = builtin "sizeof"<_StringBufferIVars>(%3 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 136 // user: %25
  %25 = builtin "zextOrBitCast_Word_Int64"(%24 : $Builtin.Word) : $Builtin.Int64, scope 136 // user: %26
  %26 = builtin "sadd_with_overflow_Int64"(%21 : $Builtin.Int64, %25 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // users: %28, %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %33
  %28 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 1, scope 136 // user: %29
  cond_fail %28 : $Builtin.Int1, scope 136        // id: %29
  %30 = metatype $@thick UInt16.Type, scope 136   // user: %31
  %31 = builtin "alignof"<UInt16>(%30 : $@thick UInt16.Type) : $Builtin.Word, scope 136 // user: %32
  %32 = builtin "zextOrBitCast_Word_Int64"(%31 : $Builtin.Word) : $Builtin.Int64, scope 136 // users: %39, %33
  %33 = builtin "uadd_with_overflow_Int64"(%27 : $Builtin.Int64, %32 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // users: %35, %34
  %34 = tuple_extract %33 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %37
  %35 = tuple_extract %33 : $(Builtin.Int64, Builtin.Int1), 1, scope 136 // user: %36
  cond_fail %35 : $Builtin.Int1, scope 136        // id: %36
  %37 = builtin "usub_with_overflow_Int64"(%34 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // user: %38
  %38 = tuple_extract %37 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %42
  %39 = builtin "usub_with_overflow_Int64"(%32 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 136 // user: %40
  %40 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %41
  %41 = builtin "xor_Int64"(%40 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 136 // user: %42
  %42 = builtin "and_Int64"(%38 : $Builtin.Int64, %41 : $Builtin.Int64) : $Builtin.Int64, scope 136 // user: %43
  %43 = builtin "u_to_s_checked_conversion_Int64"(%42 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 136 // users: %45, %44
  %44 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 0, scope 136 // user: %47
  %45 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 1, scope 136 // user: %46
  cond_fail %45 : $Builtin.Int1, scope 136        // id: %46
  %47 = struct $Int (%44 : $Builtin.Int64), scope 136 // user: %48
  return %47 : $Int, scope 136                    // id: %48
}


// specialized _StringCore.init(_StringBuffer) -> _StringCore
sil hidden_external [fragile] @_TTSfq4n_d___TFVs11_StringCoreCfVs13_StringBufferS_ : $@convention(thin) (@owned _StringBuffer) -> @owned _StringCore


// _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
sil [fragile] [thunk] [always_inline] [_semantics "arc.programtermination_point"] [_semantics "stdlib_binary_only"] @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never

sil_scope 137 {  parent @_TTSgq5GSRVs5UInt8_GSRS__s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>) -> Optional<UInt8> }

// specialized IndexingIterator.next() -> A._Element?
sil shared_external [fragile] @_TTSgq5GSRVs5UInt8_GSRS__s13IndexableBases___TFVs16IndexingIterator4nextfT_GSqwx8_Element_ : $@convention(method) (@inout IndexingIterator<UnsafeBufferPointer<UInt8>>) -> Optional<UInt8> {
// %0                                             // users: %5, %2, %1
bb0(%0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>):
  debug_value_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, scope 137 // id: %1
  %2 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._position, scope 137 // users: %55, %47, %3
  %3 = struct_element_addr %2 : $*Int, #Int._value, scope 137 // user: %4
  %4 = load %3 : $*Builtin.Int64, scope 137       // users: %50, %44, %41, %12
  %5 = struct_element_addr %0 : $*IndexingIterator<UnsafeBufferPointer<UInt8>>, #IndexingIterator._elements, scope 137 // users: %8, %6
  %6 = struct_element_addr %5 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 137 // user: %7
  %7 = load %6 : $*Optional<UnsafePointer<UInt8>>, scope 137 // users: %46, %10
  %8 = struct_element_addr %5 : $*UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 137 // user: %9
  %9 = load %8 : $*Optional<UnsafePointer<UInt8>>, scope 137 // users: %46, %19, %18
  switch_enum %7 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb4, case #Optional.none!enumelt: bb1, scope 137 // id: %10

bb1:                                              // Preds: bb0
  %11 = integer_literal $Builtin.Int64, 0, scope 137 // user: %12
  %12 = builtin "cmp_eq_Int64"(%4 : $Builtin.Int64, %11 : $Builtin.Int64) : $Builtin.Int1, scope 137 // user: %13
  cond_br %12, bb3, bb2, scope 137                // id: %13

bb2:                                              // Preds: bb1
  br bb10, scope 137                              // id: %14

bb3:                                              // Preds: bb1
  br bb12, scope 137                              // id: %15

// %16                                            // users: %22, %17
bb4(%16 : $UnsafePointer<UInt8>):                 // Preds: bb0
  debug_value %16 : $UnsafePointer<UInt8>, scope 137 // id: %17
  switch_enum %9 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb14, case #Optional.some!enumelt.1: bb5, scope 137 // id: %18

bb5:                                              // Preds: bb4
  %19 = unchecked_enum_data %9 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 137 // user: %20
  %20 = struct_extract %19 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 137 // user: %21
  %21 = builtin "ptrtoint_Word"(%20 : $Builtin.RawPointer) : $Builtin.Word, scope 137 // user: %24
  %22 = struct_extract %16 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 137 // user: %23
  %23 = builtin "ptrtoint_Word"(%22 : $Builtin.RawPointer) : $Builtin.Word, scope 137 // user: %24
  %24 = builtin "sub_Word"(%21 : $Builtin.Word, %23 : $Builtin.Word) : $Builtin.Word, scope 137 // user: %25
  %25 = builtin "zextOrBitCast_Word_Int64"(%24 : $Builtin.Word) : $Builtin.Int64, scope 137 // users: %40, %33
  %26 = metatype $@thick UInt8.Type, scope 137    // user: %27
  %27 = builtin "strideof_nonzero"<UInt8>(%26 : $@thick UInt8.Type) : $Builtin.Word, scope 137 // user: %28
  %28 = builtin "zextOrBitCast_Word_Int64"(%27 : $Builtin.Word) : $Builtin.Int64, scope 137 // users: %40, %37, %30
  %29 = integer_literal $Builtin.Int64, 0, scope 137 // user: %30
  %30 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %29 : $Builtin.Int64) : $Builtin.Int1, scope 137 // user: %31
  cond_fail %30 : $Builtin.Int1, scope 137        // id: %31
  %32 = integer_literal $Builtin.Int64, -9223372036854775808, scope 137 // user: %33
  %33 = builtin "cmp_eq_Int64"(%25 : $Builtin.Int64, %32 : $Builtin.Int64) : $Builtin.Int1, scope 137 // user: %34
  cond_br %33, bb7, bb6, scope 137                // id: %34

bb6:                                              // Preds: bb5
  br bb8, scope 137                               // id: %35

bb7:                                              // Preds: bb5
  %36 = integer_literal $Builtin.Int64, -1, scope 137 // user: %37
  %37 = builtin "cmp_eq_Int64"(%28 : $Builtin.Int64, %36 : $Builtin.Int64) : $Builtin.Int1, scope 137 // user: %38
  cond_fail %37 : $Builtin.Int1, scope 137        // id: %38
  br bb8, scope 137                               // id: %39

bb8:                                              // Preds: bb7 bb6
  %40 = builtin "sdiv_Int64"(%25 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int64, scope 137 // user: %41
  %41 = builtin "cmp_eq_Int64"(%4 : $Builtin.Int64, %40 : $Builtin.Int64) : $Builtin.Int1, scope 137 // user: %42
  cond_br %41, bb11, bb9, scope 137               // id: %42

bb9:                                              // Preds: bb8
  br bb10, scope 137                              // id: %43

bb10:                                             // Preds: bb9 bb2
  %44 = struct $Int (%4 : $Builtin.Int64), scope 137 // user: %46
  // function_ref specialized specialized UnsafeBufferPointer.subscript.getter
  %45 = function_ref @_TTSfq4n_s___TTSgq5Vs5UInt8___TFSRg9subscriptFSix : $@convention(thin) (Int, Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> UInt8, scope 137 // user: %46
  %46 = apply %45(%44, %7, %9) : $@convention(thin) (Int, Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> UInt8, scope 137 // user: %56
  debug_value_addr %2 : $*Int, scope 137          // id: %47
  %48 = integer_literal $Builtin.Int64, 1, scope 137 // user: %50
  %49 = integer_literal $Builtin.Int1, -1, scope 137 // user: %50
  %50 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %48 : $Builtin.Int64, %49 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 137 // users: %52, %51
  %51 = tuple_extract %50 : $(Builtin.Int64, Builtin.Int1), 0, scope 137 // user: %54
  %52 = tuple_extract %50 : $(Builtin.Int64, Builtin.Int1), 1, scope 137 // user: %53
  cond_fail %52 : $Builtin.Int1, scope 137        // id: %53
  %54 = struct $Int (%51 : $Builtin.Int64), scope 137 // user: %55
  store %54 to %2 : $*Int, scope 137              // id: %55
  %56 = enum $Optional<UInt8>, #Optional.some!enumelt.1, %46 : $UInt8, scope 137 // user: %57
  br bb13(%56 : $Optional<UInt8>), scope 137      // id: %57

bb11:                                             // Preds: bb8
  br bb12, scope 137                              // id: %58

bb12:                                             // Preds: bb11 bb3
  %59 = enum $Optional<UInt8>, #Optional.none!enumelt, scope 137 // user: %60
  br bb13(%59 : $Optional<UInt8>), scope 137      // id: %60

// %61                                            // user: %62
bb13(%61 : $Optional<UInt8>):                     // Preds: bb12 bb10
  return %61 : $Optional<UInt8>, scope 137        // id: %62

bb14:                                             // Preds: bb4
  br bb15, scope 137                              // id: %63

bb15:                                             // Preds: bb14
  %64 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 137 // user: %66
  %65 = integer_literal $Builtin.Word, 57, scope 137 // user: %68
  %66 = builtin "ptrtoint_Word"(%64 : $Builtin.RawPointer) : $Builtin.Word, scope 137 // user: %68
  %67 = integer_literal $Builtin.Int8, 2, scope 137 // users: %72, %68
  %68 = struct $StaticString (%66 : $Builtin.Word, %65 : $Builtin.Word, %67 : $Builtin.Int8), scope 137 // user: %76
  %69 = string_literal utf8 "fatal error", scope 137 // user: %71
  %70 = integer_literal $Builtin.Word, 11, scope 137 // user: %72
  %71 = builtin "ptrtoint_Word"(%69 : $Builtin.RawPointer) : $Builtin.Word, scope 137 // user: %72
  %72 = struct $StaticString (%71 : $Builtin.Word, %70 : $Builtin.Word, %67 : $Builtin.Int8), scope 137 // user: %76
  %73 = integer_literal $Builtin.Int32, 1, scope 137 // user: %74
  %74 = struct $UInt32 (%73 : $Builtin.Int32), scope 137 // user: %76
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %75 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 137 // user: %76
  %76 = apply %75(%72, %68, %74) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 137
  unreachable, scope 137                          // id: %77
}


// specialized static UTF8._decodeOne(UInt32) -> (result : UInt32?, length : UInt8)
sil [fragile] @_TTSfq4n_d___TZFVs4UTF810_decodeOnefVs6UInt32T6resultGSqS0__6lengthVs5UInt8_ : $@convention(thin) (UInt32) -> (Optional<UInt32>, UInt8)

sil_scope 138 {  parent @_TTSfq4n_s___TTSgq5Vs5UInt8___TFSRg9subscriptFSix : $@convention(thin) (Int, Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> UInt8 }

// specialized specialized UnsafeBufferPointer.subscript.getter
sil shared_external [fragile] @_TTSfq4n_s___TTSgq5Vs5UInt8___TFSRg9subscriptFSix : $@convention(thin) (Int, Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> UInt8 {
// %0                                             // users: %83, %11, %3
// %1                                             // users: %81, %25
// %2                                             // users: %46, %45
bb0(%0 : $Int, %1 : $Optional<UnsafePointer<UInt8>>, %2 : $Optional<UnsafePointer<UInt8>>):
  debug_value %0 : $Int, scope 138                // id: %3
  br bb1, scope 138                               // id: %4

bb1:                                              // Preds: bb0
  %5 = string_literal utf8 "", scope 138          // user: %7
  %6 = integer_literal $Builtin.Word, 0, scope 138 // user: %9
  %7 = builtin "ptrtoint_Word"(%5 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %9
  %8 = integer_literal $Builtin.Int8, 2, scope 138 // users: %98, %94, %74, %37, %33, %19, %9
  %9 = struct $StaticString (%7 : $Builtin.Word, %6 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // users: %78, %23
  %10 = integer_literal $Builtin.Int64, 0, scope 138 // users: %56, %26, %12
  %11 = struct_extract %0 : $Int, #Int._value, scope 138 // users: %67, %26, %12
  %12 = builtin "cmp_sge_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 138 // user: %14
  %13 = integer_literal $Builtin.Int1, -1, scope 138 // users: %68, %27, %14
  %14 = builtin "int_expect_Int1"(%12 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 138 // user: %15
  cond_br %14, bb3, bb2, scope 138                // id: %15

bb2:                                              // Preds: bb1
  %16 = string_literal utf8 "fatal error", scope 138 // user: %18
  %17 = integer_literal $Builtin.Word, 11, scope 138 // user: %19
  %18 = builtin "ptrtoint_Word"(%16 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %19
  %19 = struct $StaticString (%18 : $Builtin.Word, %17 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // user: %23
  %20 = integer_literal $Builtin.Int32, 1, scope 138 // user: %21
  %21 = struct $UInt32 (%20 : $Builtin.Int32), scope 138 // user: %23
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %22 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138 // user: %23
  %23 = apply %22(%19, %9, %21) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138
  unreachable, scope 138                          // id: %24

bb3:                                              // Preds: bb1
  switch_enum %1 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb7, case #Optional.none!enumelt: bb4, scope 138 // id: %25

bb4:                                              // Preds: bb3
  %26 = builtin "cmp_slt_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 138 // user: %27
  %27 = builtin "int_expect_Int1"(%26 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 138 // user: %28
  cond_br %27, bb6, bb5, scope 138                // id: %28

bb5:                                              // Preds: bb4
  br bb13, scope 138                              // id: %29

bb6:                                              // Preds: bb4
  %30 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 138 // user: %32
  %31 = integer_literal $Builtin.Word, 57, scope 138 // user: %33
  %32 = builtin "ptrtoint_Word"(%30 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %33
  %33 = struct $StaticString (%32 : $Builtin.Word, %31 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // user: %41
  %34 = string_literal utf8 "fatal error", scope 138 // user: %36
  %35 = integer_literal $Builtin.Word, 11, scope 138 // user: %37
  %36 = builtin "ptrtoint_Word"(%34 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %37
  %37 = struct $StaticString (%36 : $Builtin.Word, %35 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // user: %41
  %38 = integer_literal $Builtin.Int32, 1, scope 138 // user: %39
  %39 = struct $UInt32 (%38 : $Builtin.Int32), scope 138 // user: %41
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %40 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138 // user: %41
  %41 = apply %40(%37, %33, %39) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138
  unreachable, scope 138                          // id: %42

// %43                                            // users: %49, %44
bb7(%43 : $UnsafePointer<UInt8>):                 // Preds: bb3
  debug_value %43 : $UnsafePointer<UInt8>, scope 138 // id: %44
  switch_enum %2 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb16, case #Optional.some!enumelt.1: bb8, scope 138 // id: %45

bb8:                                              // Preds: bb7
  %46 = unchecked_enum_data %2 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 138 // user: %47
  %47 = struct_extract %46 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 138 // user: %48
  %48 = builtin "ptrtoint_Word"(%47 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %51
  %49 = struct_extract %43 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 138 // user: %50
  %50 = builtin "ptrtoint_Word"(%49 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %51
  %51 = builtin "sub_Word"(%48 : $Builtin.Word, %50 : $Builtin.Word) : $Builtin.Word, scope 138 // user: %52
  %52 = builtin "zextOrBitCast_Word_Int64"(%51 : $Builtin.Word) : $Builtin.Int64, scope 138 // users: %66, %59
  %53 = metatype $@thick UInt8.Type, scope 138    // user: %54
  %54 = builtin "strideof_nonzero"<UInt8>(%53 : $@thick UInt8.Type) : $Builtin.Word, scope 138 // user: %55
  %55 = builtin "zextOrBitCast_Word_Int64"(%54 : $Builtin.Word) : $Builtin.Int64, scope 138 // users: %66, %63, %56
  %56 = builtin "cmp_eq_Int64"(%55 : $Builtin.Int64, %10 : $Builtin.Int64) : $Builtin.Int1, scope 138 // user: %57
  cond_fail %56 : $Builtin.Int1, scope 138        // id: %57
  %58 = integer_literal $Builtin.Int64, -9223372036854775808, scope 138 // user: %59
  %59 = builtin "cmp_eq_Int64"(%52 : $Builtin.Int64, %58 : $Builtin.Int64) : $Builtin.Int1, scope 138 // user: %60
  cond_br %59, bb10, bb9, scope 138               // id: %60

bb9:                                              // Preds: bb8
  br bb11, scope 138                              // id: %61

bb10:                                             // Preds: bb8
  %62 = integer_literal $Builtin.Int64, -1, scope 138 // user: %63
  %63 = builtin "cmp_eq_Int64"(%55 : $Builtin.Int64, %62 : $Builtin.Int64) : $Builtin.Int1, scope 138 // user: %64
  cond_fail %63 : $Builtin.Int1, scope 138        // id: %64
  br bb11, scope 138                              // id: %65

bb11:                                             // Preds: bb10 bb9
  %66 = builtin "sdiv_Int64"(%52 : $Builtin.Int64, %55 : $Builtin.Int64) : $Builtin.Int64, scope 138 // user: %67
  %67 = builtin "cmp_slt_Int64"(%11 : $Builtin.Int64, %66 : $Builtin.Int64) : $Builtin.Int1, scope 138 // user: %68
  %68 = builtin "int_expect_Int1"(%67 : $Builtin.Int1, %13 : $Builtin.Int1) : $Builtin.Int1, scope 138 // user: %69
  cond_br %68, bb14, bb12, scope 138              // id: %69

bb12:                                             // Preds: bb11
  br bb13, scope 138                              // id: %70

bb13:                                             // Preds: bb12 bb5
  %71 = string_literal utf8 "fatal error", scope 138 // user: %73
  %72 = integer_literal $Builtin.Word, 11, scope 138 // user: %74
  %73 = builtin "ptrtoint_Word"(%71 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %74
  %74 = struct $StaticString (%73 : $Builtin.Word, %72 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // user: %78
  %75 = integer_literal $Builtin.Int32, 1, scope 138 // user: %76
  %76 = struct $UInt32 (%75 : $Builtin.Int32), scope 138 // user: %78
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %77 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138 // user: %78
  %78 = apply %77(%74, %9, %76) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138
  unreachable, scope 138                          // id: %79

bb14:                                             // Preds: bb11
  br bb15, scope 138                              // id: %80

bb15:                                             // Preds: bb14
  %81 = unchecked_enum_data %1 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 138 // user: %82
  %82 = struct_extract %81 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 138 // user: %84
  %83 = struct_extract %0 : $Int, #Int._value, scope 138 // user: %85
  %84 = pointer_to_address %82 : $Builtin.RawPointer to [strict] $*UInt8, scope 138 // user: %86
  %85 = builtin "truncOrBitCast_Int64_Word"(%83 : $Builtin.Int64) : $Builtin.Word, scope 138 // user: %86
  %86 = index_addr %84 : $*UInt8, %85 : $Builtin.Word, scope 138 // user: %87
  %87 = struct_element_addr %86 : $*UInt8, #UInt8._value, scope 138 // user: %88
  %88 = load %87 : $*Builtin.Int8, scope 138      // user: %89
  %89 = struct $UInt8 (%88 : $Builtin.Int8), scope 138 // user: %90
  return %89 : $UInt8, scope 138                  // id: %90

bb16:                                             // Preds: bb7
  %91 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 138 // user: %93
  %92 = integer_literal $Builtin.Word, 57, scope 138 // user: %94
  %93 = builtin "ptrtoint_Word"(%91 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %94
  %94 = struct $StaticString (%93 : $Builtin.Word, %92 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // user: %102
  %95 = string_literal utf8 "fatal error", scope 138 // user: %97
  %96 = integer_literal $Builtin.Word, 11, scope 138 // user: %98
  %97 = builtin "ptrtoint_Word"(%95 : $Builtin.RawPointer) : $Builtin.Word, scope 138 // user: %98
  %98 = struct $StaticString (%97 : $Builtin.Word, %96 : $Builtin.Word, %8 : $Builtin.Int8), scope 138 // user: %102
  %99 = integer_literal $Builtin.Int32, 1, scope 138 // user: %100
  %100 = struct $UInt32 (%99 : $Builtin.Int32), scope 138 // user: %102
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %101 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138 // user: %102
  %102 = apply %101(%98, %94, %100) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 138
  unreachable, scope 138                          // id: %103
}

sil_scope 139 {  parent @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU0_FGSRVs5UInt8_T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString) -> () }

// (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #2)
sil shared_external [fragile] @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU0_FGSRVs5UInt8_T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString) -> () {
// %0                                             // users: %5, %2
// %1                                             // users: %8, %3
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $StaticString):
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 139 // id: %2
  debug_value %1 : $StaticString, scope 139       // id: %3
  // function_ref (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #2).(closure #1)
  %4 = function_ref @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU0_FGSRVs5UInt8_T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>) -> (), scope 139 // user: %5
  %5 = partial_apply %4(%0) : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>) -> (), scope 139 // user: %8
  // function_ref specialized specialized StaticString.withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A
  %6 = function_ref @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 139 // user: %8
  %7 = alloc_stack $(), scope 139                 // users: %9, %8
  %8 = apply %6(%7, %1, %5) : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 139
  dealloc_stack %7 : $*(), scope 139              // id: %9
  %10 = tuple (), scope 139                       // user: %11
  return %10 : $(), scope 139                     // id: %11
}

sil_scope 140 {  parent @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out () }

// specialized specialized StaticString.withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A
sil shared_external [fragile] @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out () {
// %1                                             // users: %132, %124, %17, %6, %5
// %2                                             // users: %144, %137, %122
bb0(%0 : $*(), %1 : $StaticString, %2 : $@callee_owned (UnsafeBufferPointer<UInt8>) -> ()):
  %3 = alloc_stack $UInt64, scope 140             // users: %141, %116, %115, %111, %102, %93, %14
  %4 = alloc_stack $Int, scope 140                // users: %140, %119, %115, %111, %102, %93, %16
  debug_value %1 : $StaticString, scope 140       // id: %5
  %6 = struct_extract %1 : $StaticString, #StaticString._flags, scope 140 // user: %8
  %7 = integer_literal $Builtin.Int8, 1, scope 140 // user: %8
  %8 = builtin "and_Int8"(%6 : $Builtin.Int8, %7 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %10
  %9 = integer_literal $Builtin.Int8, 0, scope 140 // user: %10
  %10 = builtin "cmp_eq_Int8"(%8 : $Builtin.Int8, %9 : $Builtin.Int8) : $Builtin.Int1, scope 140 // user: %11
  cond_br %10, bb20, bb1, scope 140               // id: %11

bb1:                                              // Preds: bb0
  %12 = integer_literal $Builtin.Int64, 0, scope 140 // users: %15, %13
  %13 = struct $UInt64 (%12 : $Builtin.Int64), scope 140 // user: %14
  store %13 to %3 : $*UInt64, scope 140           // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64), scope 140 // user: %16
  store %15 to %4 : $*Int, scope 140              // id: %16
  %17 = struct_extract %1 : $StaticString, #StaticString._startPtrOrData, scope 140 // user: %18
  %18 = builtin "zextOrBitCast_Word_Int64"(%17 : $Builtin.Word) : $Builtin.Int64, scope 140 // user: %19
  %19 = builtin "u_to_u_checked_trunc_Int64_Int32"(%18 : $Builtin.Int64) : $(Builtin.Int32, Builtin.Int1), scope 140 // users: %21, %20
  %20 = tuple_extract %19 : $(Builtin.Int32, Builtin.Int1), 0, scope 140 // users: %67, %63, %59, %33, %27, %24
  %21 = tuple_extract %19 : $(Builtin.Int32, Builtin.Int1), 1, scope 140 // user: %22
  cond_fail %21 : $Builtin.Int1, scope 140        // id: %22
  %23 = integer_literal $Builtin.Int32, 55296, scope 140 // user: %24
  %24 = builtin "cmp_ult_Int32"(%20 : $Builtin.Int32, %23 : $Builtin.Int32) : $Builtin.Int1, scope 140 // user: %25
  cond_br %24, bb5, bb2, scope 140                // id: %25

bb2:                                              // Preds: bb1
  %26 = integer_literal $Builtin.Int32, 57343, scope 140 // user: %27
  %27 = builtin "cmp_ugt_Int32"(%20 : $Builtin.Int32, %26 : $Builtin.Int32) : $Builtin.Int1, scope 140 // user: %28
  cond_br %27, bb4, bb3, scope 140                // id: %28

bb3:                                              // Preds: bb2
  br bb8, scope 140                               // id: %29

bb4:                                              // Preds: bb2
  br bb6, scope 140                               // id: %30

bb5:                                              // Preds: bb1
  br bb6, scope 140                               // id: %31

bb6:                                              // Preds: bb5 bb4
  %32 = integer_literal $Builtin.Int32, 1114111, scope 140 // user: %33
  %33 = builtin "cmp_ule_Int32"(%20 : $Builtin.Int32, %32 : $Builtin.Int32) : $Builtin.Int1, scope 140 // user: %34
  cond_br %33, bb10, bb7, scope 140               // id: %34

bb7:                                              // Preds: bb6
  br bb8, scope 140                               // id: %35

bb8:                                              // Preds: bb7 bb3
  br bb9, scope 140                               // id: %36

bb9:                                              // Preds: bb8
  %37 = integer_literal $Builtin.Int8, 2, scope 140 // users: %52, %45, %41
  %38 = string_literal utf8 "/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-800.0.43.6/src/swift/stdlib/public/core/StaticString.swift", scope 140 // user: %40
  %39 = integer_literal $Builtin.Word, 116, scope 140 // user: %41
  %40 = builtin "ptrtoint_Word"(%38 : $Builtin.RawPointer) : $Builtin.Word, scope 140 // user: %41
  %41 = struct $StaticString (%40 : $Builtin.Word, %39 : $Builtin.Word, %37 : $Builtin.Int8), scope 140 // user: %55
  %42 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 140 // user: %44
  %43 = integer_literal $Builtin.Word, 57, scope 140 // user: %45
  %44 = builtin "ptrtoint_Word"(%42 : $Builtin.RawPointer) : $Builtin.Word, scope 140 // user: %45
  %45 = struct $StaticString (%44 : $Builtin.Word, %43 : $Builtin.Word, %37 : $Builtin.Int8), scope 140 // user: %55
  %46 = integer_literal $Builtin.Int64, 79, scope 140 // user: %47
  %47 = struct $UInt (%46 : $Builtin.Int64), scope 140 // user: %55
  // function_ref _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %48 = function_ref @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 140 // user: %55
  %49 = string_literal utf8 "fatal error", scope 140 // user: %51
  %50 = integer_literal $Builtin.Word, 11, scope 140 // user: %52
  %51 = builtin "ptrtoint_Word"(%49 : $Builtin.RawPointer) : $Builtin.Word, scope 140 // user: %52
  %52 = struct $StaticString (%51 : $Builtin.Word, %50 : $Builtin.Word, %37 : $Builtin.Int8), scope 140 // user: %55
  %53 = integer_literal $Builtin.Int32, 1, scope 140 // user: %54
  %54 = struct $UInt32 (%53 : $Builtin.Int32), scope 140 // user: %55
  %55 = apply %48(%52, %45, %41, %47, %54) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 140
  unreachable, scope 140                          // id: %56

bb10:                                             // Preds: bb6
  // function_ref specialized StaticString.(withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A).(closure #1)
  %57 = function_ref @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_ : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> (), scope 140 // users: %115, %111, %102, %93
  %58 = integer_literal $Builtin.Int32, 255, scope 140 // users: %77, %70, %59
  %59 = builtin "and_Int32"(%20 : $Builtin.Int32, %58 : $Builtin.Int32) : $Builtin.Int32, scope 140 // user: %60
  %60 = builtin "u_to_u_checked_trunc_Int32_Int8"(%59 : $Builtin.Int32) : $(Builtin.Int8, Builtin.Int1), scope 140 // user: %61
  %61 = tuple_extract %60 : $(Builtin.Int8, Builtin.Int1), 0, scope 140 // users: %108, %65
  %62 = integer_literal $Builtin.Int32, 128, scope 140 // user: %63
  %63 = builtin "cmp_uge_Int32"(%20 : $Builtin.Int32, %62 : $Builtin.Int32) : $Builtin.Int1, scope 140 // user: %64
  cond_br %63, bb12, bb11, scope 140              // id: %64

bb11:                                             // Preds: bb10
  br bb19(%61 : $Builtin.Int8), scope 140         // id: %65

bb12:                                             // Preds: bb10
  %66 = integer_literal $Builtin.Int32, 6, scope 140 // users: %83, %76, %67
  %67 = builtin "lshr_Int32"(%20 : $Builtin.Int32, %66 : $Builtin.Int32) : $Builtin.Int32, scope 140 // users: %76, %74, %70
  %68 = integer_literal $Builtin.Int8, 63, scope 140 // users: %108, %99, %84
  %69 = integer_literal $Builtin.Int8, -128, scope 140 // users: %109, %100, %85
  %70 = builtin "and_Int32"(%67 : $Builtin.Int32, %58 : $Builtin.Int32) : $Builtin.Int32, scope 140 // user: %71
  %71 = builtin "u_to_u_checked_trunc_Int32_Int8"(%70 : $Builtin.Int32) : $(Builtin.Int8, Builtin.Int1), scope 140 // user: %72
  %72 = tuple_extract %71 : $(Builtin.Int8, Builtin.Int1), 0, scope 140 // users: %105, %99
  %73 = integer_literal $Builtin.Int32, 32, scope 140 // user: %74
  %74 = builtin "cmp_ult_Int32"(%67 : $Builtin.Int32, %73 : $Builtin.Int32) : $Builtin.Int1, scope 140 // user: %75
  cond_br %74, bb17, bb13, scope 140              // id: %75

bb13:                                             // Preds: bb12
  %76 = builtin "lshr_Int32"(%67 : $Builtin.Int32, %66 : $Builtin.Int32) : $Builtin.Int32, scope 140 // users: %83, %81, %77
  %77 = builtin "and_Int32"(%76 : $Builtin.Int32, %58 : $Builtin.Int32) : $Builtin.Int32, scope 140 // user: %78
  %78 = builtin "u_to_u_checked_trunc_Int32_Int8"(%77 : $Builtin.Int32) : $(Builtin.Int8, Builtin.Int1), scope 140 // user: %79
  %79 = tuple_extract %78 : $(Builtin.Int8, Builtin.Int1), 0, scope 140 // users: %96, %84
  %80 = integer_literal $Builtin.Int32, 16, scope 140 // user: %81
  %81 = builtin "cmp_ult_Int32"(%76 : $Builtin.Int32, %80 : $Builtin.Int32) : $Builtin.Int1, scope 140 // user: %82
  cond_br %81, bb15, bb14, scope 140              // id: %82

bb14:                                             // Preds: bb13
  %83 = builtin "lshr_Int32"(%76 : $Builtin.Int32, %66 : $Builtin.Int32) : $Builtin.Int32, scope 140 // user: %87
  %84 = builtin "and_Int8"(%79 : $Builtin.Int8, %68 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %85
  %85 = builtin "or_Int8"(%84 : $Builtin.Int8, %69 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %94
  %86 = integer_literal $Builtin.Int32, 240, scope 140 // user: %87
  %87 = builtin "or_Int32"(%83 : $Builtin.Int32, %86 : $Builtin.Int32) : $Builtin.Int32, scope 140 // user: %88
  %88 = builtin "u_to_u_checked_trunc_Int32_Int8"(%87 : $Builtin.Int32) : $(Builtin.Int8, Builtin.Int1), scope 140 // users: %90, %89
  %89 = tuple_extract %88 : $(Builtin.Int8, Builtin.Int1), 0, scope 140 // user: %92
  %90 = tuple_extract %88 : $(Builtin.Int8, Builtin.Int1), 1, scope 140 // user: %91
  cond_fail %90 : $Builtin.Int1, scope 140        // id: %91
  %92 = struct $UInt8 (%89 : $Builtin.Int8), scope 140 // user: %93
  %93 = apply %57(%92, %3, %4) : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> (), scope 140
  br bb16(%85 : $Builtin.Int8), scope 140         // id: %94

bb15:                                             // Preds: bb13
  %95 = integer_literal $Builtin.Int8, -32, scope 140 // user: %96
  %96 = builtin "or_Int8"(%79 : $Builtin.Int8, %95 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %97
  br bb16(%96 : $Builtin.Int8), scope 140         // id: %97

// %98                                            // user: %101
bb16(%98 : $Builtin.Int8):                        // Preds: bb15 bb14
  %99 = builtin "and_Int8"(%72 : $Builtin.Int8, %68 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %100
  %100 = builtin "or_Int8"(%99 : $Builtin.Int8, %69 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %103
  %101 = struct $UInt8 (%98 : $Builtin.Int8), scope 140 // user: %102
  %102 = apply %57(%101, %3, %4) : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> (), scope 140
  br bb18(%100 : $Builtin.Int8), scope 140        // id: %103

bb17:                                             // Preds: bb12
  %104 = integer_literal $Builtin.Int8, -64, scope 140 // user: %105
  %105 = builtin "or_Int8"(%72 : $Builtin.Int8, %104 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %106
  br bb18(%105 : $Builtin.Int8), scope 140        // id: %106

// %107                                           // user: %110
bb18(%107 : $Builtin.Int8):                       // Preds: bb17 bb16
  %108 = builtin "and_Int8"(%61 : $Builtin.Int8, %68 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %109
  %109 = builtin "or_Int8"(%108 : $Builtin.Int8, %69 : $Builtin.Int8) : $Builtin.Int8, scope 140 // user: %112
  %110 = struct $UInt8 (%107 : $Builtin.Int8), scope 140 // user: %111
  %111 = apply %57(%110, %3, %4) : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> (), scope 140
  br bb19(%109 : $Builtin.Int8), scope 140        // id: %112

// %113                                           // user: %114
bb19(%113 : $Builtin.Int8):                       // Preds: bb18 bb11
  %114 = struct $UInt8 (%113 : $Builtin.Int8), scope 140 // user: %115
  %115 = apply %57(%114, %3, %4) : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> (), scope 140
  %116 = address_to_pointer %3 : $*UInt64 to $Builtin.RawPointer, scope 140 // user: %117
  %117 = struct $UnsafePointer<UInt8> (%116 : $Builtin.RawPointer), scope 140 // user: %118
  %118 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %117 : $UnsafePointer<UInt8>, scope 140 // user: %121
  %119 = load %4 : $*Int, scope 140               // user: %121
  // function_ref specialized specialized UnsafeBufferPointer.init(start : UnsafePointer<A>?, count : Int) -> UnsafeBufferPointer<A>
  %120 = function_ref @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8>, scope 140 // user: %121
  %121 = apply %120(%118, %119) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8>, scope 140 // user: %122
  %122 = apply %2(%121) : $@callee_owned (UnsafeBufferPointer<UInt8>) -> (), scope 140
  br bb22, scope 140                              // id: %123

bb20:                                             // Preds: bb0
  %124 = struct_extract %1 : $StaticString, #StaticString._startPtrOrData, scope 140 // users: %129, %125
  %125 = builtin "zextOrBitCast_Word_Int64"(%124 : $Builtin.Word) : $Builtin.Int64, scope 140 // user: %127
  %126 = integer_literal $Builtin.Int64, 0, scope 140 // user: %127
  %127 = builtin "cmp_eq_Int64"(%125 : $Builtin.Int64, %126 : $Builtin.Int64) : $Builtin.Int1, scope 140 // user: %128
  cond_br %127, bb23, bb21, scope 140             // id: %128

bb21:                                             // Preds: bb20
  %129 = builtin "inttoptr_Word"(%124 : $Builtin.Word) : $Builtin.RawPointer, scope 140 // user: %130
  %130 = struct $UnsafePointer<UInt8> (%129 : $Builtin.RawPointer), scope 140 // user: %131
  %131 = enum $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, %130 : $UnsafePointer<UInt8>, scope 140 // user: %136
  %132 = struct_extract %1 : $StaticString, #StaticString._utf8CodeUnitCount, scope 140 // user: %133
  %133 = builtin "zextOrBitCast_Word_Int64"(%132 : $Builtin.Word) : $Builtin.Int64, scope 140 // user: %134
  %134 = struct $Int (%133 : $Builtin.Int64), scope 140 // user: %136
  // function_ref specialized specialized UnsafeBufferPointer.init(start : UnsafePointer<A>?, count : Int) -> UnsafeBufferPointer<A>
  %135 = function_ref @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_ : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8>, scope 140 // user: %136
  %136 = apply %135(%131, %134) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Int) -> UnsafeBufferPointer<UInt8>, scope 140 // user: %137
  %137 = apply %2(%136) : $@callee_owned (UnsafeBufferPointer<UInt8>) -> (), scope 140
  br bb22, scope 140                              // id: %138

bb22:                                             // Preds: bb21 bb19
  %139 = tuple (), scope 140                      // user: %142
  dealloc_stack %4 : $*Int, scope 140             // id: %140
  dealloc_stack %3 : $*UInt64, scope 140          // id: %141
  return %139 : $(), scope 140                    // id: %142

bb23:                                             // Preds: bb20
  br bb24, scope 140                              // id: %143

bb24:                                             // Preds: bb23
  strong_release %2 : $@callee_owned (UnsafeBufferPointer<UInt8>) -> (), scope 140 // id: %144
  %145 = integer_literal $Builtin.Int8, 2, scope 140 // users: %160, %153, %149
  %146 = string_literal utf8 "/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-800.0.43.6/src/swift/stdlib/public/core/StaticString.swift", scope 140 // user: %148
  %147 = integer_literal $Builtin.Word, 116, scope 140 // user: %149
  %148 = builtin "ptrtoint_Word"(%146 : $Builtin.RawPointer) : $Builtin.Word, scope 140 // user: %149
  %149 = struct $StaticString (%148 : $Builtin.Word, %147 : $Builtin.Word, %145 : $Builtin.Int8), scope 140 // user: %163
  %150 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 140 // user: %152
  %151 = integer_literal $Builtin.Word, 57, scope 140 // user: %153
  %152 = builtin "ptrtoint_Word"(%150 : $Builtin.RawPointer) : $Builtin.Word, scope 140 // user: %153
  %153 = struct $StaticString (%152 : $Builtin.Word, %151 : $Builtin.Word, %145 : $Builtin.Int8), scope 140 // user: %163
  %154 = integer_literal $Builtin.Int64, 66, scope 140 // user: %155
  %155 = struct $UInt (%154 : $Builtin.Int64), scope 140 // user: %163
  // function_ref _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %156 = function_ref @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 140 // user: %163
  %157 = string_literal utf8 "fatal error", scope 140 // user: %159
  %158 = integer_literal $Builtin.Word, 11, scope 140 // user: %160
  %159 = builtin "ptrtoint_Word"(%157 : $Builtin.RawPointer) : $Builtin.Word, scope 140 // user: %160
  %160 = struct $StaticString (%159 : $Builtin.Word, %158 : $Builtin.Word, %145 : $Builtin.Int8), scope 140 // user: %163
  %161 = integer_literal $Builtin.Int32, 1, scope 140 // user: %162
  %162 = struct $UInt32 (%161 : $Builtin.Int32), scope 140 // user: %163
  %163 = apply %156(%160, %153, %149, %155, %162) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 140
  unreachable, scope 140                          // id: %164
}

sil_scope 141 {  parent @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, StaticString, UInt, UInt) -> () }

// (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1)
sil shared_external [fragile] @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, StaticString, UInt, UInt) -> () {
// %0                                             // users: %11, %5
// %1                                             // users: %14, %6
// %2                                             // users: %11, %7
// %3                                             // users: %11, %8
// %4                                             // users: %11, %9
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $StaticString, %2 : $StaticString, %3 : $UInt, %4 : $UInt):
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 141 // id: %5
  debug_value %1 : $StaticString, scope 141       // id: %6
  debug_value %2 : $StaticString, scope 141       // id: %7
  debug_value %3 : $UInt, scope 141               // id: %8
  debug_value %4 : $UInt, scope 141               // id: %9
  // function_ref (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1).(closure #1)
  %10 = function_ref @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, UnsafeBufferPointer<UInt8>, UInt, UInt) -> (), scope 141 // user: %11
  %11 = partial_apply %10(%2, %0, %3, %4) : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, UnsafeBufferPointer<UInt8>, UInt, UInt) -> (), scope 141 // user: %14
  // function_ref specialized specialized StaticString.withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A
  %12 = function_ref @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 141 // user: %14
  %13 = alloc_stack $(), scope 141                // users: %15, %14
  %14 = apply %12(%13, %1, %11) : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 141
  dealloc_stack %13 : $*(), scope 141             // id: %15
  %16 = tuple (), scope 141                       // user: %17
  return %16 : $(), scope 141                     // id: %17
}

sil_scope 142 {  parent @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU0_FGSRVs5UInt8_T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>) -> () }

// (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #2).(closure #1)
sil shared_external [fragile] @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU0_FGSRVs5UInt8_T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>) -> () {
// %0                                             // users: %22, %15, %14, %2
// %1                                             // users: %8, %5, %4, %3
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $UnsafeBufferPointer<UInt8>):
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 142 // id: %2
  debug_value %1 : $UnsafeBufferPointer<UInt8>, scope 142 // id: %3
  debug_value %1 : $UnsafeBufferPointer<UInt8>, scope 142 // id: %4
  %5 = struct_extract %1 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 142 // users: %18, %9, %6
  switch_enum %5 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb5, case #Optional.some!enumelt.1: bb1, scope 142 // id: %6

bb1:                                              // Preds: bb0
  // function_ref specialized specialized UnsafeBufferPointer.count.getter
  %7 = function_ref @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 142 // users: %23, %9
  %8 = struct_extract %1 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 142 // user: %9
  %9 = apply %7(%5, %8) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 142 // user: %10
  %10 = struct_extract %9 : $Int, #Int._value, scope 142 // user: %11
  %11 = builtin "s_to_u_checked_conversion_Int64"(%10 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 142 // users: %19, %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 1, scope 142 // user: %13
  cond_fail %12 : $Builtin.Int1, scope 142        // id: %13
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 142 // id: %14
  %15 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 142 // users: %23, %21, %16
  switch_enum %15 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb3, case #Optional.some!enumelt.1: bb2, scope 142 // id: %16

bb2:                                              // Preds: bb1
  // function_ref _swift_stdlib_reportUnimplementedInitializer
  %17 = function_ref @_swift_stdlib_reportUnimplementedInitializer : $@convention(thin) (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UInt32) -> (), scope 142 // user: %32
  %18 = unchecked_enum_data %5 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 142 // user: %32
  %19 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0, scope 142 // user: %20
  %20 = struct $UInt (%19 : $Builtin.Int64), scope 142 // user: %32
  %21 = unchecked_enum_data %15 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 142 // user: %32
  %22 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 142 // user: %23
  %23 = apply %7(%15, %22) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 142 // user: %24
  %24 = struct_extract %23 : $Int, #Int._value, scope 142 // user: %25
  %25 = builtin "s_to_u_checked_conversion_Int64"(%24 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 142 // users: %27, %26
  %26 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 0, scope 142 // user: %29
  %27 = tuple_extract %25 : $(Builtin.Int64, Builtin.Int1), 1, scope 142 // user: %28
  cond_fail %27 : $Builtin.Int1, scope 142        // id: %28
  %29 = struct $UInt (%26 : $Builtin.Int64), scope 142 // user: %32
  %30 = integer_literal $Builtin.Int32, 0, scope 142 // user: %31
  %31 = struct $UInt32 (%30 : $Builtin.Int32), scope 142 // user: %32
  %32 = apply %17(%18, %20, %21, %29, %31) : $@convention(thin) (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UInt32) -> (), scope 142
  %33 = tuple (), scope 142                       // user: %34
  return %33 : $(), scope 142                     // id: %34

bb3:                                              // Preds: bb1
  br bb4, scope 142                               // id: %35

bb4:                                              // Preds: bb3
  %36 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 142 // user: %38
  %37 = integer_literal $Builtin.Word, 57, scope 142 // user: %40
  %38 = builtin "ptrtoint_Word"(%36 : $Builtin.RawPointer) : $Builtin.Word, scope 142 // user: %40
  %39 = integer_literal $Builtin.Int8, 2, scope 142 // users: %44, %40
  %40 = struct $StaticString (%38 : $Builtin.Word, %37 : $Builtin.Word, %39 : $Builtin.Int8), scope 142 // user: %48
  %41 = string_literal utf8 "fatal error", scope 142 // user: %43
  %42 = integer_literal $Builtin.Word, 11, scope 142 // user: %44
  %43 = builtin "ptrtoint_Word"(%41 : $Builtin.RawPointer) : $Builtin.Word, scope 142 // user: %44
  %44 = struct $StaticString (%43 : $Builtin.Word, %42 : $Builtin.Word, %39 : $Builtin.Int8), scope 142 // user: %48
  %45 = integer_literal $Builtin.Int32, 1, scope 142 // user: %46
  %46 = struct $UInt32 (%45 : $Builtin.Int32), scope 142 // user: %48
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %47 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 142 // user: %48
  %48 = apply %47(%44, %40, %46) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 142
  unreachable, scope 142                          // id: %49

bb5:                                              // Preds: bb0
  br bb6, scope 142                               // id: %50

bb6:                                              // Preds: bb5
  %51 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 142 // user: %53
  %52 = integer_literal $Builtin.Word, 57, scope 142 // user: %55
  %53 = builtin "ptrtoint_Word"(%51 : $Builtin.RawPointer) : $Builtin.Word, scope 142 // user: %55
  %54 = integer_literal $Builtin.Int8, 2, scope 142 // users: %59, %55
  %55 = struct $StaticString (%53 : $Builtin.Word, %52 : $Builtin.Word, %54 : $Builtin.Int8), scope 142 // user: %63
  %56 = string_literal utf8 "fatal error", scope 142 // user: %58
  %57 = integer_literal $Builtin.Word, 11, scope 142 // user: %59
  %58 = builtin "ptrtoint_Word"(%56 : $Builtin.RawPointer) : $Builtin.Word, scope 142 // user: %59
  %59 = struct $StaticString (%58 : $Builtin.Word, %57 : $Builtin.Word, %54 : $Builtin.Int8), scope 142 // user: %63
  %60 = integer_literal $Builtin.Int32, 1, scope 142 // user: %61
  %61 = struct $UInt32 (%60 : $Builtin.Int32), scope 142 // user: %63
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %62 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 142 // user: %63
  %63 = apply %62(%59, %55, %61) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 142
  unreachable, scope 142                          // id: %64
}

sil_scope 143 {  parent @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_ : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> () }

// specialized StaticString.(withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A).(closure #1)
sil shared_external [fragile] @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_ : $@convention(thin) (UInt8, @inout_aliasable UInt64, @inout_aliasable Int) -> () {
// %0                                             // users: %46, %3
// %1                                             // users: %51, %6, %4
// %2                                             // users: %59, %8, %5
bb0(%0 : $UInt8, %1 : $*UInt64, %2 : $*Int):
  debug_value %0 : $UInt8, scope 143              // id: %3
  debug_value_addr %1 : $*UInt64, scope 143       // id: %4
  debug_value_addr %2 : $*Int, scope 143          // id: %5
  %6 = struct_element_addr %1 : $*UInt64, #UInt64._value, scope 143 // user: %7
  %7 = load %6 : $*Builtin.Int64, scope 143       // user: %49
  %8 = struct_element_addr %2 : $*Int, #Int._value, scope 143 // users: %53, %9
  %9 = load %8 : $*Builtin.Int64, scope 143       // user: %10
  %10 = builtin "s_to_u_checked_conversion_Int64"(%9 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 143 // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0, scope 143 // user: %16
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1, scope 143 // user: %13
  cond_fail %12 : $Builtin.Int1, scope 143        // id: %13
  %14 = integer_literal $Builtin.Int64, 8, scope 143 // user: %16
  %15 = integer_literal $Builtin.Int1, -1, scope 143 // users: %54, %23, %16
  %16 = builtin "umul_with_overflow_Int64"(%11 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 143 // users: %18, %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 143 // users: %48, %22
  %18 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 1, scope 143 // user: %19
  cond_fail %18 : $Builtin.Int1, scope 143        // id: %19
  br bb1, scope 143                               // id: %20

bb1:                                              // Preds: bb0
  %21 = integer_literal $Builtin.Int64, 64, scope 143 // user: %22
  %22 = builtin "cmp_ult_Int64"(%17 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 143 // user: %23
  %23 = builtin "int_expect_Int1"(%22 : $Builtin.Int1, %15 : $Builtin.Int1) : $Builtin.Int1, scope 143 // user: %24
  cond_br %23, bb3, bb2, scope 143                // id: %24

bb2:                                              // Preds: bb1
  %25 = string_literal utf8 "shift amount is larger than type size in bits", scope 143 // user: %27
  %26 = integer_literal $Builtin.Word, 45, scope 143 // user: %29
  %27 = builtin "ptrtoint_Word"(%25 : $Builtin.RawPointer) : $Builtin.Word, scope 143 // user: %29
  %28 = integer_literal $Builtin.Int8, 2, scope 143 // users: %40, %33, %29
  %29 = struct $StaticString (%27 : $Builtin.Word, %26 : $Builtin.Word, %28 : $Builtin.Int8), scope 143 // user: %43
  %30 = string_literal utf8 "/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.43.6~5/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/FixedPoint.swift", scope 143 // user: %32
  %31 = integer_literal $Builtin.Word, 172, scope 143 // user: %33
  %32 = builtin "ptrtoint_Word"(%30 : $Builtin.RawPointer) : $Builtin.Word, scope 143 // user: %33
  %33 = struct $StaticString (%32 : $Builtin.Word, %31 : $Builtin.Word, %28 : $Builtin.Int8), scope 143 // user: %43
  %34 = integer_literal $Builtin.Int64, 6325, scope 143 // user: %35
  %35 = struct $UInt (%34 : $Builtin.Int64), scope 143 // user: %43
  // function_ref _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %36 = function_ref @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 143 // user: %43
  %37 = string_literal utf8 "fatal error", scope 143 // user: %39
  %38 = integer_literal $Builtin.Word, 11, scope 143 // user: %40
  %39 = builtin "ptrtoint_Word"(%37 : $Builtin.RawPointer) : $Builtin.Word, scope 143 // user: %40
  %40 = struct $StaticString (%39 : $Builtin.Word, %38 : $Builtin.Word, %28 : $Builtin.Int8), scope 143 // user: %43
  %41 = integer_literal $Builtin.Int32, 1, scope 143 // user: %42
  %42 = struct $UInt32 (%41 : $Builtin.Int32), scope 143 // user: %43
  %43 = apply %36(%40, %29, %33, %35, %42) : $@convention(thin) (StaticString, StaticString, StaticString, UInt, UInt32) -> Never, scope 143
  unreachable, scope 143                          // id: %44

bb3:                                              // Preds: bb1
  br bb4, scope 143                               // id: %45

bb4:                                              // Preds: bb3
  %46 = struct_extract %0 : $UInt8, #UInt8._value, scope 143 // user: %47
  %47 = builtin "zext_Int8_Int64"(%46 : $Builtin.Int8) : $Builtin.Int64, scope 143 // user: %48
  %48 = builtin "shl_Int64"(%47 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 143 // user: %49
  %49 = builtin "or_Int64"(%7 : $Builtin.Int64, %48 : $Builtin.Int64) : $Builtin.Int64, scope 143 // user: %50
  %50 = struct $UInt64 (%49 : $Builtin.Int64), scope 143 // user: %51
  store %50 to %1 : $*UInt64, scope 143           // id: %51
  %52 = integer_literal $Builtin.Int64, 1, scope 143 // user: %54
  %53 = load %8 : $*Builtin.Int64, scope 143      // user: %54
  %54 = builtin "sadd_with_overflow_Int64"(%53 : $Builtin.Int64, %52 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 143 // users: %56, %55
  %55 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 0, scope 143 // user: %58
  %56 = tuple_extract %54 : $(Builtin.Int64, Builtin.Int1), 1, scope 143 // user: %57
  cond_fail %56 : $Builtin.Int1, scope 143        // id: %57
  %58 = struct $Int (%55 : $Builtin.Int64), scope 143 // user: %59
  store %58 to %2 : $*Int, scope 143              // id: %59
  %60 = tuple (), scope 143                       // user: %61
  return %60 : $(), scope 143                     // id: %61
}

sil_scope 144 {  parent @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, UnsafeBufferPointer<UInt8>, UInt, UInt) -> () }

// (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1).(closure #1)
sil shared_external [fragile] @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, StaticString, UnsafeBufferPointer<UInt8>, UInt, UInt) -> () {
// %0                                             // users: %11, %5
// %1                                             // users: %14, %6
// %2                                             // users: %11, %7
// %3                                             // users: %11, %8
// %4                                             // users: %11, %9
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $StaticString, %2 : $UnsafeBufferPointer<UInt8>, %3 : $UInt, %4 : $UInt):
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 144 // id: %5
  debug_value %1 : $StaticString, scope 144       // id: %6
  debug_value %2 : $UnsafeBufferPointer<UInt8>, scope 144 // id: %7
  debug_value %3 : $UInt, scope 144               // id: %8
  debug_value %4 : $UInt, scope 144               // id: %9
  // function_ref (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1).(closure #1).(closure #1)
  %10 = function_ref @_TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> (), scope 144 // user: %11
  %11 = partial_apply %10(%2, %0, %3, %4) : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> (), scope 144 // user: %14
  // function_ref specialized specialized StaticString.withUTF8Buffer<A> ((UnsafeBufferPointer<UInt8>) -> A) -> A
  %12 = function_ref @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 144 // user: %14
  %13 = alloc_stack $(), scope 144                // users: %15, %14
  %14 = apply %12(%13, %1, %11) : $@convention(thin) (StaticString, @owned @callee_owned (UnsafeBufferPointer<UInt8>) -> ()) -> @out (), scope 144
  dealloc_stack %13 : $*(), scope 144             // id: %15
  %16 = tuple (), scope 144                       // user: %17
  return %16 : $(), scope 144                     // id: %17
}

sil_scope 145 {  parent @_TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> () }

// (_unimplementedInitializer(className : StaticString, initName : StaticString, file : StaticString, line : UInt, column : UInt) -> Never).(closure #1).(closure #1).(closure #1)
sil shared_external [fragile] @_TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_ : $@convention(thin) (UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UnsafeBufferPointer<UInt8>, UInt, UInt) -> () {
// %0                                             // users: %40, %30, %29, %5
// %1                                             // users: %14, %11, %10, %6
// %2                                             // users: %23, %21, %20, %7
// %3                                             // users: %50, %8
// %4                                             // users: %50, %9
bb0(%0 : $UnsafeBufferPointer<UInt8>, %1 : $UnsafeBufferPointer<UInt8>, %2 : $UnsafeBufferPointer<UInt8>, %3 : $UInt, %4 : $UInt):
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 145 // id: %5
  debug_value %1 : $UnsafeBufferPointer<UInt8>, scope 145 // id: %6
  debug_value %2 : $UnsafeBufferPointer<UInt8>, scope 145 // id: %7
  debug_value %3 : $UInt, scope 145               // id: %8
  debug_value %4 : $UInt, scope 145               // id: %9
  debug_value %1 : $UnsafeBufferPointer<UInt8>, scope 145 // id: %10
  %11 = struct_extract %1 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 145 // users: %33, %15, %12
  switch_enum %11 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb8, case #Optional.some!enumelt.1: bb1, scope 145 // id: %12

bb1:                                              // Preds: bb0
  // function_ref specialized specialized UnsafeBufferPointer.count.getter
  %13 = function_ref @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 145 // users: %41, %24, %15
  %14 = struct_extract %1 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 145 // user: %15
  %15 = apply %13(%11, %14) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 145 // user: %16
  %16 = struct_extract %15 : $Int, #Int._value, scope 145 // user: %17
  %17 = builtin "s_to_u_checked_conversion_Int64"(%16 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 145 // users: %34, %18
  %18 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 1, scope 145 // user: %19
  cond_fail %18 : $Builtin.Int1, scope 145        // id: %19
  debug_value %2 : $UnsafeBufferPointer<UInt8>, scope 145 // id: %20
  %21 = struct_extract %2 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 145 // users: %36, %24, %22
  switch_enum %21 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb6, case #Optional.some!enumelt.1: bb2, scope 145 // id: %22

bb2:                                              // Preds: bb1
  %23 = struct_extract %2 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 145 // user: %24
  %24 = apply %13(%21, %23) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 145 // user: %25
  %25 = struct_extract %24 : $Int, #Int._value, scope 145 // user: %26
  %26 = builtin "s_to_u_checked_conversion_Int64"(%25 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 145 // users: %37, %27
  %27 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 1, scope 145 // user: %28
  cond_fail %27 : $Builtin.Int1, scope 145        // id: %28
  debug_value %0 : $UnsafeBufferPointer<UInt8>, scope 145 // id: %29
  %30 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._position, scope 145 // users: %41, %39, %31
  switch_enum %30 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb4, case #Optional.some!enumelt.1: bb3, scope 145 // id: %31

bb3:                                              // Preds: bb2
  // function_ref _swift_stdlib_reportUnimplementedInitializerInFile
  %32 = function_ref @_swift_stdlib_reportUnimplementedInitializerInFile : $@convention(thin) (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UInt, UInt, UInt32) -> (), scope 145 // user: %50
  %33 = unchecked_enum_data %11 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 145 // user: %50
  %34 = tuple_extract %17 : $(Builtin.Int64, Builtin.Int1), 0, scope 145 // user: %35
  %35 = struct $UInt (%34 : $Builtin.Int64), scope 145 // user: %50
  %36 = unchecked_enum_data %21 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 145 // user: %50
  %37 = tuple_extract %26 : $(Builtin.Int64, Builtin.Int1), 0, scope 145 // user: %38
  %38 = struct $UInt (%37 : $Builtin.Int64), scope 145 // user: %50
  %39 = unchecked_enum_data %30 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 145 // user: %50
  %40 = struct_extract %0 : $UnsafeBufferPointer<UInt8>, #UnsafeBufferPointer._end, scope 145 // user: %41
  %41 = apply %13(%30, %40) : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int, scope 145 // user: %42
  %42 = struct_extract %41 : $Int, #Int._value, scope 145 // user: %43
  %43 = builtin "s_to_u_checked_conversion_Int64"(%42 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 145 // users: %45, %44
  %44 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 0, scope 145 // user: %47
  %45 = tuple_extract %43 : $(Builtin.Int64, Builtin.Int1), 1, scope 145 // user: %46
  cond_fail %45 : $Builtin.Int1, scope 145        // id: %46
  %47 = struct $UInt (%44 : $Builtin.Int64), scope 145 // user: %50
  %48 = integer_literal $Builtin.Int32, 0, scope 145 // user: %49
  %49 = struct $UInt32 (%48 : $Builtin.Int32), scope 145 // user: %50
  %50 = apply %32(%33, %35, %36, %38, %39, %47, %3, %4, %49) : $@convention(thin) (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UInt, UInt, UInt32) -> (), scope 145
  %51 = tuple (), scope 145                       // user: %52
  return %51 : $(), scope 145                     // id: %52

bb4:                                              // Preds: bb2
  br bb5, scope 145                               // id: %53

bb5:                                              // Preds: bb4
  %54 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 145 // user: %56
  %55 = integer_literal $Builtin.Word, 57, scope 145 // user: %58
  %56 = builtin "ptrtoint_Word"(%54 : $Builtin.RawPointer) : $Builtin.Word, scope 145 // user: %58
  %57 = integer_literal $Builtin.Int8, 2, scope 145 // users: %62, %58
  %58 = struct $StaticString (%56 : $Builtin.Word, %55 : $Builtin.Word, %57 : $Builtin.Int8), scope 145 // user: %66
  %59 = string_literal utf8 "fatal error", scope 145 // user: %61
  %60 = integer_literal $Builtin.Word, 11, scope 145 // user: %62
  %61 = builtin "ptrtoint_Word"(%59 : $Builtin.RawPointer) : $Builtin.Word, scope 145 // user: %62
  %62 = struct $StaticString (%61 : $Builtin.Word, %60 : $Builtin.Word, %57 : $Builtin.Int8), scope 145 // user: %66
  %63 = integer_literal $Builtin.Int32, 1, scope 145 // user: %64
  %64 = struct $UInt32 (%63 : $Builtin.Int32), scope 145 // user: %66
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %65 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 145 // user: %66
  %66 = apply %65(%62, %58, %64) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 145
  unreachable, scope 145                          // id: %67

bb6:                                              // Preds: bb1
  br bb7, scope 145                               // id: %68

bb7:                                              // Preds: bb6
  %69 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 145 // user: %71
  %70 = integer_literal $Builtin.Word, 57, scope 145 // user: %73
  %71 = builtin "ptrtoint_Word"(%69 : $Builtin.RawPointer) : $Builtin.Word, scope 145 // user: %73
  %72 = integer_literal $Builtin.Int8, 2, scope 145 // users: %77, %73
  %73 = struct $StaticString (%71 : $Builtin.Word, %70 : $Builtin.Word, %72 : $Builtin.Int8), scope 145 // user: %81
  %74 = string_literal utf8 "fatal error", scope 145 // user: %76
  %75 = integer_literal $Builtin.Word, 11, scope 145 // user: %77
  %76 = builtin "ptrtoint_Word"(%74 : $Builtin.RawPointer) : $Builtin.Word, scope 145 // user: %77
  %77 = struct $StaticString (%76 : $Builtin.Word, %75 : $Builtin.Word, %72 : $Builtin.Int8), scope 145 // user: %81
  %78 = integer_literal $Builtin.Int32, 1, scope 145 // user: %79
  %79 = struct $UInt32 (%78 : $Builtin.Int32), scope 145 // user: %81
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %80 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 145 // user: %81
  %81 = apply %80(%77, %73, %79) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 145
  unreachable, scope 145                          // id: %82

bb8:                                              // Preds: bb0
  br bb9, scope 145                               // id: %83

bb9:                                              // Preds: bb8
  %84 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 145 // user: %86
  %85 = integer_literal $Builtin.Word, 57, scope 145 // user: %88
  %86 = builtin "ptrtoint_Word"(%84 : $Builtin.RawPointer) : $Builtin.Word, scope 145 // user: %88
  %87 = integer_literal $Builtin.Int8, 2, scope 145 // users: %92, %88
  %88 = struct $StaticString (%86 : $Builtin.Word, %85 : $Builtin.Word, %87 : $Builtin.Int8), scope 145 // user: %96
  %89 = string_literal utf8 "fatal error", scope 145 // user: %91
  %90 = integer_literal $Builtin.Word, 11, scope 145 // user: %92
  %91 = builtin "ptrtoint_Word"(%89 : $Builtin.RawPointer) : $Builtin.Word, scope 145 // user: %92
  %92 = struct $StaticString (%91 : $Builtin.Word, %90 : $Builtin.Word, %87 : $Builtin.Int8), scope 145 // user: %96
  %93 = integer_literal $Builtin.Int32, 1, scope 145 // user: %94
  %94 = struct $UInt32 (%93 : $Builtin.Int32), scope 145 // user: %96
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %95 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 145 // user: %96
  %96 = apply %95(%92, %88, %94) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 145
  unreachable, scope 145                          // id: %97
}

sil_scope 146 {  parent @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int }

// specialized specialized UnsafeBufferPointer.count.getter
sil shared_external [fragile] @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi : $@convention(thin) (Optional<UnsafePointer<UInt8>>, Optional<UnsafePointer<UInt8>>) -> Int {
// %0                                             // user: %2
// %1                                             // users: %8, %7
bb0(%0 : $Optional<UnsafePointer<UInt8>>, %1 : $Optional<UnsafePointer<UInt8>>):
  switch_enum %0 : $Optional<UnsafePointer<UInt8>>, case #Optional.some!enumelt.1: bb2, case #Optional.none!enumelt: bb1, scope 146 // id: %2

bb1:                                              // Preds: bb0
  %3 = integer_literal $Builtin.Int64, 0, scope 146 // user: %4
  br bb7(%3 : $Builtin.Int64), scope 146          // id: %4

// %5                                             // users: %11, %6
bb2(%5 : $UnsafePointer<UInt8>):                  // Preds: bb0
  debug_value %5 : $UnsafePointer<UInt8>, scope 146 // id: %6
  switch_enum %1 : $Optional<UnsafePointer<UInt8>>, case #Optional.none!enumelt: bb8, case #Optional.some!enumelt.1: bb3, scope 146 // id: %7

bb3:                                              // Preds: bb2
  %8 = unchecked_enum_data %1 : $Optional<UnsafePointer<UInt8>>, #Optional.some!enumelt.1, scope 146 // user: %9
  %9 = struct_extract %8 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 146 // user: %10
  %10 = builtin "ptrtoint_Word"(%9 : $Builtin.RawPointer) : $Builtin.Word, scope 146 // user: %13
  %11 = struct_extract %5 : $UnsafePointer<UInt8>, #UnsafePointer._rawValue, scope 146 // user: %12
  %12 = builtin "ptrtoint_Word"(%11 : $Builtin.RawPointer) : $Builtin.Word, scope 146 // user: %13
  %13 = builtin "sub_Word"(%10 : $Builtin.Word, %12 : $Builtin.Word) : $Builtin.Word, scope 146 // user: %14
  %14 = builtin "zextOrBitCast_Word_Int64"(%13 : $Builtin.Word) : $Builtin.Int64, scope 146 // users: %29, %22
  %15 = metatype $@thick UInt8.Type, scope 146    // user: %16
  %16 = builtin "strideof_nonzero"<UInt8>(%15 : $@thick UInt8.Type) : $Builtin.Word, scope 146 // user: %17
  %17 = builtin "zextOrBitCast_Word_Int64"(%16 : $Builtin.Word) : $Builtin.Int64, scope 146 // users: %29, %26, %19
  %18 = integer_literal $Builtin.Int64, 0, scope 146 // user: %19
  %19 = builtin "cmp_eq_Int64"(%17 : $Builtin.Int64, %18 : $Builtin.Int64) : $Builtin.Int1, scope 146 // user: %20
  cond_fail %19 : $Builtin.Int1, scope 146        // id: %20
  %21 = integer_literal $Builtin.Int64, -9223372036854775808, scope 146 // user: %22
  %22 = builtin "cmp_eq_Int64"(%14 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int1, scope 146 // user: %23
  cond_br %22, bb5, bb4, scope 146                // id: %23

bb4:                                              // Preds: bb3
  br bb6, scope 146                               // id: %24

bb5:                                              // Preds: bb3
  %25 = integer_literal $Builtin.Int64, -1, scope 146 // user: %26
  %26 = builtin "cmp_eq_Int64"(%17 : $Builtin.Int64, %25 : $Builtin.Int64) : $Builtin.Int1, scope 146 // user: %27
  cond_fail %26 : $Builtin.Int1, scope 146        // id: %27
  br bb6, scope 146                               // id: %28

bb6:                                              // Preds: bb5 bb4
  %29 = builtin "sdiv_Int64"(%14 : $Builtin.Int64, %17 : $Builtin.Int64) : $Builtin.Int64, scope 146 // user: %30
  br bb7(%29 : $Builtin.Int64), scope 146         // id: %30

// %31                                            // user: %32
bb7(%31 : $Builtin.Int64):                        // Preds: bb6 bb1
  %32 = struct $Int (%31 : $Builtin.Int64), scope 146 // user: %33
  return %32 : $Int, scope 146                    // id: %33

bb8:                                              // Preds: bb2
  br bb9, scope 146                               // id: %34

bb9:                                              // Preds: bb8
  %35 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 146 // user: %37
  %36 = integer_literal $Builtin.Word, 57, scope 146 // user: %39
  %37 = builtin "ptrtoint_Word"(%35 : $Builtin.RawPointer) : $Builtin.Word, scope 146 // user: %39
  %38 = integer_literal $Builtin.Int8, 2, scope 146 // users: %43, %39
  %39 = struct $StaticString (%37 : $Builtin.Word, %36 : $Builtin.Word, %38 : $Builtin.Int8), scope 146 // user: %47
  %40 = string_literal utf8 "fatal error", scope 146 // user: %42
  %41 = integer_literal $Builtin.Word, 11, scope 146 // user: %43
  %42 = builtin "ptrtoint_Word"(%40 : $Builtin.RawPointer) : $Builtin.Word, scope 146 // user: %43
  %43 = struct $StaticString (%42 : $Builtin.Word, %41 : $Builtin.Word, %38 : $Builtin.Int8), scope 146 // user: %47
  %44 = integer_literal $Builtin.Int32, 1, scope 146 // user: %45
  %45 = struct $UInt32 (%44 : $Builtin.Int32), scope 146 // user: %47
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %46 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 146 // user: %47
  %47 = apply %46(%43, %39, %45) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 146
  unreachable, scope 146                          // id: %48
}


// _swift_stdlib_reportUnimplementedInitializerInFile
sil @_swift_stdlib_reportUnimplementedInitializerInFile : $@convention(thin) (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UInt, UInt, UInt32) -> ()


// _swift_stdlib_reportUnimplementedInitializer
sil @_swift_stdlib_reportUnimplementedInitializer : $@convention(thin) (UnsafePointer<UInt8>, UInt, UnsafePointer<UInt8>, UInt, UInt32) -> ()


// UnsafeMutablePointer.withMemoryRebound<A, B> (to : A1.Type, capacity : Int, (UnsafeMutablePointer<A1>) throws -> B1) throws -> B1
sil [fragile] @_TFSp17withMemoryReboundu0_rfzT2toMqd__8capacitySiFzGSpqd___qd_0__qd_0_ : $@convention(method) <Pointee><T, Result> (@thick T.Type, Int, @owned @callee_owned (UnsafeMutablePointer<T>) -> (@out Result, @error Error), UnsafeMutablePointer<Pointee>) -> (@out Result, @error Error)

sil_scope 147 {  parent @_TFFVs33AutoreleasingUnsafeMutablePointers7pointeexU_FGSpGSqGVs9UnmanagedPs9AnyObject____T_ : $@convention(thin) (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned Optional<AnyObject>) -> () }

// AutoreleasingUnsafeMutablePointer.(pointee.setter).(closure #1)
sil shared_external [fragile] @_TFFVs33AutoreleasingUnsafeMutablePointers7pointeexU_FGSpGSqGVs9UnmanagedPs9AnyObject____T_ : $@convention(thin) (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned Optional<AnyObject>) -> () {
// %0                                             // users: %15, %6, %2
// %1                                             // users: %18, %4, %3
bb0(%0 : $UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, %1 : $Optional<AnyObject>):
  debug_value %0 : $UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, scope 147 // id: %2
  debug_value %1 : $Optional<AnyObject>, scope 147 // id: %3
  switch_enum %1 : $Optional<AnyObject>, case #Optional.some!enumelt.1: bb2, case #Optional.none!enumelt: bb1, scope 147 // id: %4

bb1:                                              // Preds: bb0
  %5 = enum $Optional<Unmanaged<AnyObject>>, #Optional.none!enumelt, scope 147 // user: %8
  %6 = struct_extract %0 : $UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, #UnsafeMutablePointer._rawValue, scope 147 // user: %7
  %7 = pointer_to_address %6 : $Builtin.RawPointer to [strict] $*Optional<Unmanaged<AnyObject>>, scope 147 // user: %8
  store %5 to %7 : $*Optional<Unmanaged<AnyObject>>, scope 147 // id: %8
  br bb3, scope 147                               // id: %9

// %10                                            // users: %12, %11
bb2(%10 : $AnyObject):                            // Preds: bb0
  debug_value %10 : $AnyObject, scope 147         // id: %11
  %12 = ref_to_unmanaged %10 : $AnyObject to $@sil_unmanaged AnyObject, scope 147 // user: %13
  %13 = struct $Unmanaged<AnyObject> (%12 : $@sil_unmanaged AnyObject), scope 147 // user: %14
  %14 = enum $Optional<Unmanaged<AnyObject>>, #Optional.some!enumelt.1, %13 : $Unmanaged<AnyObject>, scope 147 // user: %17
  %15 = struct_extract %0 : $UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, #UnsafeMutablePointer._rawValue, scope 147 // user: %16
  %16 = pointer_to_address %15 : $Builtin.RawPointer to [strict] $*Optional<Unmanaged<AnyObject>>, scope 147 // user: %17
  store %14 to %16 : $*Optional<Unmanaged<AnyObject>>, scope 147 // id: %17
  release_value %1 : $Optional<AnyObject>, scope 147 // id: %18
  br bb3, scope 147                               // id: %19

bb3:                                              // Preds: bb2 bb1
  %20 = tuple (), scope 147                       // user: %21
  return %20 : $(), scope 147                     // id: %21
}

sil_scope 148 {  parent @_TTRGrXFo_dGSpGSqGVs9UnmanagedPs9AnyObject_____zoPs5Error__XFo_dGSpGSqGS_PS0______iT_zoPS1___ : $@convention(thin) <τ_0_0> (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned @callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error) -> (@out (), @error Error) }

// thunk
sil shared_external [transparent] [fragile] [reabstraction_thunk] @_TTRGrXFo_dGSpGSqGVs9UnmanagedPs9AnyObject_____zoPs5Error__XFo_dGSpGSqGS_PS0______iT_zoPS1___ : $@convention(thin) <Pointee> (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, @owned @callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error) -> (@out (), @error Error) {
// %1                                             // user: %3
// %2                                             // user: %3
bb0(%0 : $*(), %1 : $UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>, %2 : $@callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error):
  try_apply %2(%1) : $@callee_owned (UnsafeMutablePointer<Optional<Unmanaged<AnyObject>>>) -> @error Error, normal bb2, error bb1, scope 148 // id: %3

// %4                                             // user: %5
bb1(%4 : $Error):                                 // Preds: bb0
  throw %4 : $Error, scope 148                    // id: %5

bb2(%6 : $()):                                    // Preds: bb0
  %7 = tuple (), scope 148                        // user: %8
  return %7 : $(), scope 148                      // id: %8
}

sil_scope 149 {  parent @_TFFSp17withMemoryReboundu0_rFzT2toMqd__8capacitySiFzGSpqd___qd_0__qd_0_L_6$deferu_0_rfT_T_ : $@convention(thin) <τ_0_0><τ_1_0, τ_1_1> (UnsafeMutablePointer<τ_0_0>, Int) -> () }

// UnsafeMutablePointer.(withMemoryRebound<A, B> (to : A1.Type, capacity : Int, (UnsafeMutablePointer<A1>) throws -> B1) throws -> B1).($defer #1)<A><A1, B1> () -> ()
sil shared_external [fragile] @_TFFSp17withMemoryReboundu0_rFzT2toMqd__8capacitySiFzGSpqd___qd_0__qd_0_L_6$deferu_0_rfT_T_ : $@convention(thin) <Pointee><T, Result> (UnsafeMutablePointer<Pointee>, Int) -> () {
// %0                                             // users: %4, %2
// %1                                             // users: %5, %3
bb0(%0 : $UnsafeMutablePointer<Pointee>, %1 : $Int):
  debug_value %0 : $UnsafeMutablePointer<Pointee>, scope 149 // id: %2
  debug_value %1 : $Int, scope 149                // id: %3
  %4 = struct_extract %0 : $UnsafeMutablePointer<Pointee>, #UnsafeMutablePointer._rawValue, scope 149 // user: %7
  %5 = struct_extract %1 : $Int, #Int._value, scope 149 // user: %6
  %6 = builtin "truncOrBitCast_Int64_Word"(%5 : $Builtin.Int64) : $Builtin.Word, scope 149 // user: %7
  bind_memory %4 : $Builtin.RawPointer, %6 : $Builtin.Word to $*Pointee, scope 149 // id: %7
  %8 = tuple (), scope 149                        // user: %9
  return %8 : $(), scope 149                      // id: %9
}

sil_scope 150 {  parent @_TTSfq4n_n_n_d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferCfTPMPs9AnyObject_xSi_GS_xq__ : $@convention(thin) (@thick AnyObject.Type, _StringBufferIVars, Int) -> @owned _HeapBuffer<_StringBufferIVars, UInt16> }

// specialized specialized _HeapBuffer.init(AnyObject.Type, A, Int) -> _HeapBuffer<A, B>
sil shared_external [fragile] @_TTSfq4n_n_n_d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferCfTPMPs9AnyObject_xSi_GS_xq__ : $@convention(thin) (@thick AnyObject.Type, _StringBufferIVars, Int) -> @owned _HeapBuffer<_StringBufferIVars, UInt16> {
// %0                                             // users: %28, %4
// %1                                             // users: %62, %3
// %2                                             // users: %11, %5
bb0(%0 : $@thick AnyObject.Type, %1 : $_StringBufferIVars, %2 : $Int):
  debug_value %1 : $_StringBufferIVars, scope 150 // id: %3
  debug_value %0 : $@thick AnyObject.Type, scope 150 // id: %4
  debug_value %2 : $Int, scope 150                // id: %5
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %6 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 150 // user: %7
  %7 = apply %6() : $@convention(thin) () -> Int, scope 150 // user: %17
  %8 = metatype $@thick UInt16.Type, scope 150    // user: %9
  %9 = builtin "strideof_nonzero"<UInt16>(%8 : $@thick UInt16.Type) : $Builtin.Word, scope 150 // user: %10
  %10 = builtin "zextOrBitCast_Word_Int64"(%9 : $Builtin.Word) : $Builtin.Int64, scope 150 // user: %13
  %11 = struct_extract %2 : $Int, #Int._value, scope 150 // user: %13
  %12 = integer_literal $Builtin.Int1, -1, scope 150 // users: %39, %18, %13
  %13 = builtin "smul_with_overflow_Int64"(%11 : $Builtin.Int64, %10 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 150 // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0, scope 150 // user: %18
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1, scope 150 // user: %16
  cond_fail %15 : $Builtin.Int1, scope 150        // id: %16
  %17 = struct_extract %7 : $Int, #Int._value, scope 150 // user: %18
  %18 = builtin "sadd_with_overflow_Int64"(%17 : $Builtin.Int64, %14 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 150 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 150 // user: %22
  %20 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 1, scope 150 // user: %21
  cond_fail %20 : $Builtin.Int1, scope 150        // id: %21
  %22 = struct $Int (%19 : $Builtin.Int64), scope 150 // users: %28, %23
  debug_value %22 : $Int, scope 150               // id: %23
  // function_ref specialized specialized static _HeapBuffer._requiredAlignMask() -> Int
  %24 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer18_requiredAlignMaskfT_Si : $@convention(thin) () -> Int, scope 150 // user: %25
  %25 = apply %24() : $@convention(thin) () -> Int, scope 150 // users: %28, %26
  debug_value %25 : $Int, scope 150               // id: %26
  // function_ref swift_bufferAllocate
  %27 = function_ref @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 150 // user: %28
  %28 = apply %27(%0, %22, %25) : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject, scope 150 // users: %30, %29
  debug_value %28 : $AnyObject, scope 150         // id: %29
  %30 = open_existential_ref %28 : $AnyObject to $@opened("5481CC42-6A87-11E6-8285-000C2982EF49") AnyObject, scope 150 // users: %56, %31
  %31 = unchecked_ref_cast %30 : $@opened("5481CC42-6A87-11E6-8285-000C2982EF49") AnyObject to $Builtin.NativeObject, scope 150 // user: %32
  %32 = enum $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, %31 : $Builtin.NativeObject, scope 150 // user: %63
  %33 = metatype $@thick HeapObject.Type, scope 150 // user: %34
  %34 = builtin "sizeof"<HeapObject>(%33 : $@thick HeapObject.Type) : $Builtin.Word, scope 150 // user: %35
  %35 = builtin "zextOrBitCast_Word_Int64"(%34 : $Builtin.Word) : $Builtin.Int64, scope 150 // user: %39
  %36 = metatype $@thick _StringBufferIVars.Type, scope 150 // user: %37
  %37 = builtin "alignof"<_StringBufferIVars>(%36 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 150 // user: %38
  %38 = builtin "zextOrBitCast_Word_Int64"(%37 : $Builtin.Word) : $Builtin.Int64, scope 150 // users: %47, %39
  %39 = builtin "uadd_with_overflow_Int64"(%35 : $Builtin.Int64, %38 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 150 // users: %41, %40
  %40 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 0, scope 150 // user: %45
  %41 = tuple_extract %39 : $(Builtin.Int64, Builtin.Int1), 1, scope 150 // user: %42
  cond_fail %41 : $Builtin.Int1, scope 150        // id: %42
  %43 = integer_literal $Builtin.Int64, 1, scope 150 // users: %60, %47, %45
  %44 = integer_literal $Builtin.Int1, 0, scope 150 // users: %47, %45
  %45 = builtin "usub_with_overflow_Int64"(%40 : $Builtin.Int64, %43 : $Builtin.Int64, %44 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 150 // user: %46
  %46 = tuple_extract %45 : $(Builtin.Int64, Builtin.Int1), 0, scope 150 // user: %51
  %47 = builtin "usub_with_overflow_Int64"(%38 : $Builtin.Int64, %43 : $Builtin.Int64, %44 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 150 // user: %48
  %48 = tuple_extract %47 : $(Builtin.Int64, Builtin.Int1), 0, scope 150 // user: %50
  %49 = integer_literal $Builtin.Int64, -1, scope 150 // user: %50
  %50 = builtin "xor_Int64"(%48 : $Builtin.Int64, %49 : $Builtin.Int64) : $Builtin.Int64, scope 150 // user: %51
  %51 = builtin "and_Int64"(%46 : $Builtin.Int64, %50 : $Builtin.Int64) : $Builtin.Int64, scope 150 // user: %52
  %52 = builtin "u_to_s_checked_conversion_Int64"(%51 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 150 // users: %54, %53
  %53 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 0, scope 150 // user: %57
  %54 = tuple_extract %52 : $(Builtin.Int64, Builtin.Int1), 1, scope 150 // user: %55
  cond_fail %54 : $Builtin.Int1, scope 150        // id: %55
  %56 = ref_to_raw_pointer %30 : $@opened("5481CC42-6A87-11E6-8285-000C2982EF49") AnyObject to $Builtin.RawPointer, scope 150 // user: %58
  %57 = builtin "truncOrBitCast_Int64_Word"(%53 : $Builtin.Int64) : $Builtin.Word, scope 150 // user: %58
  %58 = index_raw_pointer %56 : $Builtin.RawPointer, %57 : $Builtin.Word, scope 150 // user: %59
  %59 = struct $UnsafeMutablePointer<_StringBufferIVars> (%58 : $Builtin.RawPointer), scope 150 // user: %62
  %60 = struct $Int (%43 : $Builtin.Int64), scope 150 // user: %62
  // function_ref specialized UnsafeMutablePointer.initialize(to : A, count : Int) -> ()
  %61 = function_ref @_TTSgq5Vs18_StringBufferIVars___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (_StringBufferIVars, Int, UnsafeMutablePointer<_StringBufferIVars>) -> (), scope 150 // user: %62
  %62 = apply %61(%1, %60, %59) : $@convention(method) (_StringBufferIVars, Int, UnsafeMutablePointer<_StringBufferIVars>) -> (), scope 150
  %63 = struct $_HeapBuffer<_StringBufferIVars, UInt16> (%32 : $Optional<Builtin.NativeObject>), scope 150 // user: %64
  return %63 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 150 // id: %64
}

sil_scope 151 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferau5valuex : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars> }

// specialized _HeapBuffer.value.unsafeMutableAddressor
sil shared_external [fragile] @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferau5valuex : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafeMutablePointer<_StringBufferIVars> {
// %0                                             // users: %28, %27, %26, %2, %1
bb0(%0 : $_HeapBuffer<_StringBufferIVars, UInt16>):
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 151 // id: %1
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 151 // id: %2
  %3 = metatype $@thick HeapObject.Type, scope 151 // user: %4
  %4 = builtin "sizeof"<HeapObject>(%3 : $@thick HeapObject.Type) : $Builtin.Word, scope 151 // user: %5
  %5 = builtin "zextOrBitCast_Word_Int64"(%4 : $Builtin.Word) : $Builtin.Int64, scope 151 // user: %10
  %6 = metatype $@thick _StringBufferIVars.Type, scope 151 // user: %7
  %7 = builtin "alignof"<_StringBufferIVars>(%6 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 151 // user: %8
  %8 = builtin "zextOrBitCast_Word_Int64"(%7 : $Builtin.Word) : $Builtin.Int64, scope 151 // users: %18, %10
  %9 = integer_literal $Builtin.Int1, -1, scope 151 // user: %10
  %10 = builtin "uadd_with_overflow_Int64"(%5 : $Builtin.Int64, %8 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 151 // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0, scope 151 // user: %16
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1, scope 151 // user: %13
  cond_fail %12 : $Builtin.Int1, scope 151        // id: %13
  %14 = integer_literal $Builtin.Int64, 1, scope 151 // users: %18, %16
  %15 = integer_literal $Builtin.Int1, 0, scope 151 // users: %18, %16
  %16 = builtin "usub_with_overflow_Int64"(%11 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 151 // user: %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 151 // user: %22
  %18 = builtin "usub_with_overflow_Int64"(%8 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 151 // user: %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 151 // user: %21
  %20 = integer_literal $Builtin.Int64, -1, scope 151 // user: %21
  %21 = builtin "xor_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 151 // user: %22
  %22 = builtin "and_Int64"(%17 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int64, scope 151 // user: %23
  %23 = builtin "u_to_s_checked_conversion_Int64"(%22 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 151 // users: %30, %24
  %24 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 1, scope 151 // user: %25
  cond_fail %24 : $Builtin.Int1, scope 151        // id: %25
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 151 // id: %26
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 151 // id: %27
  %28 = struct_extract %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 151 // users: %31, %29
  switch_enum %28 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb2, case #Optional.some!enumelt.1: bb1, scope 151 // id: %29

bb1:                                              // Preds: bb0
  %30 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 0, scope 151 // user: %33
  %31 = unchecked_enum_data %28 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 151 // user: %32
  %32 = ref_to_raw_pointer %31 : $Builtin.NativeObject to $Builtin.RawPointer, scope 151 // user: %34
  %33 = builtin "truncOrBitCast_Int64_Word"(%30 : $Builtin.Int64) : $Builtin.Word, scope 151 // user: %34
  %34 = index_raw_pointer %32 : $Builtin.RawPointer, %33 : $Builtin.Word, scope 151 // user: %35
  %35 = struct $UnsafeMutablePointer<_StringBufferIVars> (%34 : $Builtin.RawPointer), scope 151 // user: %36
  return %35 : $UnsafeMutablePointer<_StringBufferIVars>, scope 151 // id: %36

bb2:                                              // Preds: bb0
  br bb3, scope 151                               // id: %37

bb3:                                              // Preds: bb2
  %38 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 151 // user: %40
  %39 = integer_literal $Builtin.Word, 57, scope 151 // user: %42
  %40 = builtin "ptrtoint_Word"(%38 : $Builtin.RawPointer) : $Builtin.Word, scope 151 // user: %42
  %41 = integer_literal $Builtin.Int8, 2, scope 151 // users: %46, %42
  %42 = struct $StaticString (%40 : $Builtin.Word, %39 : $Builtin.Word, %41 : $Builtin.Int8), scope 151 // user: %50
  %43 = string_literal utf8 "fatal error", scope 151 // user: %45
  %44 = integer_literal $Builtin.Word, 11, scope 151 // user: %46
  %45 = builtin "ptrtoint_Word"(%43 : $Builtin.RawPointer) : $Builtin.Word, scope 151 // user: %46
  %46 = struct $StaticString (%45 : $Builtin.Word, %44 : $Builtin.Word, %41 : $Builtin.Int8), scope 151 // user: %50
  %47 = integer_literal $Builtin.Int32, 1, scope 151 // user: %48
  %48 = struct $UInt32 (%47 : $Builtin.Int32), scope 151 // user: %50
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %49 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 151 // user: %50
  %50 = apply %49(%46, %42, %48) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 151
  unreachable, scope 151                          // id: %51
}

sil_scope 152 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBuffer9_capacityfT_Si : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> Int }

// specialized _HeapBuffer._capacity() -> Int
sil shared_external [fragile] @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBuffer9_capacityfT_Si : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> Int {
// %0                                             // users: %5, %4, %3, %2, %1
bb0(%0 : $_HeapBuffer<_StringBufferIVars, UInt16>):
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 152 // id: %1
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 152 // id: %2
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 152 // id: %3
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 152 // id: %4
  %5 = struct_extract %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 152 // users: %8, %6
  switch_enum %5 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb5, case #Optional.some!enumelt.1: bb1, scope 152 // id: %6

bb1:                                              // Preds: bb0
  // function_ref _swift_stdlib_malloc_size
  %7 = function_ref @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 152 // user: %12
  %8 = unchecked_enum_data %5 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 152 // user: %9
  %9 = ref_to_raw_pointer %8 : $Builtin.NativeObject to $Builtin.RawPointer, scope 152 // user: %10
  %10 = struct $UnsafeRawPointer (%9 : $Builtin.RawPointer), scope 152 // user: %11
  %11 = enum $ImplicitlyUnwrappedOptional<UnsafeRawPointer>, #ImplicitlyUnwrappedOptional.some!enumelt.1, %10 : $UnsafeRawPointer, scope 152 // user: %12
  %12 = apply %7(%11) : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int, scope 152 // user: %15
  // function_ref specialized specialized static _HeapBuffer._elementOffset() -> Int
  %13 = function_ref @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer14_elementOffsetfT_Si : $@convention(thin) () -> Int, scope 152 // user: %14
  %14 = apply %13() : $@convention(thin) () -> Int, scope 152 // user: %16
  %15 = struct_extract %12 : $Int, #Int._value, scope 152 // user: %18
  %16 = struct_extract %14 : $Int, #Int._value, scope 152 // user: %18
  %17 = integer_literal $Builtin.Int1, -1, scope 152 // user: %18
  %18 = builtin "ssub_with_overflow_Int64"(%15 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 152 // users: %20, %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 152 // users: %36, %29
  %20 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 1, scope 152 // user: %21
  cond_fail %20 : $Builtin.Int1, scope 152        // id: %21
  %22 = metatype $@thick UInt16.Type, scope 152   // user: %23
  %23 = builtin "strideof_nonzero"<UInt16>(%22 : $@thick UInt16.Type) : $Builtin.Word, scope 152 // user: %24
  %24 = builtin "zextOrBitCast_Word_Int64"(%23 : $Builtin.Word) : $Builtin.Int64, scope 152 // users: %36, %33, %26
  %25 = integer_literal $Builtin.Int64, 0, scope 152 // user: %26
  %26 = builtin "cmp_eq_Int64"(%24 : $Builtin.Int64, %25 : $Builtin.Int64) : $Builtin.Int1, scope 152 // user: %27
  cond_fail %26 : $Builtin.Int1, scope 152        // id: %27
  %28 = integer_literal $Builtin.Int64, -9223372036854775808, scope 152 // user: %29
  %29 = builtin "cmp_eq_Int64"(%19 : $Builtin.Int64, %28 : $Builtin.Int64) : $Builtin.Int1, scope 152 // user: %30
  cond_br %29, bb3, bb2, scope 152                // id: %30

bb2:                                              // Preds: bb1
  br bb4, scope 152                               // id: %31

bb3:                                              // Preds: bb1
  %32 = integer_literal $Builtin.Int64, -1, scope 152 // user: %33
  %33 = builtin "cmp_eq_Int64"(%24 : $Builtin.Int64, %32 : $Builtin.Int64) : $Builtin.Int1, scope 152 // user: %34
  cond_fail %33 : $Builtin.Int1, scope 152        // id: %34
  br bb4, scope 152                               // id: %35

bb4:                                              // Preds: bb3 bb2
  %36 = builtin "sdiv_Int64"(%19 : $Builtin.Int64, %24 : $Builtin.Int64) : $Builtin.Int64, scope 152 // user: %37
  %37 = struct $Int (%36 : $Builtin.Int64), scope 152 // user: %38
  return %37 : $Int, scope 152                    // id: %38

bb5:                                              // Preds: bb0
  br bb6, scope 152                               // id: %39

bb6:                                              // Preds: bb5
  %40 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 152 // user: %42
  %41 = integer_literal $Builtin.Word, 57, scope 152 // user: %44
  %42 = builtin "ptrtoint_Word"(%40 : $Builtin.RawPointer) : $Builtin.Word, scope 152 // user: %44
  %43 = integer_literal $Builtin.Int8, 2, scope 152 // users: %48, %44
  %44 = struct $StaticString (%42 : $Builtin.Word, %41 : $Builtin.Word, %43 : $Builtin.Int8), scope 152 // user: %52
  %45 = string_literal utf8 "fatal error", scope 152 // user: %47
  %46 = integer_literal $Builtin.Word, 11, scope 152 // user: %48
  %47 = builtin "ptrtoint_Word"(%45 : $Builtin.RawPointer) : $Builtin.Word, scope 152 // user: %48
  %48 = struct $StaticString (%47 : $Builtin.Word, %46 : $Builtin.Word, %43 : $Builtin.Int8), scope 152 // user: %52
  %49 = integer_literal $Builtin.Int32, 1, scope 152 // user: %50
  %50 = struct $UInt32 (%49 : $Builtin.Int32), scope 152 // user: %52
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %51 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 152 // user: %52
  %52 = apply %51(%48, %44, %50) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 152
  unreachable, scope 152                          // id: %53
}


// _HeapBufferStorage.init() -> _HeapBufferStorage<A, B>
sil [fragile] @_TFCs18_HeapBufferStoragecfT_GS_xq__ : $@convention(method) <Value, Element> (@owned _HeapBufferStorage<Value, Element>) -> @owned _HeapBufferStorage<Value, Element>


// _HeapBufferStorage.__deallocating_deinit
sil [fragile] @_TFCs18_HeapBufferStorageD : $@convention(method) <Value, Element> (@owned _HeapBufferStorage<Value, Element>) -> ()


// _HeapBufferStorage.deinit
sil [fragile] @_TFCs18_HeapBufferStoraged : $@convention(method) <Value, Element> (@guaranteed _HeapBufferStorage<Value, Element>) -> @owned Builtin.NativeObject

sil_scope 153 {  parent @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer18_requiredAlignMaskfT_Si : $@convention(thin) () -> Int }

// specialized specialized static _HeapBuffer._requiredAlignMask() -> Int
sil shared_external [fragile] @_TTSfq4d___TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TZFVs11_HeapBuffer18_requiredAlignMaskfT_Si : $@convention(thin) () -> Int {
bb0:
  %0 = metatype $@thick HeapObject.Type, scope 153 // user: %1
  %1 = builtin "alignof"<HeapObject>(%0 : $@thick HeapObject.Type) : $Builtin.Word, scope 153 // user: %2
  %2 = builtin "zextOrBitCast_Word_Int64"(%1 : $Builtin.Word) : $Builtin.Int64, scope 153 // user: %5
  %3 = integer_literal $Builtin.Int64, 1, scope 153 // users: %19, %12, %5
  %4 = integer_literal $Builtin.Int1, 0, scope 153 // users: %19, %12, %5
  %5 = builtin "ssub_with_overflow_Int64"(%2 : $Builtin.Int64, %3 : $Builtin.Int64, %4 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 153 // user: %6
  %6 = tuple_extract %5 : $(Builtin.Int64, Builtin.Int1), 0, scope 153 // users: %25, %23, %7
  %7 = struct $Int (%6 : $Builtin.Int64), scope 153 // users: %27, %8
  debug_value %7 : $Int, scope 153                // id: %8
  %9 = metatype $@thick _StringBufferIVars.Type, scope 153 // user: %10
  %10 = builtin "alignof"<_StringBufferIVars>(%9 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 153 // user: %11
  %11 = builtin "zextOrBitCast_Word_Int64"(%10 : $Builtin.Word) : $Builtin.Int64, scope 153 // user: %12
  %12 = builtin "ssub_with_overflow_Int64"(%11 : $Builtin.Int64, %3 : $Builtin.Int64, %4 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 153 // user: %13
  %13 = tuple_extract %12 : $(Builtin.Int64, Builtin.Int1), 0, scope 153 // users: %29, %23, %14
  %14 = struct $Int (%13 : $Builtin.Int64), scope 153 // users: %31, %15
  debug_value %14 : $Int, scope 153               // id: %15
  %16 = metatype $@thick UInt16.Type, scope 153   // user: %17
  %17 = builtin "alignof"<UInt16>(%16 : $@thick UInt16.Type) : $Builtin.Word, scope 153 // user: %18
  %18 = builtin "zextOrBitCast_Word_Int64"(%17 : $Builtin.Word) : $Builtin.Int64, scope 153 // user: %19
  %19 = builtin "ssub_with_overflow_Int64"(%18 : $Builtin.Int64, %3 : $Builtin.Int64, %4 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 153 // user: %20
  %20 = tuple_extract %19 : $(Builtin.Int64, Builtin.Int1), 0, scope 153 // users: %29, %25, %21
  %21 = struct $Int (%20 : $Builtin.Int64), scope 153 // users: %32, %28, %22
  debug_value %21 : $Int, scope 153               // id: %22
  %23 = builtin "cmp_slt_Int64"(%6 : $Builtin.Int64, %13 : $Builtin.Int64) : $Builtin.Int1, scope 153 // user: %24
  cond_br %23, bb4, bb1, scope 153                // id: %24

bb1:                                              // Preds: bb0
  %25 = builtin "cmp_slt_Int64"(%6 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1, scope 153 // user: %26
  cond_br %25, bb3, bb2, scope 153                // id: %26

bb2:                                              // Preds: bb1
  br bb7(%7 : $Int), scope 153                    // id: %27

bb3:                                              // Preds: bb1
  br bb7(%21 : $Int), scope 153                   // id: %28

bb4:                                              // Preds: bb0
  %29 = builtin "cmp_slt_Int64"(%13 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int1, scope 153 // user: %30
  cond_br %29, bb6, bb5, scope 153                // id: %30

bb5:                                              // Preds: bb4
  br bb7(%14 : $Int), scope 153                   // id: %31

bb6:                                              // Preds: bb4
  br bb7(%21 : $Int), scope 153                   // id: %32

// %33                                            // user: %34
bb7(%33 : $Int):                                  // Preds: bb6 bb5 bb3 bb2
  return %33 : $Int, scope 153                    // id: %34
}


// swift_bufferAllocate
sil hidden_external [fragile] @swift_bufferAllocate : $@convention(thin) (@thick AnyObject.Type, Int, Int) -> @owned AnyObject

sil_scope 154 {  parent @_TTSgq5Vs18_StringBufferIVars___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (_StringBufferIVars, Int, UnsafeMutablePointer<_StringBufferIVars>) -> () }

// specialized UnsafeMutablePointer.initialize(to : A, count : Int) -> ()
sil shared_external [fragile] @_TTSgq5Vs18_StringBufferIVars___TFSp10initializefT2tox5countSi_T_ : $@convention(method) (_StringBufferIVars, Int, UnsafeMutablePointer<_StringBufferIVars>) -> () {
// %0                                             // users: %118, %3
// %1                                             // users: %44, %9, %4
// %2                                             // users: %113, %5
bb0(%0 : $_StringBufferIVars, %1 : $Int, %2 : $UnsafeMutablePointer<_StringBufferIVars>):
  debug_value %0 : $_StringBufferIVars, scope 154 // id: %3
  debug_value %1 : $Int, scope 154                // id: %4
  debug_value %2 : $UnsafeMutablePointer<_StringBufferIVars>, scope 154 // id: %5
  %6 = integer_literal $Builtin.Int8, 2, scope 154 // users: %86, %72, %58, %37, %30, %21, %17
  br bb1, scope 154                               // id: %7

bb1:                                              // Preds: bb0
  %8 = integer_literal $Builtin.Int64, 0, scope 154 // users: %31, %10
  %9 = struct_extract %1 : $Int, #Int._value, scope 154 // users: %31, %10
  %10 = builtin "cmp_sge_Int64"(%9 : $Builtin.Int64, %8 : $Builtin.Int64) : $Builtin.Int1, scope 154 // user: %12
  %11 = integer_literal $Builtin.Int1, -1, scope 154 // users: %32, %12
  %12 = builtin "int_expect_Int1"(%10 : $Builtin.Int1, %11 : $Builtin.Int1) : $Builtin.Int1, scope 154 // user: %13
  cond_br %12, bb3, bb2, scope 154                // id: %13

bb2:                                              // Preds: bb1
  %14 = string_literal utf8 "UnsafeMutablePointer.initialize(to:): negative count", scope 154 // user: %16
  %15 = integer_literal $Builtin.Word, 52, scope 154 // user: %17
  %16 = builtin "ptrtoint_Word"(%14 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %17
  %17 = struct $StaticString (%16 : $Builtin.Word, %15 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // user: %25
  %18 = string_literal utf8 "fatal error", scope 154 // user: %20
  %19 = integer_literal $Builtin.Word, 11, scope 154 // user: %21
  %20 = builtin "ptrtoint_Word"(%18 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %21
  %21 = struct $StaticString (%20 : $Builtin.Word, %19 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // user: %25
  %22 = integer_literal $Builtin.Int32, 1, scope 154 // user: %23
  %23 = struct $UInt32 (%22 : $Builtin.Int32), scope 154 // user: %25
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %24 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154 // user: %25
  %25 = apply %24(%21, %17, %23) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154
  unreachable, scope 154                          // id: %26

bb3:                                              // Preds: bb1
  %27 = string_literal utf8 "Can't form Range with upperBound < lowerBound", scope 154 // user: %29
  %28 = integer_literal $Builtin.Word, 45, scope 154 // user: %30
  %29 = builtin "ptrtoint_Word"(%27 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %30
  %30 = struct $StaticString (%29 : $Builtin.Word, %28 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // users: %90, %41
  %31 = builtin "cmp_sle_Int64"(%8 : $Builtin.Int64, %9 : $Builtin.Int64) : $Builtin.Int1, scope 154 // user: %32
  %32 = builtin "int_expect_Int1"(%31 : $Builtin.Int1, %11 : $Builtin.Int1) : $Builtin.Int1, scope 154 // user: %33
  cond_br %32, bb5, bb4, scope 154                // id: %33

bb4:                                              // Preds: bb3
  %34 = string_literal utf8 "fatal error", scope 154 // user: %36
  %35 = integer_literal $Builtin.Word, 11, scope 154 // user: %37
  %36 = builtin "ptrtoint_Word"(%34 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %37
  %37 = struct $StaticString (%36 : $Builtin.Word, %35 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // user: %41
  %38 = integer_literal $Builtin.Int32, 1, scope 154 // user: %39
  %39 = struct $UInt32 (%38 : $Builtin.Int32), scope 154 // user: %41
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %40 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154 // user: %41
  %41 = apply %40(%37, %30, %39) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154
  unreachable, scope 154                          // id: %42

bb5:                                              // Preds: bb3
  br bb6, scope 154                               // id: %43

bb6:                                              // Preds: bb5
  %44 = struct_extract %1 : $Int, #Int._value, scope 154 // users: %80, %64, %49
  %45 = integer_literal $Builtin.Int64, 0, scope 154 // users: %80, %61, %46
  br bb7(%45 : $Builtin.Int64), scope 154         // id: %46

// %47                                            // users: %104, %95, %64, %61, %51, %49
bb7(%47 : $Builtin.Int64):                        // Preds: bb21 bb6
  %48 = alloc_stack $Optional<Int>, scope 154     // users: %107, %106, %103, %100, %52
  %49 = builtin "cmp_eq_Int64"(%47 : $Builtin.Int64, %44 : $Builtin.Int64) : $Builtin.Int1, scope 154 // user: %50
  cond_br %49, bb18, bb8, scope 154               // id: %50

bb8:                                              // Preds: bb7
  %51 = struct $Int (%47 : $Builtin.Int64), scope 154 // users: %79, %78, %60, %59, %53
  %52 = init_enum_data_addr %48 : $*Optional<Int>, #Optional.some!enumelt.1, scope 154 // user: %78
  debug_value %51 : $Int, scope 154               // id: %53
  br bb9, scope 154                               // id: %54

bb9:                                              // Preds: bb8
  %55 = string_literal utf8 "Index out of range", scope 154 // user: %57
  %56 = integer_literal $Builtin.Word, 18, scope 154 // user: %58
  %57 = builtin "ptrtoint_Word"(%55 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %58
  %58 = struct $StaticString (%57 : $Builtin.Word, %56 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // user: %76
  debug_value %51 : $Int, scope 154               // id: %59
  debug_value %51 : $Int, scope 154               // id: %60
  %61 = builtin "cmp_sle_Int64"(%45 : $Builtin.Int64, %47 : $Builtin.Int64) : $Builtin.Int1, scope 154 // user: %62
  cond_br %61, bb11, bb10, scope 154              // id: %62

bb10:                                             // Preds: bb9
  br bb13, scope 154                              // id: %63

bb11:                                             // Preds: bb9
  %64 = builtin "cmp_slt_Int64"(%47 : $Builtin.Int64, %44 : $Builtin.Int64) : $Builtin.Int1, scope 154 // user: %66
  %65 = integer_literal $Builtin.Int1, -1, scope 154 // users: %81, %66
  %66 = builtin "int_expect_Int1"(%64 : $Builtin.Int1, %65 : $Builtin.Int1) : $Builtin.Int1, scope 154 // user: %67
  cond_br %66, bb14, bb12, scope 154              // id: %67

bb12:                                             // Preds: bb11
  br bb13, scope 154                              // id: %68

bb13:                                             // Preds: bb12 bb10
  %69 = string_literal utf8 "fatal error", scope 154 // user: %71
  %70 = integer_literal $Builtin.Word, 11, scope 154 // user: %72
  %71 = builtin "ptrtoint_Word"(%69 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %72
  %72 = struct $StaticString (%71 : $Builtin.Word, %70 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // user: %76
  %73 = integer_literal $Builtin.Int32, 1, scope 154 // user: %74
  %74 = struct $UInt32 (%73 : $Builtin.Int32), scope 154 // user: %76
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %75 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154 // user: %76
  %76 = apply %75(%72, %58, %74) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154
  unreachable, scope 154                          // id: %77

bb14:                                             // Preds: bb11
  store %51 to %52 : $*Int, scope 154             // id: %78
  debug_value %51 : $Int, scope 154               // id: %79
  %80 = builtin "cmp_sle_Int64"(%45 : $Builtin.Int64, %44 : $Builtin.Int64) : $Builtin.Int1, scope 154 // user: %81
  %81 = builtin "int_expect_Int1"(%80 : $Builtin.Int1, %65 : $Builtin.Int1) : $Builtin.Int1, scope 154 // user: %82
  cond_br %81, bb16, bb15, scope 154              // id: %82

bb15:                                             // Preds: bb14
  %83 = string_literal utf8 "fatal error", scope 154 // user: %85
  %84 = integer_literal $Builtin.Word, 11, scope 154 // user: %86
  %85 = builtin "ptrtoint_Word"(%83 : $Builtin.RawPointer) : $Builtin.Word, scope 154 // user: %86
  %86 = struct $StaticString (%85 : $Builtin.Word, %84 : $Builtin.Word, %6 : $Builtin.Int8), scope 154 // user: %90
  %87 = integer_literal $Builtin.Int32, 1, scope 154 // user: %88
  %88 = struct $UInt32 (%87 : $Builtin.Int32), scope 154 // user: %90
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %89 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154 // user: %90
  %90 = apply %89(%86, %30, %88) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 154
  unreachable, scope 154                          // id: %91

bb16:                                             // Preds: bb14
  br bb17, scope 154                              // id: %92

bb17:                                             // Preds: bb16
  %93 = integer_literal $Builtin.Int64, 1, scope 154 // user: %95
  %94 = integer_literal $Builtin.Int1, -1, scope 154 // user: %95
  %95 = builtin "sadd_with_overflow_Int64"(%47 : $Builtin.Int64, %93 : $Builtin.Int64, %94 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 154 // users: %97, %96
  %96 = tuple_extract %95 : $(Builtin.Int64, Builtin.Int1), 0, scope 154 // users: %101, %99
  %97 = tuple_extract %95 : $(Builtin.Int64, Builtin.Int1), 1, scope 154 // user: %98
  cond_fail %97 : $Builtin.Int1, scope 154        // id: %98
  debug_value %96 : $Builtin.Int64, scope 154     // id: %99
  inject_enum_addr %48 : $*Optional<Int>, #Optional.some!enumelt.1, scope 154 // id: %100
  br bb19(%96 : $Builtin.Int64), scope 154        // id: %101

bb18:                                             // Preds: bb7
  %102 = enum $Optional<Int>, #Optional.none!enumelt, scope 154 // user: %103
  store %102 to %48 : $*Optional<Int>, scope 154  // id: %103
  br bb19(%47 : $Builtin.Int64), scope 154        // id: %104

// %105                                           // user: %119
bb19(%105 : $Builtin.Int64):                      // Preds: bb18 bb17
  %106 = load %48 : $*Optional<Int>, scope 154    // users: %111, %108
  dealloc_stack %48 : $*Optional<Int>, scope 154  // id: %107
  switch_enum %106 : $Optional<Int>, case #Optional.some!enumelt.1: bb21, case #Optional.none!enumelt: bb20, scope 154 // id: %108

bb20:                                             // Preds: bb19
  %109 = tuple (), scope 154                      // user: %110
  return %109 : $(), scope 154                    // id: %110

bb21:                                             // Preds: bb19
  %111 = unchecked_enum_data %106 : $Optional<Int>, #Optional.some!enumelt.1, scope 154 // users: %114, %112
  debug_value %111 : $Int, scope 154              // id: %112
  %113 = struct_extract %2 : $UnsafeMutablePointer<_StringBufferIVars>, #UnsafeMutablePointer._rawValue, scope 154 // user: %115
  %114 = struct_extract %111 : $Int, #Int._value, scope 154 // user: %116
  %115 = pointer_to_address %113 : $Builtin.RawPointer to [strict] $*_StringBufferIVars, scope 154 // user: %117
  %116 = builtin "truncOrBitCast_Int64_Word"(%114 : $Builtin.Int64) : $Builtin.Word, scope 154 // user: %117
  %117 = index_addr %115 : $*_StringBufferIVars, %116 : $Builtin.Word, scope 154 // user: %118
  store %0 to %117 : $*_StringBufferIVars, scope 154 // id: %118
  br bb7(%105 : $Builtin.Int64), scope 154        // id: %119
}


// _swift_stdlib_malloc_size
sil [readnone] [clang _swift_stdlib_malloc_size] @_swift_stdlib_malloc_size : $@convention(c) (ImplicitlyUnwrappedOptional<UnsafeRawPointer>) -> Int


// _StringBuffer.usedCount.getter
sil hidden_external [fragile] @_TFVs13_StringBufferg9usedCountSi : $@convention(method) (@guaranteed _StringBuffer) -> Int

sil_scope 155 {  parent @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferlu5valuex : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafePointer<_StringBufferIVars> }

// specialized _HeapBuffer.value.unsafeAddressor
sil shared_external [fragile] @_TTSgq5Vs18_StringBufferIVars_Vs6UInt16___TFVs11_HeapBufferlu5valuex : $@convention(method) (@guaranteed _HeapBuffer<_StringBufferIVars, UInt16>) -> UnsafePointer<_StringBufferIVars> {
// %0                                             // users: %28, %27, %26, %2, %1
bb0(%0 : $_HeapBuffer<_StringBufferIVars, UInt16>):
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 155 // id: %1
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 155 // id: %2
  %3 = metatype $@thick HeapObject.Type, scope 155 // user: %4
  %4 = builtin "sizeof"<HeapObject>(%3 : $@thick HeapObject.Type) : $Builtin.Word, scope 155 // user: %5
  %5 = builtin "zextOrBitCast_Word_Int64"(%4 : $Builtin.Word) : $Builtin.Int64, scope 155 // user: %10
  %6 = metatype $@thick _StringBufferIVars.Type, scope 155 // user: %7
  %7 = builtin "alignof"<_StringBufferIVars>(%6 : $@thick _StringBufferIVars.Type) : $Builtin.Word, scope 155 // user: %8
  %8 = builtin "zextOrBitCast_Word_Int64"(%7 : $Builtin.Word) : $Builtin.Int64, scope 155 // users: %18, %10
  %9 = integer_literal $Builtin.Int1, -1, scope 155 // user: %10
  %10 = builtin "uadd_with_overflow_Int64"(%5 : $Builtin.Int64, %8 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 155 // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0, scope 155 // user: %16
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1, scope 155 // user: %13
  cond_fail %12 : $Builtin.Int1, scope 155        // id: %13
  %14 = integer_literal $Builtin.Int64, 1, scope 155 // users: %18, %16
  %15 = integer_literal $Builtin.Int1, 0, scope 155 // users: %18, %16
  %16 = builtin "usub_with_overflow_Int64"(%11 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 155 // user: %17
  %17 = tuple_extract %16 : $(Builtin.Int64, Builtin.Int1), 0, scope 155 // user: %22
  %18 = builtin "usub_with_overflow_Int64"(%8 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1), scope 155 // user: %19
  %19 = tuple_extract %18 : $(Builtin.Int64, Builtin.Int1), 0, scope 155 // user: %21
  %20 = integer_literal $Builtin.Int64, -1, scope 155 // user: %21
  %21 = builtin "xor_Int64"(%19 : $Builtin.Int64, %20 : $Builtin.Int64) : $Builtin.Int64, scope 155 // user: %22
  %22 = builtin "and_Int64"(%17 : $Builtin.Int64, %21 : $Builtin.Int64) : $Builtin.Int64, scope 155 // user: %23
  %23 = builtin "u_to_s_checked_conversion_Int64"(%22 : $Builtin.Int64) : $(Builtin.Int64, Builtin.Int1), scope 155 // users: %30, %24
  %24 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 1, scope 155 // user: %25
  cond_fail %24 : $Builtin.Int1, scope 155        // id: %25
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 155 // id: %26
  debug_value %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, scope 155 // id: %27
  %28 = struct_extract %0 : $_HeapBuffer<_StringBufferIVars, UInt16>, #_HeapBuffer._storage, scope 155 // users: %31, %29
  switch_enum %28 : $Optional<Builtin.NativeObject>, case #Optional.none!enumelt: bb2, case #Optional.some!enumelt.1: bb1, scope 155 // id: %29

bb1:                                              // Preds: bb0
  %30 = tuple_extract %23 : $(Builtin.Int64, Builtin.Int1), 0, scope 155 // user: %33
  %31 = unchecked_enum_data %28 : $Optional<Builtin.NativeObject>, #Optional.some!enumelt.1, scope 155 // user: %32
  %32 = ref_to_raw_pointer %31 : $Builtin.NativeObject to $Builtin.RawPointer, scope 155 // user: %34
  %33 = builtin "truncOrBitCast_Int64_Word"(%30 : $Builtin.Int64) : $Builtin.Word, scope 155 // user: %34
  %34 = index_raw_pointer %32 : $Builtin.RawPointer, %33 : $Builtin.Word, scope 155 // user: %35
  %35 = struct $UnsafePointer<_StringBufferIVars> (%34 : $Builtin.RawPointer), scope 155 // user: %36
  return %35 : $UnsafePointer<_StringBufferIVars>, scope 155 // id: %36

bb2:                                              // Preds: bb0
  br bb3, scope 155                               // id: %37

bb3:                                              // Preds: bb2
  %38 = string_literal utf8 "unexpectedly found nil while unwrapping an Optional value", scope 155 // user: %40
  %39 = integer_literal $Builtin.Word, 57, scope 155 // user: %42
  %40 = builtin "ptrtoint_Word"(%38 : $Builtin.RawPointer) : $Builtin.Word, scope 155 // user: %42
  %41 = integer_literal $Builtin.Int8, 2, scope 155 // users: %46, %42
  %42 = struct $StaticString (%40 : $Builtin.Word, %39 : $Builtin.Word, %41 : $Builtin.Int8), scope 155 // user: %50
  %43 = string_literal utf8 "fatal error", scope 155 // user: %45
  %44 = integer_literal $Builtin.Word, 11, scope 155 // user: %46
  %45 = builtin "ptrtoint_Word"(%43 : $Builtin.RawPointer) : $Builtin.Word, scope 155 // user: %46
  %46 = struct $StaticString (%45 : $Builtin.Word, %44 : $Builtin.Word, %41 : $Builtin.Int8), scope 155 // user: %50
  %47 = integer_literal $Builtin.Int32, 1, scope 155 // user: %48
  %48 = struct $UInt32 (%47 : $Builtin.Int32), scope 155 // user: %50
  // function_ref specialized _fatalErrorMessage(StaticString, StaticString, StaticString, UInt, flags : UInt32) -> Never
  %49 = function_ref @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 155 // user: %50
  %50 = apply %49(%46, %42, %48) : $@convention(thin) (StaticString, StaticString, UInt32) -> Never, scope 155
  unreachable, scope 155                          // id: %51
}


// UnsafeMutablePointer.deinitialize(count : Int) -> UnsafeMutableRawPointer
sil [fragile] @_TFSp12deinitializefT5countSi_Sv : $@convention(method) <Pointee> (Int, UnsafeMutablePointer<Pointee>) -> UnsafeMutableRawPointer


// _HeapBuffer.init(_HeapBufferStorage<A, B>) -> _HeapBuffer<A, B>
sil [fragile] @_TFVs11_HeapBufferCfGCs18_HeapBufferStoragexq__GS_xq__ : $@convention(method) <Value, Element> (@owned _HeapBufferStorage<Value, Element>, @thin _HeapBuffer<Value, Element>.Type) -> @owned _HeapBuffer<Value, Element>


// _HeapBuffer._value.getter
sil hidden_external [fragile] @_TFVs11_HeapBufferg6_valueGSpx_ : $@convention(method) <Value, Element> (@guaranteed _HeapBuffer<Value, Element>) -> UnsafeMutablePointer<Value>


// UnsafeMutablePointer.(deinitialize(count : Int) -> UnsafeMutableRawPointer).(default argument 0)
sil [fragile] @_TIFSp12deinitializeFT5countSi_SvA_ : $@convention(thin) <Pointee> () -> Int


// static _HeapBuffer._valueOffset() -> Int
sil hidden_external [fragile] @_TZFVs11_HeapBuffer12_valueOffsetfT_Si : $@convention(method) <Value, Element> (@thin _HeapBuffer<Value, Element>.Type) -> Int


// _HeapBuffer._address.getter
sil hidden_external [fragile] @_TFVs11_HeapBufferg8_addressSv : $@convention(method) <Value, Element> (@guaranteed _HeapBuffer<Value, Element>) -> UnsafeMutableRawPointer


// _HeapBuffer._nativeObject.getter
sil hidden_external [fragile] @_TFVs11_HeapBufferg13_nativeObjectBo : $@convention(method) <Value, Element> (@guaranteed _HeapBuffer<Value, Element>) -> @owned Builtin.NativeObject

sil_vtable LocationWrapper {
  #LocationWrapper.coordinate!getter.1: _TFC9LibCoords15LocationWrapperg10coordinateVSC17CoordinateWrapper	// LocationWrapper.coordinate.getter
  #LocationWrapper.name!getter.1: _TFC9LibCoords15LocationWrapperg4nameSS	// LocationWrapper.name.getter
  #LocationWrapper.init!initializer.1: _TFC9LibCoords15LocationWrappercfT10coordinateVSC17CoordinateWrapper4nameSS_S0_	// LocationWrapper.init(coordinate : CoordinateWrapper, name : String) -> LocationWrapper
  #LocationWrapper.init!initializer.1: _TFC9LibCoords15LocationWrappercfT8locationVS_8Location_S0_	// LocationWrapper.init(location : Location) -> LocationWrapper
  #LocationWrapper.length!1: _TFC9LibCoords15LocationWrapper6lengthfT_Sd	// LocationWrapper.length() -> Double
  #LocationWrapper.unwrap!1: _TFC9LibCoords15LocationWrapper6unwrapfT_VS_8Location	// LocationWrapper.unwrap() -> Location
  #LocationWrapper.deinit!deallocator: _TFC9LibCoords15LocationWrapperD	// LocationWrapper.__deallocating_deinit
  #LocationWrapper.init!initializer.1: _TFC9LibCoords15LocationWrappercfT_S0_	// LocationWrapper.init() -> LocationWrapper
}

sil_vtable LocationFunctions {
  #LocationFunctions.deinit!deallocator: _TFC9LibCoords17LocationFunctionsD	// LocationFunctions.__deallocating_deinit
  #LocationFunctions.init!initializer.1: _TFC9LibCoords17LocationFunctionscfT_S0_	// LocationFunctions.init() -> LocationFunctions
}

sil_vtable _HeapBufferStorage {
  #_HeapBufferStorage.init!initializer.1: _TFCs18_HeapBufferStoragecfT_GS_xq__	// _HeapBufferStorage.init() -> _HeapBufferStorage<A, B>
  #_HeapBufferStorage.deinit!deallocator: _TFCs18_HeapBufferStorageD	// _HeapBufferStorage.__deallocating_deinit
}

sil_witness_table [fragile] CoordinateError: Error module LibCoords {
  method #Error._domain!getter.1: @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g7_domainSS	// protocol witness for Error._domain.getter in conformance CoordinateError
  method #Error._code!getter.1: @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g5_codeSi	// protocol witness for Error._code.getter in conformance CoordinateError
  method #Error._userInfo!getter.1: @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_g9_userInfoGSqP__	// protocol witness for Error._userInfo.getter in conformance CoordinateError
  method #Error._getEmbeddedNSError!1: @_TTWOSC15CoordinateErrors5Error9LibCoordsFS0_19_getEmbeddedNSErrorfT_GSqPs9AnyObject__	// protocol witness for Error._getEmbeddedNSError() -> AnyObject? in conformance CoordinateError
}

sil_witness_table [fragile] CoordinateError: _BridgedNSError module LibCoords {
  base_protocol __BridgedNSError: CoordinateError: __BridgedNSError module LibCoords
  base_protocol RawRepresentable: CoordinateError: RawRepresentable module LibCoords
  base_protocol _ObjectiveCBridgeableError: CoordinateError: _ObjectiveCBridgeableError module LibCoords
  base_protocol Hashable: CoordinateError: Hashable module LibCoords
  method #_BridgedNSError._nsErrorDomain!getter.1: @_TTWOSC15CoordinateError10Foundation15_BridgedNSError9LibCoordsZFS1_g14_nsErrorDomainSS	// protocol witness for static _BridgedNSError._nsErrorDomain.getter in conformance CoordinateError
}

sil_witness_table [fragile] CoordinateError: __BridgedNSError module LibCoords {
  base_protocol Error: CoordinateError: Error module LibCoords
  method #__BridgedNSError._nsErrorDomain!getter.1: @_TTWOSC15CoordinateError10Foundation16__BridgedNSError9LibCoordsZFS1_g14_nsErrorDomainSS	// protocol witness for static __BridgedNSError._nsErrorDomain.getter in conformance CoordinateError
}

sil_witness_table [fragile] CoordinateError: RawRepresentable module LibCoords {
  associated_type RawValue: Int
  method #RawRepresentable.init!allocator.1: @_TTWOSC15CoordinateErrors16RawRepresentable9LibCoordsFS0_CfT8rawValuewx8RawValue_GSqx_	// protocol witness for RawRepresentable.init(rawValue : A.RawValue) -> A? in conformance CoordinateError
  method #RawRepresentable.rawValue!getter.1: @_TTWOSC15CoordinateErrors16RawRepresentable9LibCoordsFS0_g8rawValuewx8RawValue	// protocol witness for RawRepresentable.rawValue.getter in conformance CoordinateError
}

sil_witness_table [fragile] CoordinateError: _ObjectiveCBridgeableError module LibCoords {
  base_protocol Error: CoordinateError: Error module LibCoords
  method #_ObjectiveCBridgeableError.init!allocator.1: @_TTWOSC15CoordinateError10Foundation26_ObjectiveCBridgeableError9LibCoordsFS1_CfT15_bridgedNSErrorCSo7NSError_GSqx_	// protocol witness for _ObjectiveCBridgeableError.init(_bridgedNSError : NSError) -> A? in conformance CoordinateError
}

sil_witness_table shared [fragile] CoordinateError: _Hashable module LibCoordsBridge {
  method #_Hashable._toAnyHashable!1: @_TTWOSC15CoordinateErrors9_Hashable15LibCoordsBridgeFS0_14_toAnyHashablefT_Vs11AnyHashable	// protocol witness for _Hashable._toAnyHashable() -> AnyHashable in conformance CoordinateError
}

sil_witness_table shared [fragile] CoordinateError: Equatable module LibCoordsBridge {
  method #Equatable."=="!1: @_TTWOSC15CoordinateErrors9Equatable15LibCoordsBridgeZFS0_oi2eefTxx_Sb	// protocol witness for static Equatable.== infix(A, A) -> Bool in conformance CoordinateError
}

sil_witness_table [fragile] CoordinateError: Hashable module LibCoords {
  base_protocol _Hashable: CoordinateError: _Hashable module LibCoordsBridge
  base_protocol Equatable: CoordinateError: Equatable module LibCoordsBridge
  method #Hashable.hashValue!getter.1: @_TTWOSC15CoordinateErrors8Hashable9LibCoordsFS0_g9hashValueSi	// protocol witness for Hashable.hashValue.getter in conformance CoordinateError
}

sil_witness_table <Value, Element> _HeapBufferStorage<Value, Element>: AnyObject module Swift



