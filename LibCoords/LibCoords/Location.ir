; ModuleID = '-'
source_filename = "-"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9"

%0 = type opaque
%1 = type opaque
%2 = type opaque
%3 = type opaque
%Vs5Int32 = type <{ i32 }>
%Sp = type <{ i8* }>
%swift.type = type { i64 }
%swift.refcounted = type { %swift.type*, i32, i32 }
%swift.full_boxmetadata = type { void (%swift.refcounted*)*, i8**, %swift.type, i32, i8* }
%objc_class = type { %objc_class*, %objc_class*, %swift.opaque*, %swift.opaque*, i64 }
%swift.opaque = type opaque
%C8Location15LocationWrapper = type <{ %swift.refcounted, %V8Location8Location }>
%V8Location8Location = type <{ <{ %O8Location8Position, [7 x i8], %Sd }>, %SS }>
%O8Location8Position = type <{ [8 x i8], [1 x i8] }>
%Sd = type <{ double }>
%SS = type <{ %Vs11_StringCore }>
%Vs11_StringCore = type <{ %GSqSv_, %Su, %GSqPs9AnyObject__ }>
%GSqSv_ = type <{ [8 x i8] }>
%Su = type <{ i64 }>
%GSqPs9AnyObject__ = type <{ [8 x i8] }>
%C8Location17LocationFunctions = type <{ %swift.refcounted }>
%swift.protocol_conformance = type { i32, i32, i32, i32 }
%swift.protocol = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i16, i16, i32 }
%swift.type_metadata_record = type { i32, i32 }
%Si = type <{ i64 }>
%O8Location15CoordinateError = type <{ i1 }>
%GSqO8Location15CoordinateError_ = type <{ [1 x i8] }>
%GSqP__ = type <{ [32 x i8], [1 x i8] }>
%Vs11AnyHashable = type <{ %Ps15_AnyHashableBox_ }>
%Ps15_AnyHashableBox_ = type { [24 x i8], %swift.type*, i8** }
%objc_object = type opaque
%swift.error = type opaque
%Sb = type <{ i1 }>
%CSo8NSString = type opaque
%objc_super = type { %objc_object*, %objc_class* }
%CSo8NSObject = type opaque
%Vs12StaticString = type <{ i64, i64, i8 }>
%Vs6UInt64 = type <{ i64 }>
%GSRVs5UInt8_ = type <{ %GSqGSPVs5UInt8__, %GSqGSPVs5UInt8__ }>
%GSqGSPVs5UInt8__ = type <{ [8 x i8] }>

@_TZvOs11CommandLine5_argcVs5Int32 = external global %Vs5Int32, align 4
@globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4 = external global i64, align 8
@_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___ = external global %Sp, align 8
@_TWPSis9Equatables = external global i8*, align 8
@_TMSb = external global %swift.type, align 8
@_TWPSbs9Equatables = external global i8*, align 8
@swift_isaMask = external global i64
@"\01L_selector_data(init)" = private global [5 x i8] c"init\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(init)" = private externally_initialized global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(allocWithZone:)" = private global [15 x i8] c"allocWithZone:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(allocWithZone:)" = private externally_initialized global i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(allocWithZone:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(dealloc)" = private global [8 x i8] c"dealloc\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(dealloc)" = private externally_initialized global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(dealloc)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@0 = private unnamed_addr constant [25 x i8] c"Location.LocationWrapper\00"
@1 = private unnamed_addr constant [7 x i8] c"init()\00"
@2 = private unnamed_addr constant [15 x i8] c"Location.swift\00"
@3 = private constant [17 x i8] c"Vs12StaticString\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@4 = private constant [3 x i8] c"Su\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@"\01l__swift3_capture_descriptor" = private constant <{ i32, i32, i32, i32, i32, i32, i32 }> <{ i32 4, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([17 x i8]* @3 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([17 x i8]* @3 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @4 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i64), i64 20)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @4 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i64), i64 24)) to i32) }>, section "__TEXT,__swift3_capture, regular, no_dead_strip", align 4
@_swift_deallocObject = external global void (%swift.refcounted*, i64, i64)*
@metadata = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy, i8** null, %swift.type { i64 64 }, i32 16, i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i8*) }
@_swift_allocObject = external global %swift.refcounted* (%swift.type*, i64, i64)*
@_swift_release = external global void (%swift.refcounted*)*
@5 = private unnamed_addr constant [77 x i8] c"Double value cannot be converted to Int because it is either infinite or NaN\00"
@6 = private unnamed_addr constant [12 x i8] c"fatal error\00"
@7 = private unnamed_addr constant [86 x i8] c"Double value cannot be converted to Int because the result would be less than Int.min\00"
@8 = private unnamed_addr constant [89 x i8] c"Double value cannot be converted to Int because the result would be greater than Int.max\00"
@_TWPO8Location15CoordinateErrors9EquatableS_ = constant [1 x i8*] [i8* bitcast (i1 (%O8Location15CoordinateError*, %O8Location15CoordinateError*, %swift.type*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors9EquatableS_ZFS1_oi2eefTxx_Sb to i8*)], align 8
@_TWPO8Location15CoordinateErrors8HashableS_ = constant [3 x i8*] [i8* bitcast ([1 x i8*]* @_TWPO8Location15CoordinateErrors9_HashableS_ to i8*), i8* bitcast ([1 x i8*]* @_TWPO8Location15CoordinateErrors9EquatableS_ to i8*), i8* bitcast (i64 (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors8HashableS_FS1_g9hashValueSi to i8*)], align 8
@_TWPO8Location15CoordinateErrors16RawRepresentableS_ = constant [3 x i8*] [i8* bitcast (%swift.type* ()* @_TMaSi to i8*), i8* bitcast (void (%GSqO8Location15CoordinateError_*, %Si*, %swift.type*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors16RawRepresentableS_FS1_CfT8rawValuewx8RawValue_GSqx_ to i8*), i8* bitcast (void (%Si*, %O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors16RawRepresentableS_FS1_g8rawValuewx8RawValue to i8*)], align 8
@_TWPO8Location15CoordinateErrors5ErrorS_ = constant [4 x i8*] [i8* bitcast ({ i64, i64, i64 } (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g7_domainSS to i8*), i8* bitcast (i64 (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g5_codeSi to i8*), i8* bitcast (void (%GSqP__*, %O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g9_userInfoGSqP__ to i8*), i8* bitcast (i64 (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_19_getEmbeddedNSErrorfT_GSqPs9AnyObject__ to i8*)], align 8
@_TWPO8Location15CoordinateErrors9_HashableS_ = constant [1 x i8*] [i8* bitcast (void (%Vs11AnyHashable*, %O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors9_HashableS_FS1_14_toAnyHashablefT_Vs11AnyHashable to i8*)], align 8
@_TWVO8Location15CoordinateError = constant [26 x i8*] [i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, %swift.type*)* @__swift_noop_self_return to i8*), i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (i8* (i8*, %swift.type*)* @__swift_noop_self_return to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy1_1 to i8*), i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memcpy_array1_1 to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memmove_array1_1 to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memmove_array1_1 to i8*), i8* inttoptr (i64 1 to i8*), i8* inttoptr (i64 2359296 to i8*), i8* inttoptr (i64 1 to i8*), i8* inttoptr (i64 254 to i8*), i8* bitcast (void (%swift.opaque*, i32, %swift.type*)* @_TwxsO8Location15CoordinateError to i8*), i8* bitcast (i32 (%swift.opaque*, %swift.type*)* @_TwxgO8Location15CoordinateError to i8*), i8* bitcast (i32 (%swift.opaque*, %swift.type*)* @_TwugO8Location15CoordinateError to i8*), i8* bitcast (void (%swift.opaque*, %swift.type*)* @_TwupO8Location15CoordinateError to i8*), i8* bitcast (void (%swift.opaque*, i32, %swift.type*)* @_TwuiO8Location15CoordinateError to i8*)], align 8
@9 = private constant [28 x i8] c"O8Location15CoordinateError\00"
@10 = private constant [27 x i8] c"WrongDimensions\00CantExist\00\00"
@_TMnO8Location15CoordinateError = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([28 x i8]* @9 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location15CoordinateError to i64)) to i32), i32 0, i32 2, i32 trunc (i64 sub (i64 ptrtoint ([27 x i8]* @10 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location15CoordinateError to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.type** (%swift.type*)* @get_field_types_CoordinateError to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location15CoordinateError to i64), i64 16)) to i32), i32 2, i32 trunc (i64 sub (i64 ptrtoint (%swift.type* ()* @_TMaO8Location15CoordinateError to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location15CoordinateError to i64), i64 24)) to i32), i32 3, i32 0, i32 0, i32 0 }>, section "__TEXT,__const", align 8
@_TMfO8Location15CoordinateError = internal constant <{ i8**, i64, i64, %swift.type* }> <{ i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @_TWVO8Location15CoordinateError, i32 0, i32 0), i64 2, i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location15CoordinateError to i64), i64 add (i64 ptrtoint (<{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError to i64), i64 16)), %swift.type* null }>, align 8
@11 = private constant [28 x i8] c"O8Location15CoordinateError\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@12 = private constant [16 x i8] c"WrongDimensions\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@13 = private constant [10 x i8] c"CantExist\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@"\01l__swift3_reflection_metadata" = private constant <{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([28 x i8]* @11 to i64), i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i64)) to i32), i16 2, i16 12, i32 2, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([16 x i8]* @12 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i64), i64 20)) to i32), i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([10 x i8]* @13 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i64), i64 32)) to i32) }>, section "__TEXT,__swift3_fieldmd, regular, no_dead_strip", align 4
@_TWVO8Location8Position = constant [26 x i8*] [i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, %swift.type*)* @__swift_noop_self_return to i8*), i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (i8* (i8*, %swift.type*)* @__swift_noop_self_return to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy9_8 to i8*), i8* bitcast (void (i8*, %swift.type*)* @__swift_noop_void_return to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memcpy_array16_8 to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memmove_array16_8 to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memmove_array16_8 to i8*), i8* inttoptr (i64 9 to i8*), i8* inttoptr (i64 2097159 to i8*), i8* inttoptr (i64 16 to i8*), i8* null, i8* null, i8* null, i8* bitcast (i32 (%swift.opaque*, %swift.type*)* @_TwugO8Location8Position to i8*), i8* bitcast (void (%swift.opaque*, %swift.type*)* @_TwupO8Location8Position to i8*), i8* bitcast (void (%swift.opaque*, i32, %swift.type*)* @_TwuiO8Location8Position to i8*)], align 8
@14 = private constant [20 x i8] c"O8Location8Position\00"
@15 = private constant [7 x i8] c"A\00B\00C\00\00"
@_TMnO8Location8Position = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @14 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location8Position to i64)) to i32), i32 3, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([7 x i8]* @15 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location8Position to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.type** (%swift.type*)* @get_field_types_Position to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location8Position to i64), i64 16)) to i32), i32 2, i32 trunc (i64 sub (i64 ptrtoint (%swift.type* ()* @_TMaO8Location8Position to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location8Position to i64), i64 24)) to i32), i32 3, i32 0, i32 0, i32 0 }>, section "__TEXT,__const", align 8
@_TMfO8Location8Position = internal constant <{ i8**, i64, i64, %swift.type* }> <{ i8** getelementptr inbounds ([26 x i8*], [26 x i8*]* @_TWVO8Location8Position, i32 0, i32 0), i64 2, i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location8Position to i64), i64 add (i64 ptrtoint (<{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location8Position to i64), i64 16)), %swift.type* null }>, align 8
@16 = private constant [20 x i8] c"O8Location8Position\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@17 = private constant [3 x i8] c"Si\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@18 = private constant [2 x i8] c"A\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@19 = private constant [3 x i8] c"Sd\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@20 = private constant [2 x i8] c"B\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@21 = private constant [3 x i8] c"Sb\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@22 = private constant [2 x i8] c"C\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@"\01l__swift3_reflection_metadata.1" = private constant <{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @16 to i64), i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64)) to i32), i16 3, i16 12, i32 3, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @17 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([2 x i8]* @18 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64), i64 20)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @19 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64), i64 28)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([2 x i8]* @20 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64), i64 32)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @21 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64), i64 40)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([2 x i8]* @22 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i64), i64 44)) to i32) }>, section "__TEXT,__swift3_fieldmd, regular, no_dead_strip", align 4
@_swift_slowDealloc = external global void (i8*, i64, i64)*
@_swift_slowAlloc = external global i8* (i64, i64)*
@_TWVV8Location8Location = constant [20 x i8*] [i8* bitcast (void ([24 x i8]*, %swift.type*)* @_TwXXV8Location8Location to i8*), i8* bitcast (%swift.opaque* ([24 x i8]*, [24 x i8]*, %swift.type*)* @_TwCPV8Location8Location to i8*), i8* bitcast (%swift.opaque* ([24 x i8]*, %swift.type*)* @_TwprV8Location8Location to i8*), i8* bitcast (void ([24 x i8]*, %swift.type*)* @_TwdeV8Location8Location to i8*), i8* bitcast (void (%swift.opaque*, %swift.type*)* @_TwxxV8Location8Location to i8*), i8* bitcast (%swift.opaque* ([24 x i8]*, %swift.opaque*, %swift.type*)* @_TwCpV8Location8Location to i8*), i8* bitcast (%swift.opaque* (%swift.opaque*, %swift.opaque*, %swift.type*)* @_TwcpV8Location8Location to i8*), i8* bitcast (%swift.opaque* (%swift.opaque*, %swift.opaque*, %swift.type*)* @_TwcaV8Location8Location to i8*), i8* bitcast (%swift.opaque* ([24 x i8]*, %swift.opaque*, %swift.type*)* @_TwTkV8Location8Location to i8*), i8* bitcast (i8* (i8*, i8*, %swift.type*)* @__swift_memcpy48_8 to i8*), i8* bitcast (%swift.opaque* (%swift.opaque*, %swift.opaque*, %swift.type*)* @_TwtaV8Location8Location to i8*), i8* bitcast (%swift.opaque* ([24 x i8]*, %swift.type*)* @_TwalV8Location8Location to i8*), i8* bitcast (i8* (i8**, i8**, %swift.type*)* @__swift_copy_outline_pointer to i8*), i8* bitcast (void (%swift.opaque*, i64, %swift.type*)* @_TwXxV8Location8Location to i8*), i8* bitcast (%swift.opaque* (%swift.opaque*, %swift.opaque*, i64, %swift.type*)* @_TwCcV8Location8Location to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memmove_array48_8 to i8*), i8* bitcast (i8* (i8*, i8*, i64, %swift.type*)* @__swift_memmove_array48_8 to i8*), i8* inttoptr (i64 48 to i8*), i8* inttoptr (i64 196615 to i8*), i8* inttoptr (i64 48 to i8*)], align 8
@23 = private constant [20 x i8] c"V8Location8Location\00"
@24 = private constant [17 x i8] c"coordinate\00name\00\00"
@_TMnV8Location8Location = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @23 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnV8Location8Location to i64)) to i32), i32 2, i32 3, i32 trunc (i64 sub (i64 ptrtoint ([17 x i8]* @24 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnV8Location8Location to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.type** (%swift.type*)* @get_field_types_Location to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnV8Location8Location to i64), i64 16)) to i32), i32 1, i32 trunc (i64 sub (i64 ptrtoint (%swift.type* ()* @_TMaV8Location8Location to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnV8Location8Location to i64), i64 24)) to i32), i32 5, i32 0, i32 0, i32 0 }>, section "__TEXT,__const", align 8
@_TMfV8Location8Location = internal constant <{ i8**, i64, i64, %swift.type*, i64, i64 }> <{ i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @_TWVV8Location8Location, i32 0, i32 0), i64 1, i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnV8Location8Location to i64), i64 add (i64 ptrtoint (<{ i8**, i64, i64, %swift.type*, i64, i64 }>* @_TMfV8Location8Location to i64), i64 16)), %swift.type* null, i64 0, i64 24 }>, align 8
@25 = private constant [20 x i8] c"V8Location8Location\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@26 = private constant [24 x i8] c"TO8Location8PositionSd_\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@27 = private constant [11 x i8] c"coordinate\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@28 = private constant [3 x i8] c"SS\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@29 = private constant [5 x i8] c"name\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@"\01l__swift3_reflection_metadata.2" = private constant <{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @25 to i64), i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.2" to i64)) to i32), i16 0, i16 12, i32 2, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([24 x i8]* @26 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.2" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([11 x i8]* @27 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.2" to i64), i64 20)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @28 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.2" to i64), i64 28)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([5 x i8]* @29 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.2" to i64), i64 32)) to i32) }>, section "__TEXT,__swift3_fieldmd, regular, no_dead_strip", align 4
@_TWVBO = external global i8*, align 8
@"OBJC_METACLASS_$__TtC8Location15LocationWrapper" = global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_NSObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtC8Location15LocationWrapper to i64) }, align 8
@"OBJC_CLASS_$_NSObject" = external global %objc_class, align 8
@_objc_empty_cache = external global %swift.opaque
@_TWvdvC8Location15LocationWrapper8locationVS_8Location = hidden constant i64 16, align 8
@30 = private unnamed_addr constant [9 x i8] c"location\00"
@31 = private constant [1 x i8] zeroinitializer
@32 = private unnamed_addr constant [5 x i8] c"name\00"
@33 = private unnamed_addr constant [17 x i8] c"T@\22NSString\22,N,R\00"
@"\01L_selector_data(name)" = private global [5 x i8] c"name\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@34 = private unnamed_addr constant [8 x i8] c"@16@0:8\00"
@"\01L_selector_data(length)" = private global [7 x i8] c"length\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@35 = private unnamed_addr constant [8 x i8] c"d16@0:8\00"
@"\01L_selector_data(objcTest)" = private global [9 x i8] c"objcTest\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@36 = private unnamed_addr constant [8 x i8] c"c16@0:8\00"
@"\01L_selector_data(.cxx_destruct)" = private global [14 x i8] c".cxx_destruct\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@37 = private unnamed_addr constant [3 x i8] c"@?\00"
@"OBJC_METACLASS_$_NSObject" = external global %objc_class, align 8
@38 = private unnamed_addr constant [31 x i8] c"_TtC8Location15LocationWrapper\00"
@_METACLASS_DATA__TtC8Location15LocationWrapper = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @38, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@_INSTANCE_METHODS__TtC8Location15LocationWrapper = private constant { i32, i32, [5 x { i8*, i8*, i8* }] } { i32 24, i32 5, [5 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(name)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @34, i64 0, i64 0), i8* bitcast (%1* (%0*, i8*)* @_TToFC8Location15LocationWrapperg4nameSS to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\01L_selector_data(length)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @35, i64 0, i64 0), i8* bitcast (double (%0*, i8*)* @_TToFC8Location15LocationWrapper6lengthfT_Sd to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"\01L_selector_data(objcTest)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @36, i64 0, i64 0), i8* bitcast (i8 (%0*, i8*)* @_TToFC8Location15LocationWrapper8objcTestfT_Sb to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @34, i64 0, i64 0), i8* bitcast (%0* (%0*, i8*)* @_TToFC8Location15LocationWrappercfT_S0_ to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(.cxx_destruct)", i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @37, i64 0, i64 0), i8* bitcast (void (%0*, i8*)* @_TToFC8Location15LocationWrapperE to i8*) }] }, section "__DATA, __objc_const", align 8
@_IVARS__TtC8Location15LocationWrapper = private constant { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 1, [1 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @_TWvdvC8Location15LocationWrapper8locationVS_8Location, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @30, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @31, i64 0, i64 0), i32 3, i32 48 }] }, section "__DATA, __objc_const", align 8
@_PROPERTIES__TtC8Location15LocationWrapper = private constant { i32, i32, [1 x { i8*, i8* }] } { i32 16, i32 1, [1 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @33, i64 0, i64 0) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtC8Location15LocationWrapper = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [1 x { i8*, i8* }] }* } { i32 388, i32 16, i32 64, i32 0, i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @38, i64 0, i64 0), { i32, i32, [5 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtC8Location15LocationWrapper, i8* null, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtC8Location15LocationWrapper, i8* null, { i32, i32, [1 x { i8*, i8* }] }* @_PROPERTIES__TtC8Location15LocationWrapper }, section "__DATA, __objc_const", align 8
@39 = private constant [28 x i8] c"C8Location15LocationWrapper\00"
@40 = private constant [10 x i8] c"location\00\00"
@_TMnC8Location15LocationWrapper = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([28 x i8]* @39 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location15LocationWrapper to i64)) to i32), i32 1, i32 17, i32 trunc (i64 sub (i64 ptrtoint ([10 x i8]* @40 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location15LocationWrapper to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.type** (%swift.type*)* @get_field_types_LocationWrapper to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location15LocationWrapper to i64), i64 16)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (%swift.type* ()* @_TMaC8Location15LocationWrapper to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location15LocationWrapper to i64), i64 24)) to i32), i32 10, i32 0, i32 0, i32 0 }>, section "__TEXT,__const", align 8
@_TWoFC8Location15LocationWrapperg10coordinateTOS_8PositionSd_ = hidden constant i64 96, align 8
@_TWoFC8Location15LocationWrapperg4nameSS = hidden constant i64 104, align 8
@_TWoFC8Location15LocationWrapperCfT10coordinateTOS_8PositionSd_4nameSS_S0_ = constant i64 112, align 8
@_TWoFC8Location15LocationWrapperCfT8locationVS_8Location_S0_ = hidden constant i64 120, align 8
@_TWoFC8Location15LocationWrapper6lengthfT_Sd = constant i64 128, align 8
@_TWoFC8Location15LocationWrapper8objcTestfT_Sb = constant i64 136, align 8
@_TWoFC8Location15LocationWrapper11nonobjcTestfT_Sb = constant i64 144, align 8
@_TMLC8Location15LocationWrapper = global %swift.type* null, align 8
@_swift_getInitializedObjCClass = external global %objc_class* (%objc_class*)*
@_TMfC8Location15LocationWrapper = internal global <{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }> <{ void (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapperD, i8** @_TWVBO, i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtC8Location15LocationWrapper" to i64), %objc_class* @"OBJC_CLASS_$_NSObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [1 x { i8*, i8* }] }* }* @_DATA__TtC8Location15LocationWrapper to i64), i64 1), i32 1, i32 0, i32 64, i16 7, i16 0, i32 160, i32 16, i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location15LocationWrapper to i64), i64 add (i64 ptrtoint (<{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>* @_TMfC8Location15LocationWrapper to i64), i64 80)), i8* null, { i64, i2, double } (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapperg10coordinateTOS_8PositionSd_, { i64, i64, i64 } (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapperg4nameSS, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)* @_TFC8Location15LocationWrappercfT10coordinateTOS_8PositionSd_4nameSS_S0_, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)* @_TFC8Location15LocationWrappercfT8locationVS_8Location_S0_, double (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapper6lengthfT_Sd, i1 (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapper8objcTestfT_Sb, i1 (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapper11nonobjcTestfT_Sb, i64 16 }>, section "__DATA,__objc_data, regular", align 8
@41 = private constant [28 x i8] c"C8Location15LocationWrapper\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@42 = private constant [9 x i8] c"location\00", section "__TEXT,__swift3_reflstr, regular, no_dead_strip"
@"\01l__swift3_reflection_metadata.3" = private constant <{ i32, i16, i16, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([28 x i8]* @41 to i64), i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.3" to i64)) to i32), i16 7, i16 12, i32 1, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @25 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.3" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([9 x i8]* @42 to i64), i64 add (i64 ptrtoint (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.3" to i64), i64 20)) to i32) }>, section "__TEXT,__swift3_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtC8Location17LocationFunctions" = global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_NSObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtC8Location17LocationFunctions to i64) }, align 8
@"\01L_selector_data(f:)" = private global [3 x i8] c"f:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@43 = private unnamed_addr constant [11 x i8] c"q24@0:8d16\00"
@44 = private unnamed_addr constant [33 x i8] c"_TtC8Location17LocationFunctions\00"
@_CLASS_METHODS__TtC8Location17LocationFunctions = private constant { i32, i32, [1 x { i8*, i8*, i8* }] } { i32 24, i32 1, [1 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\01L_selector_data(f:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @43, i64 0, i64 0), i8* bitcast (i64 (i8*, i8*, double)* @_TToZFC8Location17LocationFunctions1ffSdSi to i8*) }] }, section "__DATA, __objc_const", align 8
@_METACLASS_DATA__TtC8Location17LocationFunctions = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @44, i64 0, i64 0), { i32, i32, [1 x { i8*, i8*, i8* }] }* @_CLASS_METHODS__TtC8Location17LocationFunctions, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@_INSTANCE_METHODS__TtC8Location17LocationFunctions = private constant { i32, i32, [1 x { i8*, i8*, i8* }] } { i32 24, i32 1, [1 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @34, i64 0, i64 0), i8* bitcast (%3* (%3*, i8*)* @_TToFC8Location17LocationFunctionscfT_S0_ to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtC8Location17LocationFunctions = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 16, i32 16, i32 0, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @44, i64 0, i64 0), { i32, i32, [1 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtC8Location17LocationFunctions, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@45 = private constant [30 x i8] c"C8Location17LocationFunctions\00"
@_TMnC8Location17LocationFunctions = constant <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([30 x i8]* @45 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location17LocationFunctions to i64)) to i32), i32 0, i32 11, i32 trunc (i64 sub (i64 ptrtoint ([1 x i8]* @31 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location17LocationFunctions to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint (%swift.type** (%swift.type*)* @get_field_types_LocationFunctions to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location17LocationFunctions to i64), i64 16)) to i32), i32 0, i32 trunc (i64 sub (i64 ptrtoint (%swift.type* ()* @_TMaC8Location17LocationFunctions to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location17LocationFunctions to i64), i64 24)) to i32), i32 10, i32 0, i32 0, i32 0 }>, section "__TEXT,__const", align 8
@_TWoFC8Location17LocationFunctionsCfT_S0_ = constant i64 96, align 8
@_TMLC8Location17LocationFunctions = global %swift.type* null, align 8
@_TMfC8Location17LocationFunctions = internal global <{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }> <{ void (%C8Location17LocationFunctions*)* @_TFC8Location17LocationFunctionsD, i8** @_TWVBO, i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtC8Location17LocationFunctions" to i64), %objc_class* @"OBJC_CLASS_$_NSObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtC8Location17LocationFunctions to i64), i64 1), i32 1, i32 0, i32 16, i16 7, i16 0, i32 104, i32 16, i64 sub (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location17LocationFunctions to i64), i64 add (i64 ptrtoint (<{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>* @_TMfC8Location17LocationFunctions to i64), i64 80)), i8* null, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* @_TFC8Location17LocationFunctionscfT_S0_ }>, section "__DATA,__objc_data, regular", align 8
@46 = private constant [30 x i8] c"C8Location17LocationFunctions\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@"\01l__swift3_reflection_metadata.4" = private constant <{ i32, i16, i16, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([30 x i8]* @46 to i64), i64 ptrtoint (<{ i32, i16, i16, i32 }>* @"\01l__swift3_reflection_metadata.4" to i64)) to i32), i16 7, i16 12, i32 0 }>, section "__TEXT,__swift3_fieldmd, regular, no_dead_strip", align 4
@"_swift_FORCE_LOAD_$_swiftFoundation" = external global i1
@"_swift_FORCE_LOAD_$_swiftFoundation_$_Location" = weak hidden constant i1* @"_swift_FORCE_LOAD_$_swiftFoundation"
@"_swift_FORCE_LOAD_$_swiftObjectiveC" = external global i1
@"_swift_FORCE_LOAD_$_swiftObjectiveC_$_Location" = weak hidden constant i1* @"_swift_FORCE_LOAD_$_swiftObjectiveC"
@"_swift_FORCE_LOAD_$_swiftDarwin" = external global i1
@"_swift_FORCE_LOAD_$_swiftDarwin_$_Location" = weak hidden constant i1* @"_swift_FORCE_LOAD_$_swiftDarwin"
@"_swift_FORCE_LOAD_$_swiftIOKit" = external global i1
@"_swift_FORCE_LOAD_$_swiftIOKit_$_Location" = weak hidden constant i1* @"_swift_FORCE_LOAD_$_swiftIOKit"
@"_swift_FORCE_LOAD_$_swiftDispatch" = external global i1
@"_swift_FORCE_LOAD_$_swiftDispatch_$_Location" = weak hidden constant i1* @"_swift_FORCE_LOAD_$_swiftDispatch"
@"_swift_FORCE_LOAD_$_swiftCoreGraphics" = external global i1
@"_swift_FORCE_LOAD_$_swiftCoreGraphics_$_Location" = weak hidden constant i1* @"_swift_FORCE_LOAD_$_swiftCoreGraphics"
@"\01l_protocol_conformances" = private constant [5 x %swift.protocol_conformance] [%swift.protocol_conformance { i32 add (i32 trunc (i64 sub (i64 ptrtoint (%swift.protocol** @got._TMps9Equatable to i64), i64 ptrtoint ([5 x %swift.protocol_conformance]* @"\01l_protocol_conformances" to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 0, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([1 x i8*]* @_TWPO8Location15CoordinateErrors9EquatableS_ to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 0, i32 2) to i64)) to i32), i32 1 }, %swift.protocol_conformance { i32 add (i32 trunc (i64 sub (i64 ptrtoint (%swift.protocol** @got._TMps8Hashable to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 1, i32 0) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 1, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8*]* @_TWPO8Location15CoordinateErrors8HashableS_ to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 1, i32 2) to i64)) to i32), i32 1 }, %swift.protocol_conformance { i32 add (i32 trunc (i64 sub (i64 ptrtoint (%swift.protocol** @got._TMps16RawRepresentable to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 2, i32 0) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 2, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8*]* @_TWPO8Location15CoordinateErrors16RawRepresentableS_ to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 2, i32 2) to i64)) to i32), i32 1 }, %swift.protocol_conformance { i32 add (i32 trunc (i64 sub (i64 ptrtoint (%swift.protocol** @got._TMps5Error to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 3, i32 0) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 3, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_ to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 3, i32 2) to i64)) to i32), i32 1 }, %swift.protocol_conformance { i32 add (i32 trunc (i64 sub (i64 ptrtoint (%swift.protocol** @got._TMps9_Hashable to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 4, i32 0) to i64)) to i32), i32 1), i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 4, i32 1) to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([1 x i8*]* @_TWPO8Location15CoordinateErrors9_HashableS_ to i64), i64 ptrtoint (i32* getelementptr inbounds ([5 x %swift.protocol_conformance], [5 x %swift.protocol_conformance]* @"\01l_protocol_conformances", i32 0, i32 4, i32 2) to i64)) to i32), i32 1 }], section "__TEXT, __swift2_proto, regular, no_dead_strip", align 8
@_TMps9Equatable = external global %swift.protocol, align 8
@got._TMps9Equatable = private unnamed_addr constant %swift.protocol* @_TMps9Equatable
@_TMps8Hashable = external global %swift.protocol, align 8
@got._TMps8Hashable = private unnamed_addr constant %swift.protocol* @_TMps8Hashable
@47 = private constant [22 x i8] c"Ps16RawRepresentable_\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@48 = private constant [9 x i8] c"RawValue\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@"\01l__swift3_assocty_metadata" = private constant <{ i32, i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([28 x i8]* @11 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_assocty_metadata" to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([22 x i8]* @47 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_assocty_metadata" to i64), i64 4)) to i32), i32 1, i32 8, i32 trunc (i64 sub (i64 ptrtoint ([9 x i8]* @48 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_assocty_metadata" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @17 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_assocty_metadata" to i64), i64 20)) to i32) }>, section "__TEXT,__swift3_assocty, regular, no_dead_strip", align 4
@_TMps16RawRepresentable = external global %swift.protocol, align 8
@got._TMps16RawRepresentable = private unnamed_addr constant %swift.protocol* @_TMps16RawRepresentable
@_TMps5Error = external global %swift.protocol, align 8
@got._TMps5Error = private unnamed_addr constant %swift.protocol* @_TMps5Error
@_TMps9_Hashable = external global %swift.protocol, align 8
@got._TMps9_Hashable = private unnamed_addr constant %swift.protocol* @_TMps9_Hashable
@"\01l_type_metadata_table" = private constant [4 x %swift.type_metadata_record] [%swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location8Position, i32 0, i32 1) to i64), i64 ptrtoint ([4 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i64)) to i32), i32 1 }, %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type*, i64, i64 }>, <{ i8**, i64, i64, %swift.type*, i64, i64 }>* @_TMfV8Location8Location, i32 0, i32 1) to i64), i64 ptrtoint (i32* getelementptr inbounds ([4 x %swift.type_metadata_record], [4 x %swift.type_metadata_record]* @"\01l_type_metadata_table", i32 0, i32 1, i32 0) to i64)) to i32), i32 1 }, %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>, <{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>* @_TMfC8Location15LocationWrapper, i32 0, i32 2) to i64), i64 ptrtoint (i32* getelementptr inbounds ([4 x %swift.type_metadata_record], [4 x %swift.type_metadata_record]* @"\01l_type_metadata_table", i32 0, i32 2, i32 0) to i64)) to i32), i32 15 }, %swift.type_metadata_record { i32 trunc (i64 sub (i64 ptrtoint (i64* getelementptr inbounds (<{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>, <{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>* @_TMfC8Location17LocationFunctions, i32 0, i32 2) to i64), i64 ptrtoint (i32* getelementptr inbounds ([4 x %swift.type_metadata_record], [4 x %swift.type_metadata_record]* @"\01l_type_metadata_table", i32 0, i32 3, i32 0) to i64)) to i32), i32 15 }], section "__TEXT, __swift2_types, regular, no_dead_strip", align 8
@"\01l__swift3_builtin_metadata" = private constant <{ i32, i32, i32, i32, i32 }> <{ i32 trunc (i64 sub (i64 ptrtoint ([20 x i8]* @16 to i64), i64 ptrtoint (<{ i32, i32, i32, i32, i32 }>* @"\01l__swift3_builtin_metadata" to i64)) to i32), i32 9, i32 8, i32 16, i32 0 }>, section "__TEXT,__swift3_builtin, regular, no_dead_strip", align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 1
@field_type_vector_LocationFunctions = private global %swift.type** null
@field_type_vector_LocationWrapper = private global %swift.type** null
@field_type_vector_Location = private global %swift.type** null
@_TMLTO8Location8PositionSd_ = linkonce_odr hidden global %swift.type* null, align 8
@_TMSd = external global %swift.type, align 8
@_TMSS = external global %swift.type, align 8
@field_type_vector_Position = private global %swift.type** null
@_TMSi = external global %swift.type, align 8
@field_type_vector_CoordinateError = private global %swift.type** null
@49 = private unnamed_addr constant [117 x i8] c"/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-800.0.43.6/src/swift/stdlib/public/core/StaticString.swift\00"
@50 = private unnamed_addr constant [58 x i8] c"unexpectedly found nil while unwrapping an Optional value\00"
@51 = private unnamed_addr constant [182 x i8] c"/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.43.6~5/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/UnsafeBufferPointer.swift\00"
@52 = private unnamed_addr constant [40 x i8] c"UnsafeBufferPointer with negative count\00"
@_TMVs5UInt8 = external global %swift.type, align 8
@53 = private unnamed_addr constant [54 x i8] c"UnsafeBufferPointer has a nil start and nonzero count\00"
@54 = private unnamed_addr constant [46 x i8] c"shift amount is larger than type size in bits\00"
@55 = private unnamed_addr constant [173 x i8] c"/Library/Caches/com.apple.xbs/Binaries/swiftlang/swiftlang-800.0.43.6~5/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/FixedPoint.swift\00"
@56 = private constant [13 x i8] c"GSRVs5UInt8_\00", section "__TEXT,__swift3_typeref, regular, no_dead_strip"
@"\01l__swift3_capture_descriptor.5" = private constant <{ i32, i32, i32, i32, i32, i32, i32 }> <{ i32 4, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([17 x i8]* @3 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.5" to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([13 x i8]* @56 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.5" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @4 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.5" to i64), i64 20)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @4 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.5" to i64), i64 24)) to i32) }>, section "__TEXT,__swift3_capture, regular, no_dead_strip", align 4
@metadata.7 = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy.6, i8** null, %swift.type { i64 64 }, i32 16, i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.5" to i8*) }
@"\01l__swift3_capture_descriptor.8" = private constant <{ i32, i32, i32, i32, i32, i32, i32 }> <{ i32 4, i32 0, i32 0, i32 trunc (i64 sub (i64 ptrtoint ([13 x i8]* @56 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.8" to i64), i64 12)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([13 x i8]* @56 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.8" to i64), i64 16)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @4 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.8" to i64), i64 20)) to i32), i32 trunc (i64 sub (i64 ptrtoint ([3 x i8]* @4 to i64), i64 add (i64 ptrtoint (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.8" to i64), i64 24)) to i32) }>, section "__TEXT,__swift3_capture, regular, no_dead_strip", align 4
@metadata.10 = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy.9, i8** null, %swift.type { i64 64 }, i32 16, i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.8" to i8*) }
@objc_classes = internal global [2 x i8*] [i8* bitcast (%swift.type* @_TMC8Location15LocationWrapper to i8*), i8* bitcast (%swift.type* @_TMC8Location17LocationFunctions to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 8
@llvm.used = appending global [107 x i8*] [i8* bitcast (i64 (i1)* @_TFO8Location15CoordinateErrorg9hashValueSi to i8*), i8* bitcast (i8 (i64)* @_TFO8Location15CoordinateErrorCfT8rawValueSi_GSqS0__ to i8*), i8* bitcast (i64 (i1)* @_TFO8Location15CoordinateErrorg8rawValueSi to i8*), i8* bitcast (i64 (i1)* @_TFO8Location15CoordinateErrorg5_codeSi to i8*), i8* bitcast (i1 (%O8Location15CoordinateError*, %O8Location15CoordinateError*, %swift.type*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors9EquatableS_ZFS1_oi2eefTxx_Sb to i8*), i8* bitcast (i64 (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors8HashableS_FS1_g9hashValueSi to i8*), i8* bitcast (void (%GSqO8Location15CoordinateError_*, %Si*, %swift.type*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors16RawRepresentableS_FS1_CfT8rawValuewx8RawValue_GSqx_ to i8*), i8* bitcast (void (%Si*, %O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors16RawRepresentableS_FS1_g8rawValuewx8RawValue to i8*), i8* bitcast ({ i64, i64, i64 } (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g7_domainSS to i8*), i8* bitcast (i64 (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g5_codeSi to i8*), i8* bitcast (void (%GSqP__*, %O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g9_userInfoGSqP__ to i8*), i8* bitcast (i64 (%O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors5ErrorS_FS1_19_getEmbeddedNSErrorfT_GSqPs9AnyObject__ to i8*), i8* bitcast (void (%Vs11AnyHashable*, %O8Location15CoordinateError*, %swift.type*, i8**)* @_TTWO8Location15CoordinateErrors9_HashableS_FS1_14_toAnyHashablefT_Vs11AnyHashable to i8*), i8* bitcast (void (%V8Location8Location*, i64, i2, double, i64, i64, i64)* @_TFV8Location8LocationCfT10coordinateTOS_8PositionSd_4nameSS_S0_ to i8*), i8* bitcast (double (%V8Location8Location*)* @_TFV8Location8Location6lengthfT_Sd to i8*), i8* bitcast (%C8Location15LocationWrapper* (%V8Location8Location*)* @_TFV8Location8Location4wrapfT_CS_15LocationWrapper to i8*), i8* bitcast ({ i64, i2, double } (i64, i2, double, i64, i2, double, %swift.refcounted*, %swift.error**)* @_TF8Location8midpointFzT1xTOS_8PositionSd_1yTS0_Sd__TS0_Sd_ to i8*), i8* bitcast ({ i64, i2, double } (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapperg10coordinateTOS_8PositionSd_ to i8*), i8* bitcast (%1* (%0*, i8*)* @_TToFC8Location15LocationWrapperg4nameSS to i8*), i8* bitcast ({ i64, i64, i64 } (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapperg4nameSS to i8*), i8* bitcast (%C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)* @_TFC8Location15LocationWrappercfT10coordinateTOS_8PositionSd_4nameSS_S0_ to i8*), i8* bitcast (%C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %swift.type*)* @_TFC8Location15LocationWrapperCfT10coordinateTOS_8PositionSd_4nameSS_S0_ to i8*), i8* bitcast (double (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapper6lengthfT_Sd to i8*), i8* bitcast (double (%0*, i8*)* @_TToFC8Location15LocationWrapper6lengthfT_Sd to i8*), i8* bitcast (i1 (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapper8objcTestfT_Sb to i8*), i8* bitcast (i8 (%0*, i8*)* @_TToFC8Location15LocationWrapper8objcTestfT_Sb to i8*), i8* bitcast (i1 (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapper11nonobjcTestfT_Sb to i8*), i8* bitcast (void (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrapperD to i8*), i8* bitcast (void (%0*, i8*)* @_TToFC8Location15LocationWrapperE to i8*), i8* bitcast (%C8Location15LocationWrapper* (%C8Location15LocationWrapper*)* @_TFC8Location15LocationWrappercfT_S0_ to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor" to i8*), i8* bitcast (%C8Location15LocationWrapper* (%swift.type*)* @_TFC8Location15LocationWrapperCfT_S0_ to i8*), i8* bitcast (%0* (%0*, i8*)* @_TToFC8Location15LocationWrappercfT_S0_ to i8*), i8* bitcast ({ i64, i2, double } (i64, i2, double, i64, i2, double, %swift.type*, %swift.error**)* @_TZFC8Location17LocationFunctions8midpointfzT1xTOS_8PositionSd_1yTS1_Sd__TS1_Sd_ to i8*), i8* bitcast (i64 (double, %swift.type*)* @_TZFC8Location17LocationFunctions1ffSdSi to i8*), i8* bitcast (i64 (i8*, i8*, double)* @_TToZFC8Location17LocationFunctions1ffSdSi to i8*), i8* bitcast (void (%C8Location17LocationFunctions*)* @_TFC8Location17LocationFunctionsD to i8*), i8* bitcast (%C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* @_TFC8Location17LocationFunctionscfT_S0_ to i8*), i8* bitcast (%C8Location17LocationFunctions* (%swift.type*)* @_TFC8Location17LocationFunctionsCfT_S0_ to i8*), i8* bitcast (%3* (%3*, i8*)* @_TToFC8Location17LocationFunctionscfT_S0_ to i8*), i8* bitcast ([1 x i8*]* @_TWPO8Location15CoordinateErrors9EquatableS_ to i8*), i8* bitcast (i8** ()* @_TWaO8Location15CoordinateErrors9EquatableS_ to i8*), i8* bitcast ([3 x i8*]* @_TWPO8Location15CoordinateErrors8HashableS_ to i8*), i8* bitcast ([3 x i8*]* @_TWPO8Location15CoordinateErrors8HashableS_ to i8*), i8* bitcast (i8** ()* @_TWaO8Location15CoordinateErrors8HashableS_ to i8*), i8* bitcast ([3 x i8*]* @_TWPO8Location15CoordinateErrors16RawRepresentableS_ to i8*), i8* bitcast ([3 x i8*]* @_TWPO8Location15CoordinateErrors16RawRepresentableS_ to i8*), i8* bitcast (i8** ()* @_TWaO8Location15CoordinateErrors16RawRepresentableS_ to i8*), i8* bitcast ([4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_ to i8*), i8* bitcast ([4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_ to i8*), i8* bitcast (i8** ()* @_TWaO8Location15CoordinateErrors5ErrorS_ to i8*), i8* bitcast ([1 x i8*]* @_TWPO8Location15CoordinateErrors9_HashableS_ to i8*), i8* bitcast ([1 x i8*]* @_TWPO8Location15CoordinateErrors9_HashableS_ to i8*), i8* bitcast (i8** ()* @_TWaO8Location15CoordinateErrors9_HashableS_ to i8*), i8* bitcast ([26 x i8*]* @_TWVO8Location15CoordinateError to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location15CoordinateError to i8*), i8* bitcast (%swift.type* ()* @_TMaO8Location15CoordinateError to i8*), i8* bitcast (<{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError to i8*), i8* bitcast (%swift.type* @_TMO8Location15CoordinateError to i8*), i8* bitcast (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata" to i8*), i8* bitcast ([26 x i8*]* @_TWVO8Location8Position to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnO8Location8Position to i8*), i8* bitcast (%swift.type* ()* @_TMaO8Location8Position to i8*), i8* bitcast (<{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location8Position to i8*), i8* bitcast (%swift.type* @_TMO8Location8Position to i8*), i8* bitcast (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.1" to i8*), i8* bitcast ([20 x i8*]* @_TWVV8Location8Location to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnV8Location8Location to i8*), i8* bitcast (%swift.type* ()* @_TMaV8Location8Location to i8*), i8* bitcast (<{ i8**, i64, i64, %swift.type*, i64, i64 }>* @_TMfV8Location8Location to i8*), i8* bitcast (%swift.type* @_TMV8Location8Location to i8*), i8* bitcast (<{ i32, i16, i16, i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.2" to i8*), i8* bitcast (%objc_class* @"OBJC_METACLASS_$__TtC8Location15LocationWrapper" to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location15LocationWrapper to i8*), i8* bitcast (i64* @_TWoFC8Location15LocationWrapperCfT10coordinateTOS_8PositionSd_4nameSS_S0_ to i8*), i8* bitcast (i64* @_TWoFC8Location15LocationWrapper6lengthfT_Sd to i8*), i8* bitcast (i64* @_TWoFC8Location15LocationWrapper8objcTestfT_Sb to i8*), i8* bitcast (i64* @_TWoFC8Location15LocationWrapper11nonobjcTestfT_Sb to i8*), i8* bitcast (%swift.type* ()* @_TMaC8Location15LocationWrapper to i8*), i8* bitcast (%swift.type** @_TMLC8Location15LocationWrapper to i8*), i8* bitcast (<{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>* @_TMfC8Location15LocationWrapper to i8*), i8* bitcast (%swift.type* @_TMC8Location15LocationWrapper to i8*), i8* bitcast (<{ i32, i16, i16, i32, i32, i32, i32 }>* @"\01l__swift3_reflection_metadata.3" to i8*), i8* bitcast (%objc_class* @"OBJC_METACLASS_$__TtC8Location17LocationFunctions" to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }>* @_TMnC8Location17LocationFunctions to i8*), i8* bitcast (i64* @_TWoFC8Location17LocationFunctionsCfT_S0_ to i8*), i8* bitcast (%swift.type* ()* @_TMaC8Location17LocationFunctions to i8*), i8* bitcast (%swift.type** @_TMLC8Location17LocationFunctions to i8*), i8* bitcast (<{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>* @_TMfC8Location17LocationFunctions to i8*), i8* bitcast (%swift.type* @_TMC8Location17LocationFunctions to i8*), i8* bitcast (<{ i32, i16, i16, i32 }>* @"\01l__swift3_reflection_metadata.4" to i8*), i8* bitcast (i1** @"_swift_FORCE_LOAD_$_swiftFoundation_$_Location" to i8*), i8* bitcast (i1** @"_swift_FORCE_LOAD_$_swiftObjectiveC_$_Location" to i8*), i8* bitcast (i1** @"_swift_FORCE_LOAD_$_swiftDarwin_$_Location" to i8*), i8* bitcast (i1** @"_swift_FORCE_LOAD_$_swiftIOKit_$_Location" to i8*), i8* bitcast (i1** @"_swift_FORCE_LOAD_$_swiftDispatch_$_Location" to i8*), i8* bitcast (i1** @"_swift_FORCE_LOAD_$_swiftCoreGraphics_$_Location" to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_assocty_metadata" to i8*), i8* bitcast ([5 x %swift.protocol_conformance]* @"\01l_protocol_conformances" to i8*), i8* bitcast ([4 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32 }>* @"\01l__swift3_builtin_metadata" to i8*), i8* bitcast (i16* @__swift_reflection_version to i8*), i8* bitcast (%C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)* @_TFC8Location15LocationWrappercfT8locationVS_8Location_S0_ to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.5" to i8*), i8* bitcast (<{ i32, i32, i32, i32, i32, i32, i32 }>* @"\01l__swift3_capture_descriptor.8" to i8*), i8* bitcast (%C8Location15LocationWrapper* (%V8Location8Location*, %swift.type*)* @_TFC8Location15LocationWrapperCfT8locationVS_8Location_S0_ to i8*), i8* bitcast ([2 x i8*]* @objc_classes to i8*)], section "llvm.metadata", align 8
@llvm.compiler.used = appending global [11 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(init)" to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(allocWithZone:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(allocWithZone:)" to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(dealloc)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(dealloc)" to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(name)", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\01L_selector_data(length)", i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"\01L_selector_data(objcTest)", i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(.cxx_destruct)", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\01L_selector_data(f:)", i32 0, i32 0)], section "llvm.metadata", align 8

@_TMO8Location15CoordinateError = alias %swift.type, bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*)
@_TMO8Location8Position = alias %swift.type, bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location8Position, i32 0, i32 1) to %swift.type*)
@_TMV8Location8Location = alias %swift.type, bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type*, i64, i64 }>, <{ i8**, i64, i64, %swift.type*, i64, i64 }>* @_TMfV8Location8Location, i32 0, i32 1) to %swift.type*)
@_TMC8Location15LocationWrapper = alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>, <{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>* @_TMfC8Location15LocationWrapper, i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtC8Location15LocationWrapper" = alias %swift.type, %swift.type* @_TMC8Location15LocationWrapper
@_TMC8Location17LocationFunctions = alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>, <{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>* @_TMfC8Location17LocationFunctions, i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtC8Location17LocationFunctions" = alias %swift.type, %swift.type* @_TMC8Location17LocationFunctions

define i32 @main(i32, i8**) #0 {
entry:
  %2 = bitcast i8** %1 to i8*
  store i32 %0, i32* getelementptr inbounds (%Vs5Int32, %Vs5Int32* @_TZvOs11CommandLine5_argcVs5Int32, i32 0, i32 0), align 4
  %3 = load i64, i64* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %once_done, label %once_not_done

once_not_done:                                    ; preds = %entry
  call void @swift_once(i64* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4, i8* bitcast (void ()* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4 to i8*))
  br label %once_done

once_done:                                        ; preds = %once_not_done, %entry
  %5 = load i64, i64* @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_token4, align 8
  %6 = icmp eq i64 %5, -1
  call void @llvm.assume(i1 %6)
  store i8* %2, i8** getelementptr inbounds (%Sp, %Sp* @_TZvOs11CommandLine11_unsafeArgvGSpGSqGSpVs4Int8___, i32 0, i32 0), align 8
  ret i32 0
}

declare void @globalinit_33_FD9A49A256BEB6AF7C48013347ADC3BA_func4() #0

declare void @swift_once(i64*, i8*)

; Function Attrs: nounwind
declare void @llvm.assume(i1) #1

define i64 @_TFO8Location15CoordinateErrorg9hashValueSi(i1) #0 {
entry:
  %1 = alloca %Si, align 8
  %2 = bitcast %Si* %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2)
  switch i1 %0, label %3 [
    i1 false, label %4
    i1 true, label %5
  ]

; <label>:3                                       ; preds = %entry
  unreachable

; <label>:4                                       ; preds = %entry
  %._value2 = getelementptr inbounds %Si, %Si* %1, i32 0, i32 0
  store i64 0, i64* %._value2, align 8
  br label %6

; <label>:5                                       ; preds = %entry
  %._value = getelementptr inbounds %Si, %Si* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  br label %6

; <label>:6                                       ; preds = %4, %5
  %._value1 = getelementptr inbounds %Si, %Si* %1, i32 0, i32 0
  %7 = load i64, i64* %._value1, align 8
  %8 = call i64 @_TFSig9hashValueSi(i64 %7)
  %9 = bitcast %Si* %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %9)
  ret i64 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare i64 @_TFSig9hashValueSi(i64) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

define i8 @_TFO8Location15CoordinateErrorCfT8rawValueSi_GSqS0__(i64) #0 {
entry:
  %1 = alloca %O8Location15CoordinateError, align 1
  %2 = bitcast %O8Location15CoordinateError* %1 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %2)
  %3 = icmp eq i64 0, %0
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %entry
  %5 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  store i1 false, i1* %5, align 1
  br label %13

; <label>:6                                       ; preds = %entry
  br label %7

; <label>:7                                       ; preds = %6
  %8 = icmp eq i64 1, %0
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  store i1 true, i1* %10, align 1
  br label %13

; <label>:11                                      ; preds = %7
  br label %12

; <label>:12                                      ; preds = %11
  br label %17

; <label>:13                                      ; preds = %4, %9
  %14 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  %15 = load i1, i1* %14, align 1
  %16 = zext i1 %15 to i8
  br label %18

; <label>:17                                      ; preds = %12
  br label %18

; <label>:18                                      ; preds = %13, %17
  %19 = phi i8 [ 2, %17 ], [ %16, %13 ]
  %20 = bitcast %O8Location15CoordinateError* %1 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %20)
  ret i8 %19
}

define i64 @_TFO8Location15CoordinateErrorg8rawValueSi(i1) #0 {
entry:
  switch i1 %0, label %1 [
    i1 false, label %2
    i1 true, label %3
  ]

; <label>:1                                       ; preds = %entry
  unreachable

; <label>:2                                       ; preds = %entry
  br label %4

; <label>:3                                       ; preds = %entry
  br label %4

; <label>:4                                       ; preds = %2, %3
  %5 = phi i64 [ 1, %3 ], [ 0, %2 ]
  ret i64 %5
}

define i64 @_TFO8Location15CoordinateErrorg5_codeSi(i1) #0 {
entry:
  switch i1 %0, label %1 [
    i1 false, label %2
    i1 true, label %3
  ]

; <label>:1                                       ; preds = %entry
  unreachable

; <label>:2                                       ; preds = %entry
  br label %4

; <label>:3                                       ; preds = %entry
  br label %4

; <label>:4                                       ; preds = %2, %3
  %5 = phi i64 [ 1, %3 ], [ 0, %2 ]
  ret i64 %5
}

define i1 @_TTWO8Location15CoordinateErrors9EquatableS_ZFS1_oi2eefTxx_Sb(%O8Location15CoordinateError* noalias nocapture dereferenceable(1), %O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type*, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %O8Location15CoordinateError* %0 to %swift.opaque*
  %4 = bitcast %O8Location15CoordinateError* %1 to %swift.opaque*
  %5 = call i1 @_TFsoi2eeuRxs16RawRepresentablewx8RawValues9EquatablerFTxx_Sb(%swift.opaque* noalias nocapture %3, %swift.opaque* noalias nocapture %4, %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_TWPO8Location15CoordinateErrors16RawRepresentableS_, i32 0, i32 0), i8** @_TWPSis9Equatables) #10
  ret i1 %5
}

declare i1 @_TFsoi2eeuRxs16RawRepresentablewx8RawValues9EquatablerFTxx_Sb(%swift.opaque* noalias nocapture, %swift.opaque* noalias nocapture, %swift.type*, i8**, i8**) #0

define i64 @_TTWO8Location15CoordinateErrors8HashableS_FS1_g9hashValueSi(%O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %1 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %0, i32 0, i32 0
  %2 = load i1, i1* %1, align 1
  %3 = call i64 @_TFO8Location15CoordinateErrorg9hashValueSi(i1 %2) #10
  ret i64 %3
}

define void @_TTWO8Location15CoordinateErrors16RawRepresentableS_FS1_CfT8rawValuewx8RawValue_GSqx_(%GSqO8Location15CoordinateError_* noalias nocapture sret, %Si* noalias nocapture dereferenceable(8), %swift.type*, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %._value = getelementptr inbounds %Si, %Si* %1, i32 0, i32 0
  %3 = load i64, i64* %._value, align 8
  %4 = call i8 @_TFO8Location15CoordinateErrorCfT8rawValueSi_GSqS0__(i64 %3) #10
  %5 = bitcast %GSqO8Location15CoordinateError_* %0 to i8*
  store i8 %4, i8* %5, align 1
  ret void
}

define void @_TTWO8Location15CoordinateErrors16RawRepresentableS_FS1_g8rawValuewx8RawValue(%Si* noalias nocapture sret, %O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  %3 = load i1, i1* %2, align 1
  %4 = call i64 @_TFO8Location15CoordinateErrorg8rawValueSi(i1 %3) #10
  %._value = getelementptr inbounds %Si, %Si* %0, i32 0, i32 0
  store i64 %4, i64* %._value, align 8
  ret void
}

define { i64, i64, i64 } @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g7_domainSS(%O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %1 = alloca %O8Location15CoordinateError, align 1
  %2 = bitcast %O8Location15CoordinateError* %1 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %2)
  %3 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %0, i32 0, i32 0
  %4 = load i1, i1* %3, align 1
  %5 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  store i1 %4, i1* %5, align 1
  %6 = bitcast %O8Location15CoordinateError* %1 to %swift.opaque*
  %7 = call { i64, i64, i64 } @_TFEsPs5Errorg7_domainSS(%swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_, i32 0, i32 0), %swift.opaque* noalias nocapture %6) #10
  %8 = extractvalue { i64, i64, i64 } %7, 0
  %9 = extractvalue { i64, i64, i64 } %7, 1
  %10 = extractvalue { i64, i64, i64 } %7, 2
  %11 = bitcast %O8Location15CoordinateError* %1 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %11)
  %12 = insertvalue { i64, i64, i64 } undef, i64 %8, 0
  %13 = insertvalue { i64, i64, i64 } %12, i64 %9, 1
  %14 = insertvalue { i64, i64, i64 } %13, i64 %10, 2
  ret { i64, i64, i64 } %14
}

declare { i64, i64, i64 } @_TFEsPs5Errorg7_domainSS(%swift.type*, i8**, %swift.opaque* noalias nocapture) #0

define i64 @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g5_codeSi(%O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %1 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %0, i32 0, i32 0
  %2 = load i1, i1* %1, align 1
  %3 = call i64 @_TFO8Location15CoordinateErrorg5_codeSi(i1 %2) #10
  ret i64 %3
}

define void @_TTWO8Location15CoordinateErrors5ErrorS_FS1_g9_userInfoGSqP__(%GSqP__* noalias nocapture sret, %O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = alloca %O8Location15CoordinateError, align 1
  %3 = bitcast %O8Location15CoordinateError* %2 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %3)
  %4 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  %5 = load i1, i1* %4, align 1
  %6 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %2, i32 0, i32 0
  store i1 %5, i1* %6, align 1
  %7 = bitcast %O8Location15CoordinateError* %2 to %swift.opaque*
  call void @_TFEsPs5Errorg9_userInfoGSqP__(%GSqP__* noalias nocapture sret %0, %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_, i32 0, i32 0), %swift.opaque* noalias nocapture %7) #10
  %8 = bitcast %O8Location15CoordinateError* %2 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %8)
  ret void
}

declare void @_TFEsPs5Errorg9_userInfoGSqP__(%GSqP__* noalias nocapture sret, %swift.type*, i8**, %swift.opaque* noalias nocapture) #0

define i64 @_TTWO8Location15CoordinateErrors5ErrorS_FS1_19_getEmbeddedNSErrorfT_GSqPs9AnyObject__(%O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %1 = alloca %O8Location15CoordinateError, align 1
  %2 = bitcast %O8Location15CoordinateError* %1 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %2)
  %3 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %0, i32 0, i32 0
  %4 = load i1, i1* %3, align 1
  %5 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  store i1 %4, i1* %5, align 1
  %6 = bitcast %O8Location15CoordinateError* %1 to %swift.opaque*
  %7 = call i64 @_TFEsPs5Error19_getEmbeddedNSErrorfT_GSqPs9AnyObject__(%swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_, i32 0, i32 0), %swift.opaque* noalias nocapture %6) #10
  %8 = bitcast %O8Location15CoordinateError* %1 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %8)
  ret i64 %7
}

declare i64 @_TFEsPs5Error19_getEmbeddedNSErrorfT_GSqPs9AnyObject__(%swift.type*, i8**, %swift.opaque* noalias nocapture) #0

define void @_TTWO8Location15CoordinateErrors9_HashableS_FS1_14_toAnyHashablefT_Vs11AnyHashable(%Vs11AnyHashable* noalias nocapture sret, %O8Location15CoordinateError* noalias nocapture dereferenceable(1), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = alloca %O8Location15CoordinateError, align 1
  %3 = bitcast %O8Location15CoordinateError* %2 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %3)
  %4 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %1, i32 0, i32 0
  %5 = load i1, i1* %4, align 1
  %6 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %2, i32 0, i32 0
  store i1 %5, i1* %6, align 1
  %7 = bitcast %O8Location15CoordinateError* %2 to %swift.opaque*
  call void @_TFEsPs8Hashable14_toAnyHashablefT_Vs11AnyHashable(%Vs11AnyHashable* noalias nocapture sret %0, %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_TWPO8Location15CoordinateErrors8HashableS_, i32 0, i32 0), %swift.opaque* noalias nocapture %7) #10
  %8 = bitcast %O8Location15CoordinateError* %2 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %8)
  ret void
}

declare void @_TFEsPs8Hashable14_toAnyHashablefT_Vs11AnyHashable(%Vs11AnyHashable* noalias nocapture sret, %swift.type*, i8**, %swift.opaque* noalias nocapture) #0

define void @_TFV8Location8LocationCfT10coordinateTOS_8PositionSd_4nameSS_S0_(%V8Location8Location* noalias nocapture sret, i64, i2, double, i64, i64, i64) #0 {
entry:
  %7 = alloca %V8Location8Location, align 8
  %8 = bitcast %V8Location8Location* %7 to i8*
  call void @llvm.lifetime.start(i64 48, i8* %8)
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %7, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %9 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %11 = bitcast [1 x i8]* %10 to i2*
  store i2 %2, i2* %11, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  store double %3, double* %.coordinate.elt1._value, align 8
  %12 = inttoptr i64 %6 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %12) #1
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %7, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %13 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %4, i64* %13, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  store i64 %5, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %14 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  store i64 %6, i64* %14, align 8
  %15 = inttoptr i64 %6 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %15) #1
  %16 = inttoptr i64 %6 to %objc_object*
  call void @swift_unknownRelease(%objc_object* %16) #1
  %17 = inttoptr i64 %6 to %objc_object*
  call void @swift_unknownRelease(%objc_object* %17) #1
  %18 = bitcast %V8Location8Location* %7 to i8*
  call void @llvm.lifetime.end(i64 48, i8* %18)
  %.coordinate2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate2.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 0
  %19 = bitcast %O8Location8Position* %.coordinate2.elt to i64*
  store i64 %1, i64* %19, align 8
  %20 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate2.elt, i32 0, i32 1
  %21 = bitcast [1 x i8]* %20 to i2*
  store i2 %2, i2* %21, align 8
  %.coordinate2.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 2
  %.coordinate2.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate2.elt3, i32 0, i32 0
  store double %3, double* %.coordinate2.elt3._value, align 8
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %22 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  store i64 %4, i64* %22, align 8
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  store i64 %5, i64* %.name4._core._countAndFlags._value, align 8
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %23 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to i64*
  store i64 %6, i64* %23, align 8
  ret void
}

declare void @swift_unknownRetain(%objc_object*)

declare void @swift_unknownRelease(%objc_object*)

define double @_TFV8Location8Location6lengthfT_Sd(%V8Location8Location* noalias nocapture dereferenceable(48)) #0 {
entry:
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %1 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %4 = bitcast [1 x i8]* %3 to i2*
  %5 = load i2, i2* %4, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %6 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %7 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %8 = load i64, i64* %7, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %9 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %10 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %11 = load i64, i64* %10, align 8
  switch i2 %5, label %12 [
    i2 0, label %13
    i2 1, label %14
    i2 -2, label %16
  ]

; <label>:12                                      ; preds = %entry
  unreachable

; <label>:13                                      ; preds = %entry
  br label %18

; <label>:14                                      ; preds = %entry
  %15 = bitcast i64 %2 to double
  br label %28

; <label>:16                                      ; preds = %entry
  %17 = trunc i64 %2 to i1
  br label %34

; <label>:18                                      ; preds = %13
  %19 = phi i64 [ %2, %13 ]
  %20 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %19, i64 %19)
  %21 = extractvalue { i64, i1 } %20, 0
  %22 = extractvalue { i64, i1 } %20, 1
  br i1 %22, label %40, label %23

; <label>:23                                      ; preds = %18
  %24 = sitofp i64 %21 to double
  %25 = fmul double %6, %6
  %26 = fadd double %24, %25
  %27 = call double @sqrt(double %26)
  br label %38

; <label>:28                                      ; preds = %14
  %29 = phi double [ %15, %14 ]
  %30 = fmul double %29, %29
  %31 = fmul double %6, %6
  %32 = fadd double %30, %31
  %33 = call double @sqrt(double %32)
  br label %38

; <label>:34                                      ; preds = %16
  %35 = phi i1 [ %17, %16 ]
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %34
  br label %38

; <label>:37                                      ; preds = %34
  br label %38

; <label>:38                                      ; preds = %23, %28, %36, %37
  %39 = phi double [ 0.000000e+00, %37 ], [ %6, %36 ], [ %33, %28 ], [ %27, %23 ]
  ret double %39

; <label>:40                                      ; preds = %18
  call void @llvm.trap()
  unreachable
}

; Function Attrs: nounwind readnone
declare double @sqrt(double) #3

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #4

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #5

define %C8Location15LocationWrapper* @_TFV8Location8Location4wrapfT_CS_15LocationWrapper(%V8Location8Location* noalias nocapture dereferenceable(48)) #6 {
entry:
  %1 = alloca %V8Location8Location, align 8
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %2 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %5 = bitcast [1 x i8]* %4 to i2*
  %6 = load i2, i2* %5, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %7 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %8 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %9 = load i64, i64* %8, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %10 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %11 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %12 = load i64, i64* %11, align 8
  %13 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %14 = inttoptr i64 %12 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %14) #1
  %.coordinate2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %.coordinate2.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 0
  %15 = bitcast %O8Location8Position* %.coordinate2.elt to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate2.elt, i32 0, i32 1
  %17 = bitcast [1 x i8]* %16 to i2*
  store i2 %6, i2* %17, align 8
  %.coordinate2.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 2
  %.coordinate2.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate2.elt3, i32 0, i32 0
  store double %7, double* %.coordinate2.elt3._value, align 8
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %18 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  store i64 %9, i64* %18, align 8
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  store i64 %10, i64* %.name4._core._countAndFlags._value, align 8
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %19 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to i64*
  store i64 %12, i64* %19, align 8
  %20 = call %C8Location15LocationWrapper* @_TFC8Location15LocationWrapperCfT8locationVS_8Location_S0_(%V8Location8Location* noalias nocapture dereferenceable(48) %1, %swift.type* %13)
  ret %C8Location15LocationWrapper* %20
}

define %C8Location15LocationWrapper* @_TFC8Location15LocationWrapperCfT8locationVS_8Location_S0_(%V8Location8Location* noalias nocapture dereferenceable(48), %swift.type*) #6 {
entry:
  %2 = alloca %V8Location8Location, align 8
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %3 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i2*
  %7 = load i2, i2* %6, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %8 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %9 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %10 = load i64, i64* %9, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %11 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %12 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %13 = load i64, i64* %12, align 8
  %14 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %15 = bitcast %swift.type* %14 to %objc_class*
  %16 = load i8*, i8** @"\01L_selector(allocWithZone:)", align 8
  %17 = bitcast %objc_class* %15 to i8*
  %18 = call %0* bitcast (void ()* @objc_msgSend to %0* (i8*, i8*, i8*)*)(i8* %17, i8* %16, i8* null)
  %19 = bitcast %0* %18 to %C8Location15LocationWrapper*
  %.coordinate2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 0
  %.coordinate2.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 0
  %20 = bitcast %O8Location8Position* %.coordinate2.elt to i64*
  store i64 %4, i64* %20, align 8
  %21 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate2.elt, i32 0, i32 1
  %22 = bitcast [1 x i8]* %21 to i2*
  store i2 %7, i2* %22, align 8
  %.coordinate2.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 2
  %.coordinate2.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate2.elt3, i32 0, i32 0
  store double %8, double* %.coordinate2.elt3._value, align 8
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 1
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %23 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  store i64 %10, i64* %23, align 8
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  store i64 %11, i64* %.name4._core._countAndFlags._value, align 8
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %24 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to i64*
  store i64 %13, i64* %24, align 8
  %25 = call %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT8locationVS_8Location_S0_(%V8Location8Location* noalias nocapture dereferenceable(48) %2, %C8Location15LocationWrapper* %19)
  ret %C8Location15LocationWrapper* %25
}

; Function Attrs: nounwind readnone
define %swift.type* @_TMaC8Location15LocationWrapper() #7 {
entry:
  %0 = load %swift.type*, %swift.type** @_TMLC8Location15LocationWrapper, align 8
  %1 = icmp eq %swift.type* %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call %objc_class* @rt_swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>, <{ void (%C8Location15LocationWrapper*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, { i64, i2, double } (%C8Location15LocationWrapper*)*, { i64, i64, i64 } (%C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*)*, %C8Location15LocationWrapper* (%V8Location8Location*, %C8Location15LocationWrapper*)*, double (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i1 (%C8Location15LocationWrapper*)*, i64 }>* @_TMfC8Location15LocationWrapper, i32 0, i32 2) to %objc_class*))
  %3 = bitcast %objc_class* %2 to %swift.type*
  store atomic %swift.type* %3, %swift.type** @_TMLC8Location15LocationWrapper release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %4 = phi %swift.type* [ %0, %entry ], [ %3, %cacheIsNull ]
  ret %swift.type* %4
}

define hidden { i64, i2, double } @_TFV8Location8Locationg10coordinateTOS_8PositionSd_(%V8Location8Location* noalias nocapture dereferenceable(48)) #6 {
entry:
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %1 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %4 = bitcast [1 x i8]* %3 to i2*
  %5 = load i2, i2* %4, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %6 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %7 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %8 = load i64, i64* %7, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %9 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %10 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i2, double } undef, i64 %2, 0
  %13 = insertvalue { i64, i2, double } %12, i2 %5, 1
  %14 = insertvalue { i64, i2, double } %13, double %6, 2
  ret { i64, i2, double } %14
}

define hidden { i64, i64, i64 } @_TFV8Location8Locationg4nameSS(%V8Location8Location* noalias nocapture dereferenceable(48)) #6 {
entry:
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %1 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %4 = bitcast [1 x i8]* %3 to i2*
  %5 = load i2, i2* %4, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %6 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %7 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %8 = load i64, i64* %7, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %9 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %10 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %11 = load i64, i64* %10, align 8
  %12 = inttoptr i64 %11 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %12) #1
  %13 = insertvalue { i64, i64, i64 } undef, i64 %8, 0
  %14 = insertvalue { i64, i64, i64 } %13, i64 %9, 1
  %15 = insertvalue { i64, i64, i64 } %14, i64 %11, 2
  ret { i64, i64, i64 } %15
}

define { i64, i2, double } @_TF8Location8midpointFzT1xTOS_8PositionSd_1yTS0_Sd__TS0_Sd_(i64, i2, double, i64, i2, double, %swift.refcounted*, %swift.error**) #6 {
entry:
  %8 = alloca %Sb, align 1
  %9 = alloca %Sb, align 1
  %10 = fmul double %2, %2
  %11 = fmul double %5, %5
  %12 = fadd double %10, %11
  %13 = call double @sqrt(double %12)
  switch i2 %4, label %14 [
    i2 0, label %15
    i2 1, label %16
    i2 -2, label %18
  ]

; <label>:14                                      ; preds = %entry
  unreachable

; <label>:15                                      ; preds = %entry
  br label %20

; <label>:16                                      ; preds = %entry
  %17 = bitcast i64 %3 to double
  br label %31

; <label>:18                                      ; preds = %entry
  %19 = trunc i64 %3 to i1
  br label %44

; <label>:20                                      ; preds = %15
  %21 = phi i64 [ %3, %15 ]
  switch i2 %1, label %22 [
    i2 0, label %23
    i2 1, label %30
    i2 -2, label %30
  ]

; <label>:22                                      ; preds = %20
  unreachable

; <label>:23                                      ; preds = %20
  br label %24

; <label>:24                                      ; preds = %23
  %25 = phi i64 [ %0, %23 ]
  %26 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %25, i64 %21)
  %27 = extractvalue { i64, i1 } %26, 0
  %28 = extractvalue { i64, i1 } %26, 1
  br i1 %28, label %82, label %29

; <label>:29                                      ; preds = %24
  br label %73

; <label>:30                                      ; preds = %20, %20
  br label %67

; <label>:31                                      ; preds = %16
  %32 = phi double [ %17, %16 ]
  switch i2 %1, label %33 [
    i2 0, label %43
    i2 1, label %34
    i2 -2, label %43
  ]

; <label>:33                                      ; preds = %31
  unreachable

; <label>:34                                      ; preds = %31
  %35 = bitcast i64 %0 to double
  br label %36

; <label>:36                                      ; preds = %34
  %37 = phi double [ %35, %34 ]
  %38 = fmul double %37, %37
  %39 = fmul double %32, %32
  %40 = fadd double %38, %39
  %41 = call double @sqrt(double %40)
  %42 = bitcast double %41 to i64
  br label %73

; <label>:43                                      ; preds = %31, %31
  br label %67

; <label>:44                                      ; preds = %18
  %45 = phi i1 [ %19, %18 ]
  switch i2 %1, label %46 [
    i2 0, label %66
    i2 1, label %66
    i2 -2, label %47
  ]

; <label>:46                                      ; preds = %44
  unreachable

; <label>:47                                      ; preds = %44
  %48 = trunc i64 %0 to i1
  br label %49

; <label>:49                                      ; preds = %47
  %50 = phi i1 [ %48, %47 ]
  %51 = bitcast %Sb* %8 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %51)
  %._value = getelementptr inbounds %Sb, %Sb* %8, i32 0, i32 0
  store i1 %50, i1* %._value, align 1
  %52 = bitcast %Sb* %9 to i8*
  call void @llvm.lifetime.start(i64 1, i8* %52)
  %._value1 = getelementptr inbounds %Sb, %Sb* %9, i32 0, i32 0
  store i1 %45, i1* %._value1, align 1
  %53 = bitcast %Sb* %8 to %swift.opaque*
  %54 = bitcast %Sb* %9 to %swift.opaque*
  %55 = call i1 @_TFsoi2neuRxs9EquatablerFTxx_Sb(%swift.opaque* noalias nocapture %53, %swift.opaque* noalias nocapture %54, %swift.type* @_TMSb, i8** @_TWPSbs9Equatables)
  %56 = bitcast %Sb* %9 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %56)
  %57 = bitcast %Sb* %8 to i8*
  call void @llvm.lifetime.end(i64 1, i8* %57)
  br i1 %55, label %58, label %64

; <label>:58                                      ; preds = %49
  %59 = call { %swift.error*, %swift.opaque* } @swift_allocError(%swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_, i32 0, i32 0), %swift.opaque* null, i1 false)
  %60 = extractvalue { %swift.error*, %swift.opaque* } %59, 0
  %61 = extractvalue { %swift.error*, %swift.opaque* } %59, 1
  %62 = bitcast %swift.opaque* %61 to %O8Location15CoordinateError*
  %63 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %62, i32 0, i32 0
  store i1 true, i1* %63, align 1
  call void @swift_willThrow(%swift.error* %60) #1
  br label %80

; <label>:64                                      ; preds = %49
  %65 = zext i1 %50 to i64
  br label %73

; <label>:66                                      ; preds = %44, %44
  br label %67

; <label>:67                                      ; preds = %30, %43, %66
  %68 = call { %swift.error*, %swift.opaque* } @swift_allocError(%swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_, i32 0, i32 0), %swift.opaque* null, i1 false)
  %69 = extractvalue { %swift.error*, %swift.opaque* } %68, 0
  %70 = extractvalue { %swift.error*, %swift.opaque* } %68, 1
  %71 = bitcast %swift.opaque* %70 to %O8Location15CoordinateError*
  %72 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %71, i32 0, i32 0
  store i1 false, i1* %72, align 1
  call void @swift_willThrow(%swift.error* %69) #1
  br label %80

; <label>:73                                      ; preds = %29, %36, %64
  %74 = phi i64 [ %65, %64 ], [ %42, %36 ], [ %27, %29 ]
  %75 = phi i2 [ -2, %64 ], [ 1, %36 ], [ 0, %29 ]
  %76 = phi double [ %13, %64 ], [ %13, %36 ], [ %13, %29 ]
  %77 = insertvalue { i64, i2, double } undef, i64 %74, 0
  %78 = insertvalue { i64, i2, double } %77, i2 %75, 1
  %79 = insertvalue { i64, i2, double } %78, double %76, 2
  ret { i64, i2, double } %79

; <label>:80                                      ; preds = %58, %67
  %81 = phi %swift.error* [ %69, %67 ], [ %60, %58 ]
  store %swift.error* %81, %swift.error** %7, align 8
  ret { i64, i2, double } undef

; <label>:82                                      ; preds = %24
  call void @llvm.trap()
  unreachable
}

declare { %swift.error*, %swift.opaque* } @swift_allocError(%swift.type*, i8**, %swift.opaque*, i1)

declare void @swift_willThrow(%swift.error*)

declare i1 @_TFsoi2neuRxs9EquatablerFTxx_Sb(%swift.opaque* noalias nocapture, %swift.opaque* noalias nocapture, %swift.type*, i8**) #6

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #4

define { i64, i2, double } @_TFC8Location15LocationWrapperg10coordinateTOS_8PositionSd_(%C8Location15LocationWrapper*) #6 {
entry:
  %1 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %0, i32 0, i32 1
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %2 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %5 = bitcast [1 x i8]* %4 to i2*
  %6 = load i2, i2* %5, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %7 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %8 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %9 = load i64, i64* %8, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %10 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %11 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %12 = load i64, i64* %11, align 8
  %13 = insertvalue { i64, i2, double } undef, i64 %3, 0
  %14 = insertvalue { i64, i2, double } %13, i2 %6, 1
  %15 = insertvalue { i64, i2, double } %14, double %7, 2
  ret { i64, i2, double } %15
}

define internal %1* @_TToFC8Location15LocationWrapperg4nameSS(%0*, i8*) unnamed_addr #6 {
entry:
  %2 = bitcast %0* %0 to %C8Location15LocationWrapper*
  %3 = bitcast %C8Location15LocationWrapper* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call %C8Location15LocationWrapper* bitcast (%objc_object* (%objc_object*)* @objc_retain to %C8Location15LocationWrapper* (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %2) #1
  %9 = call { i64, i64, i64 } @_TFC8Location15LocationWrapperg4nameSS(%C8Location15LocationWrapper* %2) #10
  %10 = extractvalue { i64, i64, i64 } %9, 0
  %11 = extractvalue { i64, i64, i64 } %9, 1
  %12 = extractvalue { i64, i64, i64 } %9, 2
  call void bitcast (void (%objc_object*)* @objc_release to void (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %2) #1
  %13 = call %CSo8NSString* @_TFE10FoundationSS19_bridgeToObjectiveCfT_CSo8NSString(i64 %10, i64 %11, i64 %12) #10
  %14 = inttoptr i64 %12 to %objc_object*
  call void @swift_unknownRelease(%objc_object* %14) #1
  %15 = tail call %CSo8NSString* bitcast (%objc_object* (%objc_object*)* @objc_autoreleaseReturnValue to %CSo8NSString* (%CSo8NSString*)*)(%CSo8NSString* %13) #1
  %16 = bitcast %CSo8NSString* %15 to %1*
  ret %1* %16
}

declare %objc_object* @objc_retain(%objc_object*)

define { i64, i64, i64 } @_TFC8Location15LocationWrapperg4nameSS(%C8Location15LocationWrapper*) #6 {
entry:
  %1 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %0, i32 0, i32 1
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %2 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %5 = bitcast [1 x i8]* %4 to i2*
  %6 = load i2, i2* %5, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %7 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %8 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %9 = load i64, i64* %8, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %10 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %11 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %12 = load i64, i64* %11, align 8
  %13 = inttoptr i64 %12 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %13) #1
  %14 = insertvalue { i64, i64, i64 } undef, i64 %9, 0
  %15 = insertvalue { i64, i64, i64 } %14, i64 %10, 1
  %16 = insertvalue { i64, i64, i64 } %15, i64 %12, 2
  ret { i64, i64, i64 } %16
}

declare void @objc_release(%objc_object*)

declare %CSo8NSString* @_TFE10FoundationSS19_bridgeToObjectiveCfT_CSo8NSString(i64, i64, i64) #6

declare %objc_object* @objc_autoreleaseReturnValue(%objc_object*)

define %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT10coordinateTOS_8PositionSd_4nameSS_S0_(i64, i2, double, i64, i64, i64, %C8Location15LocationWrapper*) #6 {
entry:
  %7 = alloca %C8Location15LocationWrapper*, align 8
  %call.aggresult = alloca %V8Location8Location, align 8
  %objc_super = alloca %objc_super, align 8
  %8 = bitcast %C8Location15LocationWrapper** %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8)
  store %C8Location15LocationWrapper* %6, %C8Location15LocationWrapper** %7, align 8
  %9 = inttoptr i64 %5 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %9) #1
  %10 = bitcast %V8Location8Location* %call.aggresult to i8*
  call void @llvm.lifetime.start(i64 48, i8* %10)
  call void @_TFV8Location8LocationCfT10coordinateTOS_8PositionSd_4nameSS_S0_(%V8Location8Location* noalias nocapture sret %call.aggresult, i64 %0, i2 %1, double %2, i64 %3, i64 %4, i64 %5)
  %call.aggresult.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %call.aggresult, i32 0, i32 0
  %call.aggresult.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %call.aggresult.coordinate, i32 0, i32 0
  %11 = bitcast %O8Location8Position* %call.aggresult.coordinate.elt to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %call.aggresult.coordinate.elt, i32 0, i32 1
  %14 = bitcast [1 x i8]* %13 to i2*
  %15 = load i2, i2* %14, align 8
  %call.aggresult.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %call.aggresult.coordinate, i32 0, i32 2
  %call.aggresult.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %call.aggresult.coordinate.elt1, i32 0, i32 0
  %16 = load double, double* %call.aggresult.coordinate.elt1._value, align 8
  %call.aggresult.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %call.aggresult, i32 0, i32 1
  %call.aggresult.name._core = getelementptr inbounds %SS, %SS* %call.aggresult.name, i32 0, i32 0
  %call.aggresult.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %call.aggresult.name._core, i32 0, i32 0
  %17 = bitcast %GSqSv_* %call.aggresult.name._core._baseAddress to i64*
  %18 = load i64, i64* %17, align 8
  %call.aggresult.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %call.aggresult.name._core, i32 0, i32 1
  %call.aggresult.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %call.aggresult.name._core._countAndFlags, i32 0, i32 0
  %19 = load i64, i64* %call.aggresult.name._core._countAndFlags._value, align 8
  %call.aggresult.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %call.aggresult.name._core, i32 0, i32 2
  %20 = bitcast %GSqPs9AnyObject__* %call.aggresult.name._core._owner to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %V8Location8Location* %call.aggresult to i8*
  call void @llvm.lifetime.end(i64 48, i8* %22)
  %23 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %6, i32 0, i32 1
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %23, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %24 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  store i64 %12, i64* %24, align 8
  %25 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %26 = bitcast [1 x i8]* %25 to i2*
  store i2 %15, i2* %26, align 8
  %.coordinate.elt2 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt2._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt2, i32 0, i32 0
  store double %16, double* %.coordinate.elt2._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %23, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %27 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %18, i64* %27, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  store i64 %19, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %28 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  store i64 %21, i64* %28, align 8
  %29 = bitcast %C8Location15LocationWrapper* %6 to %CSo8NSObject*
  %30 = bitcast %CSo8NSObject* %29 to %objc_object*
  %31 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %32 = bitcast %swift.type* %31 to %objc_class*
  %33 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %30, %objc_object** %33, align 8
  %34 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %32, %objc_class** %34, align 8
  %35 = load i8*, i8** @"\01L_selector(init)", align 8
  %36 = call %2* bitcast (void ()* @objc_msgSendSuper2 to %2* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %35)
  %37 = bitcast %2* %36 to %CSo8NSObject*
  %38 = bitcast %CSo8NSObject* %37 to %C8Location15LocationWrapper*
  store %C8Location15LocationWrapper* %38, %C8Location15LocationWrapper** %7, align 8
  %39 = call %C8Location15LocationWrapper* bitcast (%objc_object* (%objc_object*)* @objc_retain to %C8Location15LocationWrapper* (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %38) #1
  %40 = inttoptr i64 %5 to %objc_object*
  call void @swift_unknownRelease(%objc_object* %40) #1
  call void bitcast (void (%objc_object*)* @objc_release to void (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %38) #1
  %41 = bitcast %C8Location15LocationWrapper** %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41)
  ret %C8Location15LocationWrapper* %38
}

declare void @objc_msgSendSuper2()

define %C8Location15LocationWrapper* @_TFC8Location15LocationWrapperCfT10coordinateTOS_8PositionSd_4nameSS_S0_(i64, i2, double, i64, i64, i64, %swift.type*) #6 {
entry:
  %7 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %8 = bitcast %swift.type* %7 to %objc_class*
  %9 = load i8*, i8** @"\01L_selector(allocWithZone:)", align 8
  %10 = bitcast %objc_class* %8 to i8*
  %11 = call %0* bitcast (void ()* @objc_msgSend to %0* (i8*, i8*, i8*)*)(i8* %10, i8* %9, i8* null)
  %12 = bitcast %0* %11 to %C8Location15LocationWrapper*
  %13 = call %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT10coordinateTOS_8PositionSd_4nameSS_S0_(i64 %0, i2 %1, double %2, i64 %3, i64 %4, i64 %5, %C8Location15LocationWrapper* %12)
  ret %C8Location15LocationWrapper* %13
}

declare void @objc_msgSend()

define %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT8locationVS_8Location_S0_(%V8Location8Location* noalias nocapture dereferenceable(48), %C8Location15LocationWrapper*) #6 {
entry:
  %2 = alloca %C8Location15LocationWrapper*, align 8
  %objc_super = alloca %objc_super, align 8
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %3 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i2*
  %7 = load i2, i2* %6, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %8 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %9 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %10 = load i64, i64* %9, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %11 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %12 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %C8Location15LocationWrapper** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14)
  store %C8Location15LocationWrapper* %1, %C8Location15LocationWrapper** %2, align 8
  %15 = inttoptr i64 %13 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %15) #1
  %16 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %1, i32 0, i32 1
  %.coordinate2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %16, i32 0, i32 0
  %.coordinate2.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 0
  %17 = bitcast %O8Location8Position* %.coordinate2.elt to i64*
  store i64 %4, i64* %17, align 8
  %18 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate2.elt, i32 0, i32 1
  %19 = bitcast [1 x i8]* %18 to i2*
  store i2 %7, i2* %19, align 8
  %.coordinate2.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 2
  %.coordinate2.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate2.elt3, i32 0, i32 0
  store double %8, double* %.coordinate2.elt3._value, align 8
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %16, i32 0, i32 1
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %20 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  store i64 %10, i64* %20, align 8
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  store i64 %11, i64* %.name4._core._countAndFlags._value, align 8
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %21 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to i64*
  store i64 %13, i64* %21, align 8
  %22 = bitcast %C8Location15LocationWrapper* %1 to %CSo8NSObject*
  %23 = bitcast %CSo8NSObject* %22 to %objc_object*
  %24 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %25 = bitcast %swift.type* %24 to %objc_class*
  %26 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %23, %objc_object** %26, align 8
  %27 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %25, %objc_class** %27, align 8
  %28 = load i8*, i8** @"\01L_selector(init)", align 8
  %29 = call %2* bitcast (void ()* @objc_msgSendSuper2 to %2* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %28)
  %30 = bitcast %2* %29 to %CSo8NSObject*
  %31 = bitcast %CSo8NSObject* %30 to %C8Location15LocationWrapper*
  store %C8Location15LocationWrapper* %31, %C8Location15LocationWrapper** %2, align 8
  %32 = call %C8Location15LocationWrapper* bitcast (%objc_object* (%objc_object*)* @objc_retain to %C8Location15LocationWrapper* (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %31) #1
  %33 = inttoptr i64 %13 to %objc_object*
  call void @swift_unknownRelease(%objc_object* %33) #1
  call void bitcast (void (%objc_object*)* @objc_release to void (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %31) #1
  %34 = bitcast %C8Location15LocationWrapper** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34)
  ret %C8Location15LocationWrapper* %31
}

define double @_TFC8Location15LocationWrapper6lengthfT_Sd(%C8Location15LocationWrapper*) #6 {
entry:
  %1 = alloca %V8Location8Location, align 8
  %2 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %0, i32 0, i32 1
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %3 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i2*
  %7 = load i2, i2* %6, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %8 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %9 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %10 = load i64, i64* %9, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %11 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %12 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %13 = load i64, i64* %12, align 8
  %.coordinate2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %.coordinate2.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 0
  %14 = bitcast %O8Location8Position* %.coordinate2.elt to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate2.elt, i32 0, i32 1
  %16 = bitcast [1 x i8]* %15 to i2*
  store i2 %7, i2* %16, align 8
  %.coordinate2.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 2
  %.coordinate2.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate2.elt3, i32 0, i32 0
  store double %8, double* %.coordinate2.elt3._value, align 8
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %17 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  store i64 %10, i64* %17, align 8
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  store i64 %11, i64* %.name4._core._countAndFlags._value, align 8
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %18 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to i64*
  store i64 %13, i64* %18, align 8
  %19 = call double @_TFV8Location8Location6lengthfT_Sd(%V8Location8Location* noalias nocapture dereferenceable(48) %1)
  ret double %19
}

define internal double @_TToFC8Location15LocationWrapper6lengthfT_Sd(%0*, i8*) unnamed_addr #6 {
entry:
  %2 = bitcast %0* %0 to %C8Location15LocationWrapper*
  %3 = bitcast %C8Location15LocationWrapper* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call %C8Location15LocationWrapper* bitcast (%objc_object* (%objc_object*)* @objc_retain to %C8Location15LocationWrapper* (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %2) #1
  %9 = call double @_TFC8Location15LocationWrapper6lengthfT_Sd(%C8Location15LocationWrapper* %2) #10
  call void bitcast (void (%objc_object*)* @objc_release to void (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %2) #1
  ret double %9
}

define i1 @_TFC8Location15LocationWrapper8objcTestfT_Sb(%C8Location15LocationWrapper*) #6 {
entry:
  ret i1 true
}

define internal signext i8 @_TToFC8Location15LocationWrapper8objcTestfT_Sb(%0*, i8*) unnamed_addr #6 {
entry:
  %2 = bitcast %0* %0 to %C8Location15LocationWrapper*
  %3 = bitcast %C8Location15LocationWrapper* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call %C8Location15LocationWrapper* bitcast (%objc_object* (%objc_object*)* @objc_retain to %C8Location15LocationWrapper* (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %2) #1
  %9 = call i1 @_TFC8Location15LocationWrapper8objcTestfT_Sb(%C8Location15LocationWrapper* %2) #10
  call void bitcast (void (%objc_object*)* @objc_release to void (%C8Location15LocationWrapper*)*)(%C8Location15LocationWrapper* %2) #1
  %10 = call i8 @_TF10ObjectiveC22_convertBoolToObjCBoolFSbVS_8ObjCBool(i1 %9) #10
  ret i8 %10
}

declare i8 @_TF10ObjectiveC22_convertBoolToObjCBoolFSbVS_8ObjCBool(i1) #6

define i1 @_TFC8Location15LocationWrapper11nonobjcTestfT_Sb(%C8Location15LocationWrapper*) #6 {
entry:
  ret i1 true
}

define void @_TFC8Location15LocationWrapperD(%C8Location15LocationWrapper*) #6 {
entry:
  %objc_super = alloca %objc_super, align 8
  %1 = bitcast %C8Location15LocationWrapper* %0 to %CSo8NSObject*
  %2 = bitcast %CSo8NSObject* %1 to %objc_object*
  %3 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %4 = bitcast %swift.type* %3 to %objc_class*
  %5 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %2, %objc_object** %5, align 8
  %6 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %4, %objc_class** %6, align 8
  %7 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %7)
  ret void
}

define void @_TToFC8Location15LocationWrapperE(%0*, i8*) #6 {
entry:
  %2 = bitcast %0* %0 to %C8Location15LocationWrapper*
  %3 = bitcast %C8Location15LocationWrapper* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %2, i32 0, i32 1
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %8, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %9 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %10 = load %objc_object*, %objc_object** %9, align 8
  call void @swift_unknownRelease(%objc_object* %10) #1
  ret void
}

define hidden void @_TFC8Location15LocationWrapperg8locationVS_8Location(%V8Location8Location* noalias nocapture sret, %C8Location15LocationWrapper*) #6 {
entry:
  %2 = getelementptr inbounds %C8Location15LocationWrapper, %C8Location15LocationWrapper* %1, i32 0, i32 1
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %3 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i2*
  %7 = load i2, i2* %6, align 8
  %.coordinate.elt1 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate.elt1._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt1, i32 0, i32 0
  %8 = load double, double* %.coordinate.elt1._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %9 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  %10 = load i64, i64* %9, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %11 = load i64, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %12 = bitcast %GSqPs9AnyObject__* %.name._core._owner to i64*
  %13 = load i64, i64* %12, align 8
  %14 = inttoptr i64 %13 to %objc_object*
  call void @swift_unknownRetain(%objc_object* %14) #1
  %.coordinate2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate2.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 0
  %15 = bitcast %O8Location8Position* %.coordinate2.elt to i64*
  store i64 %4, i64* %15, align 8
  %16 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate2.elt, i32 0, i32 1
  %17 = bitcast [1 x i8]* %16 to i2*
  store i2 %7, i2* %17, align 8
  %.coordinate2.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate2, i32 0, i32 2
  %.coordinate2.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate2.elt3, i32 0, i32 0
  store double %8, double* %.coordinate2.elt3._value, align 8
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %18 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  store i64 %10, i64* %18, align 8
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  store i64 %11, i64* %.name4._core._countAndFlags._value, align 8
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %19 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to i64*
  store i64 %13, i64* %19, align 8
  ret void
}

define %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT_S0_(%C8Location15LocationWrapper*) #6 {
entry:
  br label %1

; <label>:1                                       ; preds = %entry
  br label %2

; <label>:2                                       ; preds = %1
  br label %3

; <label>:3                                       ; preds = %2
  br label %4

; <label>:4                                       ; preds = %3
  br label %5

; <label>:5                                       ; preds = %4
  br label %6

; <label>:6                                       ; preds = %5
  br label %7

; <label>:7                                       ; preds = %6
  br label %8

; <label>:8                                       ; preds = %7
  br label %9

; <label>:9                                       ; preds = %8
  br label %10

; <label>:10                                      ; preds = %9
  %11 = call noalias %swift.refcounted* @rt_swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata, i32 0, i32 2), i64 80, i64 7) #1
  %12 = bitcast %swift.refcounted* %11 to <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>*
  %13 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %12, i32 0, i32 1
  %._startPtrOrData = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %13, i32 0, i32 0
  store i64 ptrtoint ([7 x i8]* @1 to i64), i64* %._startPtrOrData, align 8
  %._utf8CodeUnitCount = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %13, i32 0, i32 1
  store i64 6, i64* %._utf8CodeUnitCount, align 8
  %._flags = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %13, i32 0, i32 2
  store i8 2, i8* %._flags, align 8
  %14 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %12, i32 0, i32 3
  %._startPtrOrData1 = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %14, i32 0, i32 0
  store i64 ptrtoint ([15 x i8]* @2 to i64), i64* %._startPtrOrData1, align 8
  %._utf8CodeUnitCount2 = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %14, i32 0, i32 1
  store i64 14, i64* %._utf8CodeUnitCount2, align 8
  %._flags3 = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %14, i32 0, i32 2
  store i8 2, i8* %._flags3, align 8
  %15 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %12, i32 0, i32 5
  %._value = getelementptr inbounds %Su, %Su* %15, i32 0, i32 0
  store i64 74, i64* %._value, align 8
  %16 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %12, i32 0, i32 6
  %._value4 = getelementptr inbounds %Su, %Su* %16, i32 0, i32 0
  store i64 14, i64* %._value4, align 8
  call void @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx(%swift.opaque* noalias nocapture sret undef, i64 ptrtoint ([25 x i8]* @0 to i64), i64 24, i8 2, i8* bitcast (void (i64, i64, %swift.refcounted*)* @_TPA__TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_ to i8*), %swift.refcounted* %11)
  br label %17

; <label>:17                                      ; preds = %10
  call void @llvm.trap()
  unreachable
}

define %C8Location15LocationWrapper* @_TFC8Location15LocationWrapperCfT_S0_(%swift.type*) #6 {
entry:
  %1 = call %swift.type* @_TMaC8Location15LocationWrapper() #4
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = load i8*, i8** @"\01L_selector(allocWithZone:)", align 8
  %4 = bitcast %objc_class* %2 to i8*
  %5 = call %0* bitcast (void ()* @objc_msgSend to %0* (i8*, i8*, i8*)*)(i8* %4, i8* %3, i8* null)
  %6 = bitcast %0* %5 to %C8Location15LocationWrapper*
  %7 = call %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT_S0_(%C8Location15LocationWrapper* %6)
  ret %C8Location15LocationWrapper* %7
}

define internal %0* @_TToFC8Location15LocationWrappercfT_S0_(%0*, i8*) unnamed_addr #6 {
entry:
  %2 = bitcast %0* %0 to %C8Location15LocationWrapper*
  %3 = bitcast %C8Location15LocationWrapper* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call %C8Location15LocationWrapper* @_TFC8Location15LocationWrappercfT_S0_(%C8Location15LocationWrapper* %2) #10
  %9 = bitcast %C8Location15LocationWrapper* %8 to %0*
  ret %0* %9
}

define { i64, i2, double } @_TZFC8Location17LocationFunctions8midpointfzT1xTOS_8PositionSd_1yTS1_Sd__TS1_Sd_(i64, i2, double, i64, i2, double, %swift.type*, %swift.error**) #6 {
entry:
  %8 = call { i64, i2, double } @_TZFC8Location17LocationFunctions8midpointfzT1xTOS_8PositionSd_1yTS1_Sd__TS1_Sd_(i64 %0, i2 %1, double %2, i64 %3, i2 %4, double %5, %swift.type* %6, %swift.error** nocapture %7)
  %9 = extractvalue { i64, i2, double } %8, 0
  %10 = extractvalue { i64, i2, double } %8, 1
  %11 = extractvalue { i64, i2, double } %8, 2
  %12 = load %swift.error*, %swift.error** %7, align 8
  %13 = icmp ne %swift.error* %12, null
  br i1 %13, label %21, label %14

; <label>:14                                      ; preds = %entry
  %15 = phi i64 [ %9, %entry ]
  %16 = phi i2 [ %10, %entry ]
  %17 = phi double [ %11, %entry ]
  %18 = insertvalue { i64, i2, double } undef, i64 %15, 0
  %19 = insertvalue { i64, i2, double } %18, i2 %16, 1
  %20 = insertvalue { i64, i2, double } %19, double %17, 2
  ret { i64, i2, double } %20

; <label>:21                                      ; preds = %entry
  %22 = phi %swift.error* [ %12, %entry ]
  store %swift.error* null, %swift.error** %7, align 8
  store %swift.error* %22, %swift.error** %7, align 8
  ret { i64, i2, double } undef
}

define i64 @_TZFC8Location17LocationFunctions1ffSdSi(double, %swift.type*) #6 {
entry:
  %2 = call double @pow(double %0, double %0)
  br label %3

; <label>:3                                       ; preds = %entry
  %4 = bitcast double %2 to i64
  %5 = lshr i64 %4, 52
  %6 = and i64 %5, 2047
  %7 = icmp ult i64 %6, 2047
  %8 = call i1 @llvm.expect.i1(i1 %7, i1 true)
  br i1 %8, label %9, label %20

; <label>:9                                       ; preds = %3
  %10 = fcmp olt double 0xC3E0000000000001, %2
  %11 = call i1 @llvm.expect.i1(i1 %10, i1 true)
  br i1 %11, label %12, label %19

; <label>:12                                      ; preds = %9
  %13 = fcmp olt double %2, 0x43E0000000000000
  %14 = call i1 @llvm.expect.i1(i1 %13, i1 true)
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  br label %16

; <label>:16                                      ; preds = %15
  %17 = fptosi double %2 to i64
  br label %21

; <label>:18                                      ; preds = %12
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([89 x i8]* @8 to i64), i64 88, i8 2, i32 1)
  unreachable

; <label>:19                                      ; preds = %9
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([86 x i8]* @7 to i64), i64 85, i8 2, i32 1)
  unreachable

; <label>:20                                      ; preds = %3
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([77 x i8]* @5 to i64), i64 76, i8 2, i32 1)
  unreachable

; <label>:21                                      ; preds = %16
  ret i64 %17
}

define internal i64 @_TToZFC8Location17LocationFunctions1ffSdSi(i8*, i8*, double) unnamed_addr #6 {
entry:
  %3 = bitcast i8* %0 to %objc_class*
  %4 = call %swift.type* @swift_getObjCClassMetadata(%objc_class* %3) #4
  %5 = call i64 @_TZFC8Location17LocationFunctions1ffSdSi(double %2, %swift.type* %4) #10
  ret i64 %5
}

define void @_TFC8Location17LocationFunctionsD(%C8Location17LocationFunctions*) #6 {
entry:
  %objc_super = alloca %objc_super, align 8
  %1 = bitcast %C8Location17LocationFunctions* %0 to %CSo8NSObject*
  %2 = bitcast %CSo8NSObject* %1 to %objc_object*
  %3 = call %swift.type* @_TMaC8Location17LocationFunctions() #4
  %4 = bitcast %swift.type* %3 to %objc_class*
  %5 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %2, %objc_object** %5, align 8
  %6 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %4, %objc_class** %6, align 8
  %7 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %7)
  ret void
}

define %C8Location17LocationFunctions* @_TFC8Location17LocationFunctionscfT_S0_(%C8Location17LocationFunctions*) #6 {
entry:
  %1 = alloca %C8Location17LocationFunctions*, align 8
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %C8Location17LocationFunctions** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2)
  store %C8Location17LocationFunctions* %0, %C8Location17LocationFunctions** %1, align 8
  %3 = bitcast %C8Location17LocationFunctions* %0 to %CSo8NSObject*
  %4 = bitcast %CSo8NSObject* %3 to %objc_object*
  %5 = call %swift.type* @_TMaC8Location17LocationFunctions() #4
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %4, %objc_object** %7, align 8
  %8 = getelementptr %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(init)", align 8
  %10 = call %2* bitcast (void ()* @objc_msgSendSuper2 to %2* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  %11 = bitcast %2* %10 to %CSo8NSObject*
  %12 = bitcast %CSo8NSObject* %11 to %C8Location17LocationFunctions*
  store %C8Location17LocationFunctions* %12, %C8Location17LocationFunctions** %1, align 8
  %13 = bitcast %C8Location17LocationFunctions** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %13)
  ret %C8Location17LocationFunctions* %12
}

define %C8Location17LocationFunctions* @_TFC8Location17LocationFunctionsCfT_S0_(%swift.type*) #6 {
entry:
  %1 = call %swift.type* @_TMaC8Location17LocationFunctions() #4
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = load i8*, i8** @"\01L_selector(allocWithZone:)", align 8
  %4 = bitcast %objc_class* %2 to i8*
  %5 = call %3* bitcast (void ()* @objc_msgSend to %3* (i8*, i8*, i8*)*)(i8* %4, i8* %3, i8* null)
  %6 = bitcast %3* %5 to %C8Location17LocationFunctions*
  %7 = call %C8Location17LocationFunctions* @_TFC8Location17LocationFunctionscfT_S0_(%C8Location17LocationFunctions* %6)
  ret %C8Location17LocationFunctions* %7
}

define internal %3* @_TToFC8Location17LocationFunctionscfT_S0_(%3*, i8*) unnamed_addr #6 {
entry:
  %2 = bitcast %3* %0 to %C8Location17LocationFunctions*
  %3 = bitcast %C8Location17LocationFunctions* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call %C8Location17LocationFunctions* @_TFC8Location17LocationFunctionscfT_S0_(%C8Location17LocationFunctions* %2) #10
  %9 = bitcast %C8Location17LocationFunctions* %8 to %3*
  ret %3* %9
}

define linkonce_odr hidden void @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx(%swift.opaque* noalias nocapture sret, i64, i64, i8, i8*, %swift.refcounted*) #6 {
entry:
  %6 = alloca %Vs6UInt64, align 8
  %7 = alloca %Si, align 8
  %8 = bitcast %Vs6UInt64* %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8)
  %9 = bitcast %Si* %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9)
  %10 = and i8 %3, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %84, label %12

; <label>:12                                      ; preds = %entry
  %._value = getelementptr inbounds %Vs6UInt64, %Vs6UInt64* %6, i32 0, i32 0
  store i64 0, i64* %._value, align 8
  %._value1 = getelementptr inbounds %Si, %Si* %7, i32 0, i32 0
  store i64 0, i64* %._value1, align 8
  %13 = trunc i64 %1 to i32
  %14 = zext i32 %13 to i64
  %15 = icmp eq i64 %1, %14
  %16 = select i1 %15, i1 false, i1 true
  br i1 %16, label %98, label %17

; <label>:17                                      ; preds = %12
  %18 = icmp ult i32 %13, 55296
  br i1 %18, label %23, label %19

; <label>:19                                      ; preds = %17
  %20 = icmp ugt i32 %13, 57343
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %19
  br label %27

; <label>:22                                      ; preds = %19
  br label %24

; <label>:23                                      ; preds = %17
  br label %24

; <label>:24                                      ; preds = %23, %22
  %25 = icmp ule i32 %13, 1114111
  br i1 %25, label %29, label %26

; <label>:26                                      ; preds = %24
  br label %27

; <label>:27                                      ; preds = %26, %21
  br label %28

; <label>:28                                      ; preds = %27
  call void @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @50 to i64), i64 57, i8 2, i64 ptrtoint ([117 x i8]* @49 to i64), i64 116, i8 2, i64 79, i32 1)
  unreachable

; <label>:29                                      ; preds = %24
  %30 = and i32 %13, 255
  %31 = trunc i32 %30 to i8
  %32 = zext i8 %31 to i32
  %33 = icmp eq i32 %30, %32
  %34 = select i1 %33, i1 false, i1 true
  %35 = icmp uge i32 %13, 128
  br i1 %35, label %37, label %36

; <label>:36                                      ; preds = %29
  br label %75

; <label>:37                                      ; preds = %29
  %38 = lshr i32 %13, 6
  %39 = and i32 %38, 255
  %40 = trunc i32 %39 to i8
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %39, %41
  %43 = select i1 %42, i1 false, i1 true
  %44 = icmp ult i32 %38, 32
  br i1 %44, label %69, label %45

; <label>:45                                      ; preds = %37
  %46 = lshr i32 %38, 6
  %47 = and i32 %46, 255
  %48 = trunc i32 %47 to i8
  %49 = zext i8 %48 to i32
  %50 = icmp eq i32 %47, %49
  %51 = select i1 %50, i1 false, i1 true
  %52 = icmp ult i32 %46, 16
  br i1 %52, label %63, label %53

; <label>:53                                      ; preds = %45
  %54 = lshr i32 %46, 6
  %55 = and i8 %48, 63
  %56 = or i8 %55, -128
  %57 = or i32 %54, 240
  %58 = trunc i32 %57 to i8
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %57, %59
  %61 = select i1 %60, i1 false, i1 true
  br i1 %61, label %99, label %62

; <label>:62                                      ; preds = %53
  call void @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_(i8 %58, %Vs6UInt64* nocapture dereferenceable(8) %6, %Si* nocapture dereferenceable(8) %7)
  br label %65

; <label>:63                                      ; preds = %45
  %64 = or i8 %48, -32
  br label %65

; <label>:65                                      ; preds = %63, %62
  %66 = phi i8 [ %56, %62 ], [ %64, %63 ]
  %67 = and i8 %40, 63
  %68 = or i8 %67, -128
  call void @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_(i8 %66, %Vs6UInt64* nocapture dereferenceable(8) %6, %Si* nocapture dereferenceable(8) %7)
  br label %71

; <label>:69                                      ; preds = %37
  %70 = or i8 %40, -64
  br label %71

; <label>:71                                      ; preds = %69, %65
  %72 = phi i8 [ %68, %65 ], [ %70, %69 ]
  %73 = and i8 %31, 63
  %74 = or i8 %73, -128
  call void @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_(i8 %72, %Vs6UInt64* nocapture dereferenceable(8) %6, %Si* nocapture dereferenceable(8) %7)
  br label %75

; <label>:75                                      ; preds = %71, %36
  %76 = phi i8 [ %31, %36 ], [ %74, %71 ]
  call void @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_(i8 %76, %Vs6UInt64* nocapture dereferenceable(8) %6, %Si* nocapture dereferenceable(8) %7)
  %77 = bitcast %Vs6UInt64* %6 to i8*
  %78 = ptrtoint i8* %77 to i64
  %._value2 = getelementptr inbounds %Si, %Si* %7, i32 0, i32 0
  %79 = load i64, i64* %._value2, align 8
  %80 = call { i64, i64 } @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_(i64 %78, i64 %79)
  %81 = extractvalue { i64, i64 } %80, 0
  %82 = extractvalue { i64, i64 } %80, 1
  %83 = bitcast i8* %4 to void (i64, i64, %swift.refcounted*)*
  call void %83(i64 %81, i64 %82, %swift.refcounted* %5)
  br label %93

; <label>:84                                      ; preds = %entry
  %85 = icmp eq i64 %1, 0
  br i1 %85, label %96, label %86

; <label>:86                                      ; preds = %84
  %87 = inttoptr i64 %1 to i8*
  %88 = ptrtoint i8* %87 to i64
  %89 = call { i64, i64 } @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_(i64 %88, i64 %2)
  %90 = extractvalue { i64, i64 } %89, 0
  %91 = extractvalue { i64, i64 } %89, 1
  %92 = bitcast i8* %4 to void (i64, i64, %swift.refcounted*)*
  call void %92(i64 %90, i64 %91, %swift.refcounted* %5)
  br label %93

; <label>:93                                      ; preds = %86, %75
  %94 = bitcast %Si* %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %94)
  %95 = bitcast %Vs6UInt64* %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95)
  ret void

; <label>:96                                      ; preds = %84
  br label %97

; <label>:97                                      ; preds = %96
  call void @rt_swift_release(%swift.refcounted* %5) #1
  call void @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @50 to i64), i64 57, i8 2, i64 ptrtoint ([117 x i8]* @49 to i64), i64 116, i8 2, i64 66, i32 1)
  unreachable

; <label>:98                                      ; preds = %12
  call void @llvm.trap()
  unreachable

; <label>:99                                      ; preds = %53
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden void @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_(i64, i64, i64, i64, i8, i64, i64, i8, i64, i64) #6 {
entry:
  %10 = call noalias %swift.refcounted* @rt_swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata.7, i32 0, i32 2), i64 72, i64 7) #1
  %11 = bitcast %swift.refcounted* %10 to <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>*
  %12 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %11, i32 0, i32 1
  %._startPtrOrData = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %12, i32 0, i32 0
  store i64 %5, i64* %._startPtrOrData, align 8
  %._utf8CodeUnitCount = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %12, i32 0, i32 1
  store i64 %6, i64* %._utf8CodeUnitCount, align 8
  %._flags = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %12, i32 0, i32 2
  store i8 %7, i8* %._flags, align 8
  %13 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %11, i32 0, i32 3
  %._position = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %13, i32 0, i32 0
  %14 = bitcast %GSqGSPVs5UInt8__* %._position to i64*
  store i64 %0, i64* %14, align 8
  %._end = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %13, i32 0, i32 1
  %15 = bitcast %GSqGSPVs5UInt8__* %._end to i64*
  store i64 %1, i64* %15, align 8
  %16 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %11, i32 0, i32 4
  %._value = getelementptr inbounds %Su, %Su* %16, i32 0, i32 0
  store i64 %8, i64* %._value, align 8
  %17 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %11, i32 0, i32 5
  %._value1 = getelementptr inbounds %Su, %Su* %17, i32 0, i32 0
  store i64 %9, i64* %._value1, align 8
  call void @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx(%swift.opaque* noalias nocapture sret undef, i64 %2, i64 %3, i8 %4, i8* bitcast (void (i64, i64, %swift.refcounted*)* @_TPA__TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_ to i8*), %swift.refcounted* %10)
  ret void
}

define private void @objectdestroy(%swift.refcounted*) #6 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>*
  call void @rt_swift_deallocObject(%swift.refcounted* %0, i64 80, i64 7)
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_deallocObject(%swift.refcounted*, i64, i64) #8 {
entry:
  %load = load void (%swift.refcounted*, i64, i64)*, void (%swift.refcounted*, i64, i64)** @_swift_deallocObject
  tail call void %load(%swift.refcounted* %0, i64 %1, i64 %2)
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %swift.refcounted* @rt_swift_allocObject(%swift.type*, i64, i64) #8 {
entry:
  %load = load %swift.refcounted* (%swift.type*, i64, i64)*, %swift.refcounted* (%swift.type*, i64, i64)** @_swift_allocObject
  %3 = tail call %swift.refcounted* %load(%swift.type* %0, i64 %1, i64 %2)
  ret %swift.refcounted* %3
}

define internal void @_TPA__TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_(i64, i64, %swift.refcounted*) #6 {
entry:
  %3 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %3, i32 0, i32 1
  %._startPtrOrData = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %4, i32 0, i32 0
  %5 = load i64, i64* %._startPtrOrData, align 8
  %._utf8CodeUnitCount = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %4, i32 0, i32 1
  %6 = load i64, i64* %._utf8CodeUnitCount, align 8
  %._flags = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %4, i32 0, i32 2
  %7 = load i8, i8* %._flags, align 8
  %8 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %3, i32 0, i32 3
  %._startPtrOrData1 = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %8, i32 0, i32 0
  %9 = load i64, i64* %._startPtrOrData1, align 8
  %._utf8CodeUnitCount2 = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %8, i32 0, i32 1
  %10 = load i64, i64* %._utf8CodeUnitCount2, align 8
  %._flags3 = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %8, i32 0, i32 2
  %11 = load i8, i8* %._flags3, align 8
  %12 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %3, i32 0, i32 5
  %._value = getelementptr inbounds %Su, %Su* %12, i32 0, i32 0
  %13 = load i64, i64* %._value, align 8
  %14 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %Vs12StaticString, [7 x i8], %Su, %Su }>* %3, i32 0, i32 6
  %._value4 = getelementptr inbounds %Su, %Su* %14, i32 0, i32 0
  %15 = load i64, i64* %._value4, align 8
  call void @rt_swift_release(%swift.refcounted* %2) #1
  tail call void @_TFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_(i64 %0, i64 %1, i64 %5, i64 %6, i8 %7, i64 %9, i64 %10, i8 %11, i64 %13, i64 %15) #6
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_release(%swift.refcounted*) #8 {
entry:
  %load = load void (%swift.refcounted*)*, void (%swift.refcounted*)** @_swift_release
  tail call void %load(%swift.refcounted* %0)
  ret void
}

; Function Attrs: nounwind readnone
declare double @pow(double, double) #3

; Function Attrs: nounwind readnone
declare i1 @llvm.expect.i1(i1, i1) #4

; Function Attrs: noinline
declare void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64, i64, i8, i64, i64, i8, i32) #9

declare %swift.type* @swift_getObjCClassMetadata(%objc_class*)

; Function Attrs: nounwind readnone
define %swift.type* @_TMaC8Location17LocationFunctions() #7 {
entry:
  %0 = load %swift.type*, %swift.type** @_TMLC8Location17LocationFunctions, align 8
  %1 = icmp eq %swift.type* %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call %objc_class* @rt_swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>, <{ void (%C8Location17LocationFunctions*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, i64, i8*, %C8Location17LocationFunctions* (%C8Location17LocationFunctions*)* }>* @_TMfC8Location17LocationFunctions, i32 0, i32 2) to %objc_class*))
  %3 = bitcast %objc_class* %2 to %swift.type*
  store atomic %swift.type* %3, %swift.type** @_TMLC8Location17LocationFunctions release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %4 = phi %swift.type* [ %0, %entry ], [ %3, %cacheIsNull ]
  ret %swift.type* %4
}

define i8** @_TWaO8Location15CoordinateErrors9EquatableS_() #6 {
entry:
  ret i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @_TWPO8Location15CoordinateErrors9EquatableS_, i32 0, i32 0)
}

define i8** @_TWaO8Location15CoordinateErrors8HashableS_() #6 {
entry:
  ret i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_TWPO8Location15CoordinateErrors8HashableS_, i32 0, i32 0)
}

declare %swift.type* @_TMaSi() #6

define i8** @_TWaO8Location15CoordinateErrors16RawRepresentableS_() #6 {
entry:
  ret i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_TWPO8Location15CoordinateErrors16RawRepresentableS_, i32 0, i32 0)
}

define i8** @_TWaO8Location15CoordinateErrors5ErrorS_() #6 {
entry:
  ret i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_TWPO8Location15CoordinateErrors5ErrorS_, i32 0, i32 0)
}

define i8** @_TWaO8Location15CoordinateErrors9_HashableS_() #6 {
entry:
  ret i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @_TWPO8Location15CoordinateErrors9_HashableS_, i32 0, i32 0)
}

; Function Attrs: nounwind
define linkonce_odr hidden void @__swift_noop_void_return(i8*, %swift.type*) #1 {
entry:
  ret void
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memcpy1_1(i8*, i8*, %swift.type*) #1 {
entry:
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 1, i32 1, i1 false)
  ret i8* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_noop_self_return(i8*, %swift.type*) #1 {
entry:
  ret i8* %0
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memcpy_array1_1(i8*, i8*, i64, %swift.type*) #1 {
entry:
  %4 = mul nuw i64 %2, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 %4, i32 1, i1 false)
  ret i8* %0
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memmove_array1_1(i8*, i8*, i64, %swift.type*) #1 {
entry:
  %4 = mul nuw i64 %2, 1
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %0, i8* %1, i64 %4, i32 1, i1 false)
  ret i8* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

define linkonce_odr hidden void @_TwxsO8Location15CoordinateError(%swift.opaque* %dest, i32 %index, %swift.type* %CoordinateError) #6 {
entry:
  %0 = bitcast %swift.opaque* %dest to %O8Location15CoordinateError*
  %1 = bitcast %O8Location15CoordinateError* %0 to i8*
  %2 = trunc i32 %index to i8
  %3 = add i8 %2, 2
  store i8 %3, i8* %1, align 1
  ret void
}

define linkonce_odr hidden i32 @_TwxgO8Location15CoordinateError(%swift.opaque* %src, %swift.type* %CoordinateError) #6 {
entry:
  %0 = bitcast %swift.opaque* %src to %O8Location15CoordinateError*
  %1 = bitcast %O8Location15CoordinateError* %0 to i8*
  %2 = load i8, i8* %1, align 1
  %3 = zext i8 %2 to i32
  %4 = sub i32 %3, 2
  %5 = icmp slt i32 %4, 0
  %6 = select i1 %5, i32 -1, i32 %4
  ret i32 %6
}

define linkonce_odr hidden i32 @_TwugO8Location15CoordinateError(%swift.opaque* %value, %swift.type* %CoordinateError) #6 {
entry:
  %0 = bitcast %swift.opaque* %value to %O8Location15CoordinateError*
  %1 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %0, i32 0, i32 0
  %2 = load i1, i1* %1, align 1
  %3 = zext i1 %2 to i32
  ret i32 %3
}

define linkonce_odr hidden void @_TwupO8Location15CoordinateError(%swift.opaque* %value, %swift.type* %CoordinateError) #6 {
entry:
  ret void
}

define linkonce_odr hidden void @_TwuiO8Location15CoordinateError(%swift.opaque* %value, i32 %tag, %swift.type* %CoordinateError) #6 {
entry:
  %0 = bitcast %swift.opaque* %value to %O8Location15CoordinateError*
  %1 = trunc i32 %tag to i1
  %2 = getelementptr inbounds %O8Location15CoordinateError, %O8Location15CoordinateError* %0, i32 0, i32 0
  store i1 %1, i1* %2, align 1
  ret void
}

define private %swift.type** @get_field_types_CoordinateError(%swift.type* %CoordinateError) #6 {
entry:
  %0 = load %swift.type**, %swift.type*** @field_type_vector_CoordinateError, align 8
  %1 = icmp eq %swift.type** %0, null
  br i1 %1, label %build_field_types, label %done

build_field_types:                                ; preds = %entry
  %2 = call noalias i8* @rt_swift_slowAlloc(i64 0, i64 7) #1
  %3 = bitcast i8* %2 to %swift.type**
  %4 = ptrtoint %swift.type** %3 to i64
  %5 = cmpxchg i64* bitcast (%swift.type*** @field_type_vector_CoordinateError to i64*), i64 0, i64 %4 seq_cst seq_cst
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  br i1 %6, label %done, label %race_lost

race_lost:                                        ; preds = %build_field_types
  call void @rt_swift_slowDealloc(i8* %2, i64 0, i64 7) #1
  %8 = inttoptr i64 %7 to %swift.type**
  br label %done

done:                                             ; preds = %race_lost, %build_field_types, %entry
  %9 = phi %swift.type** [ %0, %entry ], [ %3, %build_field_types ], [ %8, %race_lost ]
  ret %swift.type** %9
}

; Function Attrs: nounwind readnone
define %swift.type* @_TMaO8Location15CoordinateError() #7 {
entry:
  ret %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location15CoordinateError, i32 0, i32 1) to %swift.type*)
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memcpy9_8(i8*, i8*, %swift.type*) #1 {
entry:
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 9, i32 8, i1 false)
  ret i8* %0
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memcpy_array16_8(i8*, i8*, i64, %swift.type*) #1 {
entry:
  %4 = mul nuw i64 %2, 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 %4, i32 8, i1 false)
  ret i8* %0
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memmove_array16_8(i8*, i8*, i64, %swift.type*) #1 {
entry:
  %4 = mul nuw i64 %2, 16
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %0, i8* %1, i64 %4, i32 8, i1 false)
  ret i8* %0
}

define linkonce_odr hidden i32 @_TwugO8Location8Position(%swift.opaque* %value, %swift.type* %Position) #6 {
entry:
  %0 = bitcast %swift.opaque* %value to %O8Location8Position*
  %1 = bitcast %O8Location8Position* %0 to i64*
  %2 = load i64, i64* %1, align 8
  %3 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %0, i32 0, i32 1
  %4 = bitcast [1 x i8]* %3 to i2*
  %5 = load i2, i2* %4, align 8
  %6 = zext i2 %5 to i32
  %7 = sub i32 %6, 3
  ret i32 %7
}

define linkonce_odr hidden void @_TwupO8Location8Position(%swift.opaque* %value, %swift.type* %Position) #6 {
entry:
  ret void
}

define linkonce_odr hidden void @_TwuiO8Location8Position(%swift.opaque* %value, i32 %tag, %swift.type* %Position) #6 {
entry:
  %0 = bitcast %swift.opaque* %value to %O8Location8Position*
  %1 = add i32 %tag, 3
  %2 = trunc i32 %1 to i2
  %3 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %0, i32 0, i32 1
  %4 = bitcast [1 x i8]* %3 to i2*
  store i2 %2, i2* %4, align 8
  ret void
}

define private %swift.type** @get_field_types_Position(%swift.type* %Position) #6 {
entry:
  %0 = load %swift.type**, %swift.type*** @field_type_vector_Position, align 8
  %1 = icmp eq %swift.type** %0, null
  br i1 %1, label %build_field_types, label %done

build_field_types:                                ; preds = %entry
  %2 = call noalias i8* @rt_swift_slowAlloc(i64 24, i64 7) #1
  %3 = bitcast i8* %2 to %swift.type**
  %4 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 0
  store %swift.type* @_TMSi, %swift.type** %4, align 8
  %5 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 1
  store %swift.type* @_TMSd, %swift.type** %5, align 8
  %6 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 2
  store %swift.type* @_TMSb, %swift.type** %6, align 8
  %7 = ptrtoint %swift.type** %3 to i64
  %8 = cmpxchg i64* bitcast (%swift.type*** @field_type_vector_Position to i64*), i64 0, i64 %7 seq_cst seq_cst
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  br i1 %9, label %done, label %race_lost

race_lost:                                        ; preds = %build_field_types
  call void @rt_swift_slowDealloc(i8* %2, i64 24, i64 7) #1
  %11 = inttoptr i64 %10 to %swift.type**
  br label %done

done:                                             ; preds = %race_lost, %build_field_types, %entry
  %12 = phi %swift.type** [ %0, %entry ], [ %3, %build_field_types ], [ %11, %race_lost ]
  ret %swift.type** %12
}

; Function Attrs: nounwind readnone
define %swift.type* @_TMaO8Location8Position() #7 {
entry:
  ret %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location8Position, i32 0, i32 1) to %swift.type*)
}

define linkonce_odr hidden void @_TwXXV8Location8Location([24 x i8]* %buffer, %swift.type* %Location) #6 {
entry:
  %storage-slot = bitcast [24 x i8]* %buffer to %V8Location8Location**
  %0 = load %V8Location8Location*, %V8Location8Location** %storage-slot, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %1 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %2 = load %objc_object*, %objc_object** %1, align 8
  call void @swift_unknownRelease(%objc_object* %2) #1
  %3 = bitcast [24 x i8]* %buffer to i8**
  %storage = load i8*, i8** %3, align 8
  call void @rt_swift_slowDealloc(i8* %storage, i64 48, i64 7) #1
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @rt_swift_slowDealloc(i8*, i64, i64) #8 {
entry:
  %load = load void (i8*, i64, i64)*, void (i8*, i64, i64)** @_swift_slowDealloc
  tail call void %load(i8* %0, i64 %1, i64 %2)
  ret void
}

define linkonce_odr hidden %swift.opaque* @_TwCPV8Location8Location([24 x i8]* %dest, [24 x i8]* %src, %swift.type* %Location) #6 {
entry:
  %0 = call noalias i8* @rt_swift_slowAlloc(i64 48, i64 7) #1
  %1 = bitcast [24 x i8]* %dest to i8**
  store i8* %0, i8** %1, align 8
  %2 = bitcast i8* %0 to %V8Location8Location*
  %storage-slot = bitcast [24 x i8]* %src to %V8Location8Location**
  %3 = load %V8Location8Location*, %V8Location8Location** %storage-slot, align 8
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 0
  %.coordinate1 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i32 0, i32 0
  %4 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate to i8*
  %5 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 24, i32 8, i1 false)
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 1
  %.name2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name2._core = getelementptr inbounds %SS, %SS* %.name2, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %.name2._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 0
  %6 = bitcast %GSqSv_* %.name2._core._baseAddress to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %7, i64* %8, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name2._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 1
  %9 = bitcast %Su* %.name._core._countAndFlags to i8*
  %10 = bitcast %Su* %.name2._core._countAndFlags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %.name2._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 2
  %11 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %12 = bitcast %GSqPs9AnyObject__* %.name2._core._owner to %objc_object**
  %13 = load %objc_object*, %objc_object** %12, align 8
  call void @swift_unknownRetain(%objc_object* %13) #1
  store %objc_object* %13, %objc_object** %11, align 8
  %14 = bitcast %V8Location8Location* %2 to %swift.opaque*
  ret %swift.opaque* %14
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden i8* @rt_swift_slowAlloc(i64, i64) #8 {
entry:
  %load = load i8* (i64, i64)*, i8* (i64, i64)** @_swift_slowAlloc
  %2 = tail call i8* %load(i64 %0, i64 %1)
  ret i8* %2
}

define linkonce_odr hidden %swift.opaque* @_TwprV8Location8Location([24 x i8]* %buffer, %swift.type* %Location) #6 {
entry:
  %storage-slot = bitcast [24 x i8]* %buffer to %V8Location8Location**
  %0 = load %V8Location8Location*, %V8Location8Location** %storage-slot, align 8
  %1 = bitcast %V8Location8Location* %0 to %swift.opaque*
  ret %swift.opaque* %1
}

define linkonce_odr hidden void @_TwdeV8Location8Location([24 x i8]* %buffer, %swift.type* %Location) #6 {
entry:
  %0 = bitcast [24 x i8]* %buffer to i8**
  %storage = load i8*, i8** %0, align 8
  call void @rt_swift_slowDealloc(i8* %storage, i64 48, i64 7) #1
  ret void
}

define linkonce_odr hidden void @_TwxxV8Location8Location(%swift.opaque* %object, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %object to %V8Location8Location*
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %1 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %2 = load %objc_object*, %objc_object** %1, align 8
  call void @swift_unknownRelease(%objc_object* %2) #1
  ret void
}

define linkonce_odr hidden %swift.opaque* @_TwCpV8Location8Location([24 x i8]* %dest, %swift.opaque* %src, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %src to %V8Location8Location*
  %1 = call noalias i8* @rt_swift_slowAlloc(i64 48, i64 7) #1
  %2 = bitcast [24 x i8]* %dest to i8**
  store i8* %1, i8** %2, align 8
  %3 = bitcast i8* %1 to %V8Location8Location*
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i32 0, i32 0
  %.coordinate1 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %4 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate to i8*
  %5 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 24, i32 8, i1 false)
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i32 0, i32 1
  %.name2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name2._core = getelementptr inbounds %SS, %SS* %.name2, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %.name2._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 0
  %6 = bitcast %GSqSv_* %.name2._core._baseAddress to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %7, i64* %8, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name2._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 1
  %9 = bitcast %Su* %.name._core._countAndFlags to i8*
  %10 = bitcast %Su* %.name2._core._countAndFlags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %.name2._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 2
  %11 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %12 = bitcast %GSqPs9AnyObject__* %.name2._core._owner to %objc_object**
  %13 = load %objc_object*, %objc_object** %12, align 8
  call void @swift_unknownRetain(%objc_object* %13) #1
  store %objc_object* %13, %objc_object** %11, align 8
  %14 = bitcast %V8Location8Location* %3 to %swift.opaque*
  ret %swift.opaque* %14
}

define linkonce_odr hidden %swift.opaque* @_TwcpV8Location8Location(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %dest to %V8Location8Location*
  %1 = bitcast %swift.opaque* %src to %V8Location8Location*
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate1 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %2 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate to i8*
  %3 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 24, i32 8, i1 false)
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name2._core = getelementptr inbounds %SS, %SS* %.name2, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %.name2._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 0
  %4 = bitcast %GSqSv_* %.name2._core._baseAddress to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %5, i64* %6, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name2._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 1
  %7 = bitcast %Su* %.name._core._countAndFlags to i8*
  %8 = bitcast %Su* %.name2._core._countAndFlags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 8, i1 false)
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %.name2._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 2
  %9 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %10 = bitcast %GSqPs9AnyObject__* %.name2._core._owner to %objc_object**
  %11 = load %objc_object*, %objc_object** %10, align 8
  call void @swift_unknownRetain(%objc_object* %11) #1
  store %objc_object* %11, %objc_object** %9, align 8
  %12 = bitcast %V8Location8Location* %0 to %swift.opaque*
  ret %swift.opaque* %12
}

define linkonce_odr hidden %swift.opaque* @_TwcaV8Location8Location(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %dest to %V8Location8Location*
  %1 = bitcast %swift.opaque* %src to %V8Location8Location*
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate1 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %.coordinate1.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1, i32 0, i32 0
  %2 = bitcast %O8Location8Position* %.coordinate1.elt to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate1.elt, i32 0, i32 1
  %5 = bitcast [1 x i8]* %4 to i2*
  %6 = load i2, i2* %5, align 8
  %7 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %9 = bitcast [1 x i8]* %8 to i2*
  store i2 %6, i2* %9, align 8
  %.coordinate.elt2 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate1.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1, i32 0, i32 2
  %.coordinate.elt2._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt2, i32 0, i32 0
  %.coordinate1.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate1.elt3, i32 0, i32 0
  %10 = load double, double* %.coordinate1.elt3._value, align 8
  store double %10, double* %.coordinate.elt2._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %11 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %12, i64* %13, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  %14 = load i64, i64* %.name4._core._countAndFlags._value, align 8
  store i64 %14, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %15 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %16 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to %objc_object**
  %17 = load %objc_object*, %objc_object** %15, align 8
  %18 = load %objc_object*, %objc_object** %16, align 8
  call void @swift_unknownRetain(%objc_object* %18) #1
  store %objc_object* %18, %objc_object** %15, align 8
  call void @swift_unknownRelease(%objc_object* %17) #1
  %19 = bitcast %V8Location8Location* %0 to %swift.opaque*
  ret %swift.opaque* %19
}

define linkonce_odr hidden %swift.opaque* @_TwTkV8Location8Location([24 x i8]* %dest, %swift.opaque* %src, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %src to %V8Location8Location*
  %1 = call noalias i8* @rt_swift_slowAlloc(i64 48, i64 7) #1
  %2 = bitcast [24 x i8]* %dest to i8**
  store i8* %1, i8** %2, align 8
  %3 = bitcast i8* %1 to %V8Location8Location*
  %4 = bitcast %V8Location8Location* %3 to i8*
  %5 = bitcast %V8Location8Location* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 48, i32 8, i1 false)
  %6 = bitcast %V8Location8Location* %3 to %swift.opaque*
  ret %swift.opaque* %6
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memcpy48_8(i8*, i8*, %swift.type*) #1 {
entry:
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 48, i32 8, i1 false)
  ret i8* %0
}

define linkonce_odr hidden %swift.opaque* @_TwtaV8Location8Location(%swift.opaque* %dest, %swift.opaque* %src, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %dest to %V8Location8Location*
  %1 = bitcast %swift.opaque* %src to %V8Location8Location*
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 0
  %.coordinate1 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 0
  %.coordinate.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 0
  %.coordinate1.elt = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1, i32 0, i32 0
  %2 = bitcast %O8Location8Position* %.coordinate1.elt to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate1.elt, i32 0, i32 1
  %5 = bitcast [1 x i8]* %4 to i2*
  %6 = load i2, i2* %5, align 8
  %7 = bitcast %O8Location8Position* %.coordinate.elt to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %O8Location8Position, %O8Location8Position* %.coordinate.elt, i32 0, i32 1
  %9 = bitcast [1 x i8]* %8 to i2*
  store i2 %6, i2* %9, align 8
  %.coordinate.elt2 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate, i32 0, i32 2
  %.coordinate1.elt3 = getelementptr inbounds <{ %O8Location8Position, [7 x i8], %Sd }>, <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1, i32 0, i32 2
  %.coordinate.elt2._value = getelementptr inbounds %Sd, %Sd* %.coordinate.elt2, i32 0, i32 0
  %.coordinate1.elt3._value = getelementptr inbounds %Sd, %Sd* %.coordinate1.elt3, i32 0, i32 0
  %10 = load double, double* %.coordinate1.elt3._value, align 8
  store double %10, double* %.coordinate.elt2._value, align 8
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %0, i32 0, i32 1
  %.name4 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %1, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name4._core = getelementptr inbounds %SS, %SS* %.name4, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %.name4._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 0
  %11 = bitcast %GSqSv_* %.name4._core._baseAddress to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %12, i64* %13, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name4._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 1
  %.name._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name._core._countAndFlags, i32 0, i32 0
  %.name4._core._countAndFlags._value = getelementptr inbounds %Su, %Su* %.name4._core._countAndFlags, i32 0, i32 0
  %14 = load i64, i64* %.name4._core._countAndFlags._value, align 8
  store i64 %14, i64* %.name._core._countAndFlags._value, align 8
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %.name4._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name4._core, i32 0, i32 2
  %15 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %16 = bitcast %GSqPs9AnyObject__* %.name4._core._owner to %objc_object**
  %17 = load %objc_object*, %objc_object** %15, align 8
  %18 = load %objc_object*, %objc_object** %16, align 8
  store %objc_object* %18, %objc_object** %15, align 8
  call void @swift_unknownRelease(%objc_object* %17) #1
  %19 = bitcast %V8Location8Location* %0 to %swift.opaque*
  ret %swift.opaque* %19
}

define linkonce_odr hidden %swift.opaque* @_TwalV8Location8Location([24 x i8]* %buffer, %swift.type* %Location) #6 {
entry:
  %0 = call noalias i8* @rt_swift_slowAlloc(i64 48, i64 7) #1
  %1 = bitcast [24 x i8]* %buffer to i8**
  store i8* %0, i8** %1, align 8
  %2 = bitcast i8* %0 to %V8Location8Location*
  %3 = bitcast %V8Location8Location* %2 to %swift.opaque*
  ret %swift.opaque* %3
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_copy_outline_pointer(i8**, i8**, %swift.type*) #1 {
entry:
  %3 = load i8*, i8** %1, align 8
  store i8* %3, i8** %0, align 8
  ret i8* %3
}

define linkonce_odr hidden void @_TwXxV8Location8Location(%swift.opaque* %array, i64 %count, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %array to %V8Location8Location*
  br label %iter

iter:                                             ; preds = %loop, %entry
  %1 = phi i64 [ %count, %entry ], [ %6, %loop ]
  %2 = phi %V8Location8Location* [ %0, %entry ], [ %7, %loop ]
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %exit, label %loop

loop:                                             ; preds = %iter
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %4 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %5 = load %objc_object*, %objc_object** %4, align 8
  call void @swift_unknownRelease(%objc_object* %5) #1
  %6 = sub i64 %1, 1
  %7 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %2, i64 1
  br label %iter

exit:                                             ; preds = %iter
  ret void
}

define linkonce_odr hidden %swift.opaque* @_TwCcV8Location8Location(%swift.opaque* %dest, %swift.opaque* %src, i64 %count, %swift.type* %Location) #6 {
entry:
  %0 = bitcast %swift.opaque* %dest to %V8Location8Location*
  %1 = bitcast %swift.opaque* %src to %V8Location8Location*
  br label %iter

iter:                                             ; preds = %loop, %entry
  %2 = phi i64 [ %count, %entry ], [ %16, %loop ]
  %3 = phi %V8Location8Location* [ %0, %entry ], [ %17, %loop ]
  %4 = phi %V8Location8Location* [ %1, %entry ], [ %18, %loop ]
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %exit, label %loop

loop:                                             ; preds = %iter
  %.coordinate = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i32 0, i32 0
  %.coordinate1 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %4, i32 0, i32 0
  %6 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate to i8*
  %7 = bitcast <{ %O8Location8Position, [7 x i8], %Sd }>* %.coordinate1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 24, i32 8, i1 false)
  %.name = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i32 0, i32 1
  %.name2 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %4, i32 0, i32 1
  %.name._core = getelementptr inbounds %SS, %SS* %.name, i32 0, i32 0
  %.name2._core = getelementptr inbounds %SS, %SS* %.name2, i32 0, i32 0
  %.name._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 0
  %.name2._core._baseAddress = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 0
  %8 = bitcast %GSqSv_* %.name2._core._baseAddress to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %GSqSv_* %.name._core._baseAddress to i64*
  store i64 %9, i64* %10, align 8
  %.name._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 1
  %.name2._core._countAndFlags = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 1
  %11 = bitcast %Su* %.name._core._countAndFlags to i8*
  %12 = bitcast %Su* %.name2._core._countAndFlags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %.name._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name._core, i32 0, i32 2
  %.name2._core._owner = getelementptr inbounds %Vs11_StringCore, %Vs11_StringCore* %.name2._core, i32 0, i32 2
  %13 = bitcast %GSqPs9AnyObject__* %.name._core._owner to %objc_object**
  %14 = bitcast %GSqPs9AnyObject__* %.name2._core._owner to %objc_object**
  %15 = load %objc_object*, %objc_object** %14, align 8
  call void @swift_unknownRetain(%objc_object* %15) #1
  store %objc_object* %15, %objc_object** %13, align 8
  %16 = sub i64 %2, 1
  %17 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %3, i64 1
  %18 = getelementptr inbounds %V8Location8Location, %V8Location8Location* %4, i64 1
  br label %iter

exit:                                             ; preds = %iter
  %19 = bitcast %V8Location8Location* %0 to %swift.opaque*
  ret %swift.opaque* %19
}

; Function Attrs: nounwind
define linkonce_odr hidden i8* @__swift_memmove_array48_8(i8*, i8*, i64, %swift.type*) #1 {
entry:
  %4 = mul nuw i64 %2, 48
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %0, i8* %1, i64 %4, i32 8, i1 false)
  ret i8* %0
}

define private %swift.type** @get_field_types_Location(%swift.type* %Location) #6 {
entry:
  %0 = load %swift.type**, %swift.type*** @field_type_vector_Location, align 8
  %1 = icmp eq %swift.type** %0, null
  br i1 %1, label %build_field_types, label %done

build_field_types:                                ; preds = %entry
  %2 = call noalias i8* @rt_swift_slowAlloc(i64 16, i64 7) #1
  %3 = bitcast i8* %2 to %swift.type**
  %4 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 0
  %5 = call %swift.type* @_TMaTO8Location8PositionSd_() #4
  store %swift.type* %5, %swift.type** %4, align 8
  %6 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 1
  store %swift.type* @_TMSS, %swift.type** %6, align 8
  %7 = ptrtoint %swift.type** %3 to i64
  %8 = cmpxchg i64* bitcast (%swift.type*** @field_type_vector_Location to i64*), i64 0, i64 %7 seq_cst seq_cst
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  br i1 %9, label %done, label %race_lost

race_lost:                                        ; preds = %build_field_types
  call void @rt_swift_slowDealloc(i8* %2, i64 16, i64 7) #1
  %11 = inttoptr i64 %10 to %swift.type**
  br label %done

done:                                             ; preds = %race_lost, %build_field_types, %entry
  %12 = phi %swift.type** [ %0, %entry ], [ %3, %build_field_types ], [ %11, %race_lost ]
  ret %swift.type** %12
}

; Function Attrs: nounwind readnone
define %swift.type* @_TMaV8Location8Location() #7 {
entry:
  ret %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type*, i64, i64 }>, <{ i8**, i64, i64, %swift.type*, i64, i64 }>* @_TMfV8Location8Location, i32 0, i32 1) to %swift.type*)
}

define private %swift.type** @get_field_types_LocationWrapper(%swift.type* %LocationWrapper) #6 {
entry:
  %0 = load %swift.type**, %swift.type*** @field_type_vector_LocationWrapper, align 8
  %1 = icmp eq %swift.type** %0, null
  br i1 %1, label %build_field_types, label %done

build_field_types:                                ; preds = %entry
  %2 = call noalias i8* @rt_swift_slowAlloc(i64 8, i64 7) #1
  %3 = bitcast i8* %2 to %swift.type**
  %4 = getelementptr inbounds %swift.type*, %swift.type** %3, i32 0
  store %swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type*, i64, i64 }>, <{ i8**, i64, i64, %swift.type*, i64, i64 }>* @_TMfV8Location8Location, i32 0, i32 1) to %swift.type*), %swift.type** %4, align 8
  %5 = ptrtoint %swift.type** %3 to i64
  %6 = cmpxchg i64* bitcast (%swift.type*** @field_type_vector_LocationWrapper to i64*), i64 0, i64 %5 seq_cst seq_cst
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  br i1 %7, label %done, label %race_lost

race_lost:                                        ; preds = %build_field_types
  call void @rt_swift_slowDealloc(i8* %2, i64 8, i64 7) #1
  %9 = inttoptr i64 %8 to %swift.type**
  br label %done

done:                                             ; preds = %race_lost, %build_field_types, %entry
  %10 = phi %swift.type** [ %0, %entry ], [ %3, %build_field_types ], [ %9, %race_lost ]
  ret %swift.type** %10
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %objc_class* @rt_swift_getInitializedObjCClass(%objc_class*) #8 {
entry:
  %load = load %objc_class* (%objc_class*)*, %objc_class* (%objc_class*)** @_swift_getInitializedObjCClass
  %1 = tail call %objc_class* %load(%objc_class* %0)
  ret %objc_class* %1
}

define private %swift.type** @get_field_types_LocationFunctions(%swift.type* %LocationFunctions) #6 {
entry:
  %0 = load %swift.type**, %swift.type*** @field_type_vector_LocationFunctions, align 8
  %1 = icmp eq %swift.type** %0, null
  br i1 %1, label %build_field_types, label %done

build_field_types:                                ; preds = %entry
  %2 = call noalias i8* @rt_swift_slowAlloc(i64 0, i64 7) #1
  %3 = bitcast i8* %2 to %swift.type**
  %4 = ptrtoint %swift.type** %3 to i64
  %5 = cmpxchg i64* bitcast (%swift.type*** @field_type_vector_LocationFunctions to i64*), i64 0, i64 %4 seq_cst seq_cst
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  br i1 %6, label %done, label %race_lost

race_lost:                                        ; preds = %build_field_types
  call void @rt_swift_slowDealloc(i8* %2, i64 0, i64 7) #1
  %8 = inttoptr i64 %7 to %swift.type**
  br label %done

done:                                             ; preds = %race_lost, %build_field_types, %entry
  %9 = phi %swift.type** [ %0, %entry ], [ %3, %build_field_types ], [ %8, %race_lost ]
  ret %swift.type** %9
}

; Function Attrs: nounwind readnone
define linkonce_odr hidden %swift.type* @_TMaTO8Location8PositionSd_() #7 {
entry:
  %0 = load %swift.type*, %swift.type** @_TMLTO8Location8PositionSd_, align 8
  %1 = icmp eq %swift.type* %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call %swift.type* @swift_getTupleTypeMetadata2(%swift.type* bitcast (i64* getelementptr inbounds (<{ i8**, i64, i64, %swift.type* }>, <{ i8**, i64, i64, %swift.type* }>* @_TMfO8Location8Position, i32 0, i32 1) to %swift.type*), %swift.type* @_TMSd, i8* null, i8** null) #1
  store atomic %swift.type* %2, %swift.type** @_TMLTO8Location8PositionSd_ release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi %swift.type* [ %0, %entry ], [ %2, %cacheIsNull ]
  ret %swift.type* %3
}

declare %swift.type* @swift_getTupleTypeMetadata2(%swift.type*, %swift.type*, i8*, i8**)

declare void @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #6

define linkonce_odr hidden void @_TTSfq0n_k_k___TFFVs12StaticString14withUTF8BufferurFFGSRVs5UInt8_xxU_FS0_T_(i8, %Vs6UInt64* nocapture dereferenceable(8), %Si* nocapture dereferenceable(8)) #6 {
entry:
  %._value = getelementptr inbounds %Vs6UInt64, %Vs6UInt64* %1, i32 0, i32 0
  %3 = load i64, i64* %._value, align 8
  %._value1 = getelementptr inbounds %Si, %Si* %2, i32 0, i32 0
  %4 = load i64, i64* %._value1, align 8
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %25, label %6

; <label>:6                                       ; preds = %entry
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %4, i64 8)
  %8 = extractvalue { i64, i1 } %7, 0
  %9 = extractvalue { i64, i1 } %7, 1
  br i1 %9, label %26, label %10

; <label>:10                                      ; preds = %6
  br label %11

; <label>:11                                      ; preds = %10
  %12 = icmp ult i64 %8, 64
  %13 = call i1 @llvm.expect.i1(i1 %12, i1 true)
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %11
  call void @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([46 x i8]* @54 to i64), i64 45, i8 2, i64 ptrtoint ([173 x i8]* @55 to i64), i64 172, i8 2, i64 6325, i32 1)
  unreachable

; <label>:15                                      ; preds = %11
  br label %16

; <label>:16                                      ; preds = %15
  %17 = zext i8 %0 to i64
  %18 = shl i64 %17, %8
  %19 = or i64 %3, %18
  %._value2 = getelementptr inbounds %Vs6UInt64, %Vs6UInt64* %1, i32 0, i32 0
  store i64 %19, i64* %._value2, align 8
  %20 = load i64, i64* %._value1, align 8
  %21 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 1)
  %22 = extractvalue { i64, i1 } %21, 0
  %23 = extractvalue { i64, i1 } %21, 1
  br i1 %23, label %27, label %24

; <label>:24                                      ; preds = %16
  %._value3 = getelementptr inbounds %Si, %Si* %2, i32 0, i32 0
  store i64 %22, i64* %._value3, align 8
  ret void

; <label>:25                                      ; preds = %entry
  call void @llvm.trap()
  unreachable

; <label>:26                                      ; preds = %6
  call void @llvm.trap()
  unreachable

; <label>:27                                      ; preds = %16
  call void @llvm.trap()
  unreachable
}

define linkonce_odr hidden { i64, i64 } @_TTSfq4n_n_d___TTSgq5Vs5UInt8___TFSRCfT5startGSqGSPx__5countSi_GSRx_(i64, i64) #6 {
entry:
  br label %2

; <label>:2                                       ; preds = %entry
  %3 = icmp sge i64 %1, 0
  %4 = call i1 @llvm.expect.i1(i1 %3, i1 true)
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %2
  call void @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([40 x i8]* @52 to i64), i64 39, i8 2, i64 ptrtoint ([182 x i8]* @51 to i64), i64 181, i8 2, i64 366, i32 1)
  unreachable

; <label>:6                                       ; preds = %2
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %12, label %8

; <label>:8                                       ; preds = %6
  %9 = icmp eq i64 %0, 0
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %8
  br label %17

; <label>:11                                      ; preds = %8
  call void @_TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([54 x i8]* @53 to i64), i64 53, i8 2, i64 ptrtoint ([182 x i8]* @51 to i64), i64 181, i8 2, i64 368, i32 1)
  unreachable

; <label>:12                                      ; preds = %6
  br label %13

; <label>:13                                      ; preds = %12
  %14 = icmp eq i64 %0, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %13
  br label %24

; <label>:16                                      ; preds = %13
  br label %17

; <label>:17                                      ; preds = %16, %10
  %18 = inttoptr i64 %0 to i8*
  %19 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %1, i64 1)
  %20 = extractvalue { i64, i1 } %19, 0
  %21 = extractvalue { i64, i1 } %19, 1
  %22 = getelementptr inbounds i8, i8* %18, i64 %20
  %23 = ptrtoint i8* %22 to i64
  br label %24

; <label>:24                                      ; preds = %15, %17
  %25 = phi i64 [ %23, %17 ], [ %0, %15 ]
  %26 = insertvalue { i64, i64 } undef, i64 %0, 0
  %27 = insertvalue { i64, i64 } %26, i64 %25, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

define linkonce_odr hidden void @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_(i64, i64, i64, i64, i8, i64, i64, i64, i64) #6 {
entry:
  %9 = call noalias %swift.refcounted* @rt_swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata.10, i32 0, i32 2), i64 64, i64 7) #1
  %10 = bitcast %swift.refcounted* %9 to <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>*
  %11 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %10, i32 0, i32 1
  %._position = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %11, i32 0, i32 0
  %12 = bitcast %GSqGSPVs5UInt8__* %._position to i64*
  store i64 %5, i64* %12, align 8
  %._end = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %11, i32 0, i32 1
  %13 = bitcast %GSqGSPVs5UInt8__* %._end to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %10, i32 0, i32 2
  %._position1 = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %14, i32 0, i32 0
  %15 = bitcast %GSqGSPVs5UInt8__* %._position1 to i64*
  store i64 %0, i64* %15, align 8
  %._end2 = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %14, i32 0, i32 1
  %16 = bitcast %GSqGSPVs5UInt8__* %._end2 to i64*
  store i64 %1, i64* %16, align 8
  %17 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %10, i32 0, i32 3
  %._value = getelementptr inbounds %Su, %Su* %17, i32 0, i32 0
  store i64 %7, i64* %._value, align 8
  %18 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %10, i32 0, i32 4
  %._value3 = getelementptr inbounds %Su, %Su* %18, i32 0, i32 0
  store i64 %8, i64* %._value3, align 8
  call void @_TTSfq1n_cl39_TTRXFo_dGSRVs5UInt8___XFo_dGSRS___iT__XFo_dGSRVs5UInt8____n___TTSgq5T____TFVs12StaticString14withUTF8BufferurfFGSRVs5UInt8_xx(%swift.opaque* noalias nocapture sret undef, i64 %2, i64 %3, i8 %4, i8* bitcast (void (i64, i64, %swift.refcounted*)* @_TPA__TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_ to i8*), %swift.refcounted* %9)
  ret void
}

define private void @objectdestroy.6(%swift.refcounted*) #6 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>*
  call void @rt_swift_deallocObject(%swift.refcounted* %0, i64 72, i64 7)
  ret void
}

define internal void @_TPA__TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_(i64, i64, %swift.refcounted*) #6 {
entry:
  %3 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 1
  %._startPtrOrData = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %4, i32 0, i32 0
  %5 = load i64, i64* %._startPtrOrData, align 8
  %._utf8CodeUnitCount = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %4, i32 0, i32 1
  %6 = load i64, i64* %._utf8CodeUnitCount, align 8
  %._flags = getelementptr inbounds %Vs12StaticString, %Vs12StaticString* %4, i32 0, i32 2
  %7 = load i8, i8* %._flags, align 8
  %8 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 3
  %._position = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %8, i32 0, i32 0
  %9 = bitcast %GSqGSPVs5UInt8__* %._position to i64*
  %10 = load i64, i64* %9, align 8
  %._end = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %8, i32 0, i32 1
  %11 = bitcast %GSqGSPVs5UInt8__* %._end to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 4
  %._value = getelementptr inbounds %Su, %Su* %13, i32 0, i32 0
  %14 = load i64, i64* %._value, align 8
  %15 = getelementptr inbounds <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %Vs12StaticString, [7 x i8], %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 5
  %._value1 = getelementptr inbounds %Su, %Su* %15, i32 0, i32 0
  %16 = load i64, i64* %._value1, align 8
  call void @rt_swift_release(%swift.refcounted* %2) #1
  tail call void @_TFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_(i64 %0, i64 %1, i64 %5, i64 %6, i8 %7, i64 %10, i64 %12, i64 %14, i64 %16) #6
  ret void
}

define linkonce_odr hidden void @_TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_(i64, i64, i64, i64, i64, i64, i64, i64) #6 {
entry:
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %30, label %9

; <label>:9                                       ; preds = %entry
  %10 = call i64 @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi(i64 %2, i64 %3)
  %11 = icmp slt i64 %10, 0
  br i1 %11, label %32, label %12

; <label>:12                                      ; preds = %9
  %13 = icmp eq i64 %4, 0
  br i1 %13, label %28, label %14

; <label>:14                                      ; preds = %12
  %15 = call i64 @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi(i64 %4, i64 %5)
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %33, label %17

; <label>:17                                      ; preds = %14
  %18 = icmp eq i64 %0, 0
  br i1 %18, label %26, label %19

; <label>:19                                      ; preds = %17
  %20 = inttoptr i64 %2 to i8*
  %21 = inttoptr i64 %4 to i8*
  %22 = inttoptr i64 %0 to i8*
  %23 = call i64 @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi(i64 %0, i64 %1)
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %34, label %25

; <label>:25                                      ; preds = %19
  call void @_swift_stdlib_reportUnimplementedInitializerInFile(i8* %20, i64 %10, i8* %21, i64 %15, i8* %22, i64 %23, i64 %6, i64 %7, i32 0)
  ret void

; <label>:26                                      ; preds = %17
  br label %27

; <label>:27                                      ; preds = %26
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @50 to i64), i64 57, i8 2, i32 1)
  unreachable

; <label>:28                                      ; preds = %12
  br label %29

; <label>:29                                      ; preds = %28
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @50 to i64), i64 57, i8 2, i32 1)
  unreachable

; <label>:30                                      ; preds = %entry
  br label %31

; <label>:31                                      ; preds = %30
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @50 to i64), i64 57, i8 2, i32 1)
  unreachable

; <label>:32                                      ; preds = %9
  call void @llvm.trap()
  unreachable

; <label>:33                                      ; preds = %14
  call void @llvm.trap()
  unreachable

; <label>:34                                      ; preds = %19
  call void @llvm.trap()
  unreachable
}

define private void @objectdestroy.9(%swift.refcounted*) #6 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>*
  call void @rt_swift_deallocObject(%swift.refcounted* %0, i64 64, i64 7)
  ret void
}

define internal void @_TPA__TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_(i64, i64, %swift.refcounted*) #6 {
entry:
  %3 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 1
  %._position = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %4, i32 0, i32 0
  %5 = bitcast %GSqGSPVs5UInt8__* %._position to i64*
  %6 = load i64, i64* %5, align 8
  %._end = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %4, i32 0, i32 1
  %7 = bitcast %GSqGSPVs5UInt8__* %._end to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 2
  %._position1 = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %9, i32 0, i32 0
  %10 = bitcast %GSqGSPVs5UInt8__* %._position1 to i64*
  %11 = load i64, i64* %10, align 8
  %._end2 = getelementptr inbounds %GSRVs5UInt8_, %GSRVs5UInt8_* %9, i32 0, i32 1
  %12 = bitcast %GSqGSPVs5UInt8__* %._end2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 3
  %._value = getelementptr inbounds %Su, %Su* %14, i32 0, i32 0
  %15 = load i64, i64* %._value, align 8
  %16 = getelementptr inbounds <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>, <{ %swift.refcounted, %GSRVs5UInt8_, %GSRVs5UInt8_, %Su, %Su }>* %3, i32 0, i32 4
  %._value3 = getelementptr inbounds %Su, %Su* %16, i32 0, i32 0
  %17 = load i64, i64* %._value3, align 8
  call void @rt_swift_release(%swift.refcounted* %2) #1
  tail call void @_TFFFFs25_unimplementedInitializerFT9classNameVs12StaticString8initNameS_4fileS_4lineSu6columnSu_Os5NeverU_FGSRVs5UInt8_T_U_FGSRS1__T_U_FGSRS1__T_(i64 %0, i64 %1, i64 %6, i64 %8, i64 %11, i64 %13, i64 %15, i64 %17) #6
  ret void
}

define linkonce_odr hidden i64 @_TTSfq4s___TTSgq5Vs5UInt8___TFSRg5countSi(i64, i64) #6 {
entry:
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = inttoptr i64 %0 to i8*
  br label %6

; <label>:5                                       ; preds = %entry
  br label %21

; <label>:6                                       ; preds = %3
  %7 = phi i8* [ %4, %3 ]
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %23, label %9

; <label>:9                                       ; preds = %6
  %10 = inttoptr i64 %1 to i8*
  %11 = ptrtoint i8* %10 to i64
  %12 = ptrtoint i8* %7 to i64
  %13 = sub i64 %11, %12
  br i1 false, label %25, label %14

; <label>:14                                      ; preds = %9
  %15 = icmp eq i64 %13, -9223372036854775808
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %14
  br label %19

; <label>:17                                      ; preds = %14
  br i1 false, label %26, label %18

; <label>:18                                      ; preds = %17
  br label %19

; <label>:19                                      ; preds = %18, %16
  %20 = sdiv i64 %13, 1
  br label %21

; <label>:21                                      ; preds = %19, %5
  %22 = phi i64 [ 0, %5 ], [ %20, %19 ]
  ret i64 %22

; <label>:23                                      ; preds = %6
  br label %24

; <label>:24                                      ; preds = %23
  call void @_TTSfq4n_n_d_d_n___TFs18_fatalErrorMessageFTVs12StaticStringS_S_Su5flagsVs6UInt32_Os5Never(i64 ptrtoint ([12 x i8]* @6 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @50 to i64), i64 57, i8 2, i32 1)
  unreachable

; <label>:25                                      ; preds = %9
  call void @llvm.trap()
  unreachable

; <label>:26                                      ; preds = %17
  call void @llvm.trap()
  unreachable
}

declare void @_swift_stdlib_reportUnimplementedInitializerInFile(i8*, i64, i8*, i64, i8*, i64, i64, i64, i32) #6

attributes #0 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+fxsr,+mmx,+sse,+sse2,+sse3" }
attributes #1 = { nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { noreturn nounwind }
attributes #6 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" }
attributes #7 = { nounwind readnone "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" }
attributes #8 = { noinline nounwind }
attributes #9 = { noinline "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="core2" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3" }
attributes #10 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !26, !27}

!0 = !{i32 1, !"Objective-C Version", i32 2}
!1 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!2 = !{i32 1, !"Objective-C Image Info Section", !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = !{i32 4, !"Objective-C Garbage Collection", i32 1024}
!4 = !{i32 1, !"Objective-C Class Properties", i32 64}
!5 = !{i32 6, !"Linker Options", !6}
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!7 = !{!"-lswiftCore"}
!8 = !{!"-lswiftFoundation"}
!9 = !{!"-framework", !"Foundation"}
!10 = !{!"-lswiftObjectiveC"}
!11 = !{!"-lswiftDarwin"}
!12 = !{!"-framework", !"CoreServices"}
!13 = !{!"-lswiftIOKit"}
!14 = !{!"-framework", !"IOKit"}
!15 = !{!"-lswiftDispatch"}
!16 = !{!"-framework", !"CoreFoundation"}
!17 = !{!"-framework", !"DiskArbitration"}
!18 = !{!"-framework", !"CFNetwork"}
!19 = !{!"-framework", !"Security"}
!20 = !{!"-lswiftCoreGraphics"}
!21 = !{!"-framework", !"CoreGraphics"}
!22 = !{!"-framework", !"ApplicationServices"}
!23 = !{!"-framework", !"CoreText"}
!24 = !{!"-framework", !"ImageIO"}
!25 = !{!"-lobjc"}
!26 = !{i32 1, !"PIC Level", i32 2}
!27 = !{i32 1, !"Swift Version", i32 4}
